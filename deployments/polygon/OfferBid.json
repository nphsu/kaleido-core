{
  "address": "0x071a9F7eBE1Bd95216742d2B16905b575B5e63B5",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nameRegistry",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "accept",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "spaceMetadata",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "displayStartTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "displayEndTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct Sale.Offer",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "adPoolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "cancel",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "spaceMetadata",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "displayStartTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "displayEndTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct Sale.Offer",
          "name": "prev",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "currentPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "englishAuctionAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eventEmitterAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mediaFactoryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mediaRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nameRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "spaceMetadata",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "displayStartTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "displayEndTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "offer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "offerBidAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "offered",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "spaceMetadata",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "displayStartTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "displayEndTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct Sale.Offer",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openBidAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalReviewAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x98eca6bc84809359b19337c5e29f86aa770c4172df43df6e6d5b2d1d574c7ba6",
  "receipt": {
    "to": null,
    "from": "0x051Eb10CD4d10E18244f40c470c91c72655b7dE9",
    "contractAddress": "0x071a9F7eBE1Bd95216742d2B16905b575B5e63B5",
    "transactionIndex": 60,
    "gasUsed": "1059184",
    "logsBloom": "0x
    "blockHash": "0xd4785447d70e44efc0e08dc8a290bb88c9726036d93ac8d7f084d482d30e0d7a",
    "transactionHash": "0x98eca6bc84809359b19337c5e29f86aa770c4172df43df6e6d5b2d1d574c7ba6",
    "logs": [
      {
        "transactionIndex": 60,
        "blockNumber": 22200514,
        "transactionHash": "0x98eca6bc84809359b19337c5e29f86aa770c4172df43df6e6d5b2d1d574c7ba6",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000051eb10cd4d10e18244f40c470c91c72655b7de9",
          "0x000000000000000000000000b79fad4ca981472442f53d16365fdf0305ffd8e9"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000070e3aac627400000000000000000000000000000000000000000000000000023a18fc798a35c0000000000000000000000000000000000000000000000bc48765525fb27c625780000000000000000000000000000000000000000000000002330ac1cd27c1c0000000000000000000000000000000000000000000000bc4876c609a5eded6578",
        "logIndex": 475,
        "blockHash": "0xd4785447d70e44efc0e08dc8a290bb88c9726036d93ac8d7f084d482d30e0d7a"
      }
    ],
    "blockNumber": 22200514,
    "cumulativeGasUsed": "12104153",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xA21f44Ad2751A5020dBff35f813D90C18f9986b7"
  ],
  "solcInputHash": "3b843421c7cbc4186a9b782888b147b3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nameRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"accept\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"spaceMetadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"displayStartTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"displayEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Sale.Offer\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"cancel\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"spaceMetadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"displayStartTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"displayEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Sale.Offer\",\"name\":\"prev\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"currentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"englishAuctionAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eventEmitterAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mediaFactoryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mediaRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nameRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"spaceMetadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"displayStartTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"displayEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"offer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"offerBidAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"offered\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"spaceMetadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"displayStartTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"displayEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Sale.Offer\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openBidAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalReviewAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"accept(uint256)\":{\"details\":\"Accepts an offer by the Media.\",\"params\":{\"tokenId\":\"uint256 of the token ID\"}},\"adPoolAddress()\":{\"details\":\"Gets the address of AdPool.\"},\"cancel(uint256,address)\":{\"details\":\"Cancels an offer.\",\"params\":{\"sender\":\"address of the msg.sender\",\"tokenId\":\"uint256 of the token ID\"}},\"currentPrice(uint256)\":{\"details\":\"Returns the current price.\",\"params\":{\"tokenId\":\"uint256 of the token ID\"}},\"englishAuctionAddress()\":{\"details\":\"Gets the address of EnglishAuction.\"},\"eventEmitterAddress()\":{\"details\":\"Gets the address of EventEmitter.\"},\"mediaFactoryAddress()\":{\"details\":\"Gets the address of MediaFactory.\"},\"mediaRegistryAddress()\":{\"details\":\"Gets the address of MediaRegistry.\"},\"nameRegistryAddress()\":{\"details\":\"Gets the address of NameRegistry\"},\"offer(string,uint256,uint256,address,uint256)\":{\"details\":\"Offers to buy a period that the sender requests.\",\"params\":{\"displayEndTimestamp\":\"uint256 of the end timestamp for the display\",\"displayStartTimestamp\":\"uint256 of the start timestamp for the display\",\"sender\":\"address of the msg.sender\",\"spaceMetadata\":\"string of the space metadata\",\"value\":\"uint256 of the msg.value\"}},\"offerBidAddress()\":{\"details\":\"Gets the address of OfferBid.\"},\"openBidAddress()\":{\"details\":\"Gets the address of OpenBid.\"},\"owner()\":{\"details\":\"Gets the owner address.\"},\"proposalReviewAddress()\":{\"details\":\"Gets the address of ProposalReview.\"},\"vaultAddress()\":{\"details\":\"Gets the address of Vault.\"}},\"stateVariables\":{\"_offered\":{\"details\":\"Maps a tokenId with offer info\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/peripheries/OfferBid.sol\":\"OfferBid\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/accessors/NameAccessor.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../interfaces/INameRegistry.sol\\\";\\n\\n/// @title NameAccessor - manages the endpoints.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ncontract NameAccessor {\\n\\tINameRegistry internal _nameRegistry;\\n\\n\\t/// @dev Sets the address of NameRegistry.\\n\\t/// @param nameRegistry address of the NameRegistry\\n\\tfunction initialize(address nameRegistry) internal {\\n\\t\\t_nameRegistry = INameRegistry(nameRegistry);\\n\\t}\\n\\n\\t/// @dev Prevents calling a function from anyone except the accepted contracts.\\n\\tmodifier onlyAllowedContract() {\\n\\t\\trequire(_nameRegistry.allowedContracts(msg.sender), \\\"KD013\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t/// @dev Throws if called by any account other than the owner.\\n\\tmodifier onlyOwner() {\\n\\t\\trequire(owner() == msg.sender, \\\"KD012\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t/// @dev Gets the address of NameRegistry\\n\\tfunction nameRegistryAddress() public view returns (address) {\\n\\t\\treturn address(_nameRegistry);\\n\\t}\\n\\n\\t/// @dev Gets the address of AdPool.\\n\\tfunction adPoolAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"AdPool\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of MediaFactory.\\n\\tfunction mediaFactoryAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"MediaFactory\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of MediaRegistry.\\n\\tfunction mediaRegistryAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"MediaRegistry\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of Vault.\\n\\tfunction vaultAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"Vault\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of EventEmitter.\\n\\tfunction eventEmitterAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"EventEmitter\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of EnglishAuction.\\n\\tfunction englishAuctionAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"EnglishAuction\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of OpenBid.\\n\\tfunction openBidAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"OpenBid\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of OfferBid.\\n\\tfunction offerBidAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"OfferBid\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of ProposalReview.\\n\\tfunction proposalReviewAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"ProposalReview\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the owner address.\\n\\tfunction owner() public view returns (address) {\\n\\t\\treturn _nameRegistry.deployer();\\n\\t}\\n}\\n\",\"keccak256\":\"0x1cd127d9c865e6441a0039bfe6af64ac60f5cf5c338d27e9f928f2eec21ca244\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IAdPool.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../libraries/Ad.sol\\\";\\nimport \\\"../libraries/Sale.sol\\\";\\n\\n/// @title IAdPool - stores all ads accorss every space.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IAdPool {\\n\\tfunction allPeriods(uint256 tokenId) external view returns (Ad.Period memory);\\n\\n\\tfunction spaced(string memory spaceMetadata) external view returns (bool);\\n\\n\\t/// @dev Creates a new space for the media account.\\n\\t/// @param spaceMetadata string of the space metadata\\n\\tfunction addSpace(string memory spaceMetadata) external;\\n\\n\\t/// @dev Create a new period for a space. This function requires some params\\n\\t///      to decide which kinds of pricing way and how much price to get started.\\n\\t/// @param proxy address of the media proxy\\n\\t/// @param spaceMetadata string of the space metadata\\n\\t/// @param tokenMetadata string of the token metadata\\n\\t/// @param saleEndTimestamp uint256 of the end timestamp for the sale\\n\\t/// @param displayStartTimestamp uint256 of the start timestamp for the display\\n\\t/// @param displayEndTimestamp uint256 of the end timestamp for the display\\n\\t/// @param pricing uint256 of the pricing way\\n\\t/// @param minPrice uint256 of the minimum price to sell it out\\n\\tfunction addPeriod(\\n\\t\\taddress proxy,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tuint256 saleEndTimestamp,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\tAd.Pricing pricing,\\n\\t\\tuint256 minPrice\\n\\t) external returns (uint256);\\n\\n\\t/// @dev Deletes a period and its token.\\n\\t///      If there is any users locking the fund for the sale, the amount would be transfered\\n\\t///      to the user when deleting the period.\\n\\t/// @param tokenId uint256 of the token ID\\n\\tfunction deletePeriod(uint256 tokenId) external;\\n\\n\\t/// @dev Buys the token that is defined as the specific period on an ad space.\\n\\t///      The price of the token is fixed.\\n\\t/// @param tokenId uint256 of the token ID\\n\\t/// @param msgValue uint256 of the price\\n\\tfunction soldByFixedPrice(uint256 tokenId, uint256 msgValue) external;\\n\\n\\t/// @dev Buys the token that is defined as the specific period on an ad space.\\n\\t///      The price is decreasing as time goes by, that is defined as an Dutch Auction.\\n\\t/// @param tokenId uint256 of the token ID\\n\\t/// @param msgValue uint256 of the price\\n\\tfunction soldByDutchAuction(uint256 tokenId, uint256 msgValue) external;\\n\\n\\t/// @dev Bids to participate in an auction.\\n\\t///      It is defined as an English Auction.\\n\\t/// @param tokenId uint256 of the token ID\\n\\t/// @param msgSender address of the sender\\n\\t/// @param msgValue uint256 of the price\\n\\tfunction bidByEnglishAuction(\\n\\t\\tuint256 tokenId,\\n\\t\\taddress msgSender,\\n\\t\\tuint256 msgValue\\n\\t) external returns (Sale.Bidding memory);\\n\\n\\t/// @dev Receives the token you bidded if you are the successful bidder.\\n\\t/// @param tokenId uint256 of the token ID\\n\\tfunction soldByEnglishAuction(uint256 tokenId)\\n\\t\\texternal\\n\\t\\treturns (address, uint256);\\n\\n\\t/// @dev Bids to participate in an auction.\\n\\t///      It is defined as an Open Bid.\\n\\t/// @param tokenId uint256 of the token ID\\n\\t/// @param proposalMetadata string of the metadata hash\\n\\t/// @param msgSender address of the sender\\n\\t/// @param msgValue uint256 of the price\\n\\tfunction bidWithProposal(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory proposalMetadata,\\n\\t\\taddress msgSender,\\n\\t\\tuint256 msgValue\\n\\t) external;\\n\\n\\t/// @dev Accepts an offer by the Media.\\n\\t/// @param tokenId uint256 of the token ID\\n\\t/// @param tokenMetadata string of the NFT token metadata\\n\\t/// @param offer Sale.Offer\\n\\tfunction acceptOffer(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tSale.Offer memory offer\\n\\t) external;\\n\\n\\tfunction mediaProxyOf(uint256 tokenId) external view returns (address);\\n\\n\\t/// @dev Returns tokenIds tied with the space metadata\\n\\t/// @param spaceMetadata string of the space metadata\\n\\tfunction tokenIdsOf(string memory spaceMetadata)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (uint256[] memory);\\n\\n\\t/// @dev Returns the current price.\\n\\t/// @param tokenId uint256 of the token ID\\n\\tfunction currentPrice(uint256 tokenId) external view returns (uint256);\\n\\n\\t/// @dev Displays the ad content that is approved by the media owner.\\n\\t/// @param spaceMetadata string of the space metadata\\n\\tfunction display(string memory spaceMetadata)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (string memory, uint256);\\n}\\n\",\"keccak256\":\"0x5852d66c1c377716df5e33f0d416f5083e7209cbc1d7f51593f46bd9ae49b728\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IEventEmitter.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../libraries/Ad.sol\\\";\\n\\n/// @title IEventEmitter - emits events.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IEventEmitter {\\n\\tfunction emitNewSpace(string memory metadata) external;\\n\\n\\tfunction emitNewPeriod(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tuint256 saleStartTimestamp,\\n\\t\\tuint256 saleEndTimestamp,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\tAd.Pricing pricing,\\n\\t\\tuint256 minPrice\\n\\t) external;\\n\\n\\tfunction emitDeletePeriod(uint256 tokenId) external;\\n\\n\\tfunction emitBuy(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 msgValue,\\n\\t\\taddress msgSender,\\n\\t\\tuint256 blockTimestamp\\n\\t) external;\\n\\n\\tfunction emitBid(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 msgValue,\\n\\t\\taddress msgSender,\\n\\t\\tuint256 blockTimestamp\\n\\t) external;\\n\\n\\tfunction emitBidWithProposal(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 msgValue,\\n\\t\\taddress msgSender,\\n\\t\\tstring memory metadata,\\n\\t\\tuint256 blockTimestamp\\n\\t) external;\\n\\n\\tfunction emitSelectProposal(uint256 tokenId, address successfulBidder)\\n\\t\\texternal;\\n\\n\\tfunction emitReceiveToken(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 price,\\n\\t\\taddress buyer,\\n\\t\\tuint256 blockTimestamp\\n\\t) external;\\n\\n\\tfunction emitOfferPeriod(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\taddress sender,\\n\\t\\tuint256 price\\n\\t) external;\\n\\n\\tfunction emitCancelOffer(uint256 tokenId) external;\\n\\n\\tfunction emitAcceptOffer(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\tuint256 price\\n\\t) external;\\n\\n\\tfunction emitWithdraw(uint256 amount) external;\\n\\n\\tfunction emitPropose(uint256 tokenId, string memory metadata) external;\\n\\n\\tfunction emitAcceptProposal(uint256 tokenId, string memory metadata) external;\\n\\n\\tfunction emitDenyProposal(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory metadata,\\n\\t\\tstring memory reason,\\n\\t\\tbool offensive\\n\\t) external;\\n\\n\\tfunction emitTransferCustom(\\n\\t\\taddress from,\\n\\t\\taddress to,\\n\\t\\tuint256 tokenId\\n\\t) external;\\n\\n\\tfunction emitNewMedia(\\n\\t\\taddress proxy,\\n\\t\\taddress mediaEOA,\\n\\t\\tstring memory applicationMetadata,\\n\\t\\tstring memory updatableMetadata,\\n\\t\\tuint256 saltNonce\\n\\t) external;\\n\\n\\tfunction emitUpdateMedia(\\n\\t\\taddress proxy,\\n\\t\\taddress mediaEOA,\\n\\t\\tstring memory accountMetadata\\n\\t) external;\\n\\n\\tfunction emitPaymentFailure(address receiver, uint256 price) external;\\n\\n\\tfunction emitReceived(address receiver, uint256 price) external;\\n}\\n\",\"keccak256\":\"0x7ab04e62e2094f870870364d5df7f8ab7f6a646f74fcead70cef4c4a47b23613\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IMediaRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../libraries/Ad.sol\\\";\\n\\n/// @title MediaRegistry - registers a list of media accounts.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IMediaRegistry {\\n\\tstruct Account {\\n\\t\\taddress proxy;\\n\\t\\taddress mediaEOA;\\n\\t\\tstring applicationMetadata;\\n\\t\\tstring updatableMetadata;\\n\\t}\\n\\n\\t/// @dev Returns account info.\\n\\t/// @param proxy address of the proxy contract address\\n\\tfunction allAccounts(address proxy)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (\\n\\t\\t\\taddress,\\n\\t\\t\\taddress,\\n\\t\\t\\tstring memory,\\n\\t\\t\\tstring memory\\n\\t\\t);\\n\\n\\t/// @dev Adds media account.\\n\\t/// @param proxy address of the proxy contract\\n\\t/// @param applicationMetadata string of constant metadata for the defailts of the account\\n\\t/// @param updatableMetadata string of constant metadata for the defailts of the account\\n\\t/// @param mediaEOA address of the media account\\n\\tfunction addMedia(\\n\\t\\taddress proxy,\\n\\t\\tstring memory applicationMetadata,\\n\\t\\tstring memory updatableMetadata,\\n\\t\\taddress mediaEOA\\n\\t) external;\\n\\n\\t/// @dev Updates media account.\\n\\t/// @param metadata string of the account metadata\\n\\t/// @param mediaEOA address of the media account\\n\\tfunction updateMedia(address mediaEOA, string memory metadata) external;\\n\\n\\tfunction updateApplicationMetadata(address proxy, string memory metadata)\\n\\t\\texternal;\\n\\n\\t/// @dev Returns whether the account has created or not.\\n\\t/// @param proxy address of the proxy contract that represents an account.\\n\\tfunction created(address proxy) external view returns (bool);\\n\\n\\t/// @dev Returns the owner of the account.\\n\\t/// @param proxy address of the proxy contract that represents an account.\\n\\tfunction ownerOf(address proxy) external view returns (address);\\n}\\n\",\"keccak256\":\"0xf60005370edf262e5e68ba96deb5fc8b7a0fcb1546ba8c4a6c1793017389c78b\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/INameRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\n/// @title INameRegistry - saves a set of addresses used in the system.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface INameRegistry {\\n\\t/// @dev Sets the address associated with the key name.\\n\\t///      If the address is the contract, not an EOA, it is\\n\\t///      saved as the allowed contract list.\\n\\t/// @param key bytes32 of the key\\n\\t/// @param value address of the value\\n\\tfunction set(bytes32 key, address value) external;\\n\\n\\t/// @dev Gets the address associated with the key name.\\n\\t/// @param key bytes32 of the key\\n\\tfunction get(bytes32 key) external view returns (address);\\n\\n\\t/// @dev Returns whether or not the address is the one that we deployed.\\n\\t/// @param caller address of the msg.sender\\n\\tfunction allowedContracts(address caller) external returns (bool);\\n\\n\\t/// @dev Gets the deployer of NameRegistry.\\n\\tfunction deployer() external view returns (address);\\n}\\n\",\"keccak256\":\"0xa46fe7c81f01262c7daf69b1d7695a6dd507d5a4ab881dab731e3faa992dcb1d\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IOfferBid.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../libraries/Sale.sol\\\";\\n\\n/// @title IOfferBid\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IOfferBid {\\n\\t/// @dev Offers to buy a period that the sender requests.\\n\\t/// @param spaceMetadata string of the space metadata\\n\\t/// @param displayStartTimestamp uint256 of the start timestamp for the display\\n\\t/// @param displayEndTimestamp uint256 of the end timestamp for the display\\n\\t/// @param sender address of the msg.sender\\n\\t/// @param value uint256 of the msg.value\\n\\tfunction offer(\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\taddress sender,\\n\\t\\tuint256 value\\n\\t) external returns (uint256);\\n\\n\\t/// @dev Cancels an offer.\\n\\t/// @param tokenId uint256 of the token ID\\n\\t/// @param sender address of the msg.sender\\n\\tfunction cancel(uint256 tokenId, address sender)\\n\\t\\texternal\\n\\t\\treturns (Sale.Offer memory);\\n\\n\\t/// @dev Accepts an offer by the Media.\\n\\t/// @param tokenId uint256 of the token ID\\n\\tfunction accept(uint256 tokenId) external returns (Sale.Offer memory);\\n\\n\\t/// @dev Returns the current price.\\n\\t/// @param tokenId uint256 of the token ID\\n\\tfunction currentPrice(uint256 tokenId) external view returns (uint256);\\n\\n\\tfunction offered(uint256 tokenId) external view returns (Sale.Offer memory);\\n}\\n\",\"keccak256\":\"0xded2b4f6698d868661056de8beccdddca56e85bdfdd3fade1512edb50dc938fa\",\"license\":\"UNLICENSED\"},\"contracts/libraries/Ad.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nlibrary Ad {\\n\\tuint256 private constant _ID_LENGTH = 100000000000000000000000000000000;\\n\\t// 0.RRP     : Recommended Retail Price\\n\\t// 1.DUTCH   : Dutch Auction\\n\\t// 2.ENGLISH : English Acction\\n\\t// 3.OFFER   : Offered by Others\\n\\t// 4.OPEN    : Open Bid by revealing the content\\n\\tenum Pricing {\\n\\t\\tRRP,\\n\\t\\tDUTCH,\\n\\t\\tENGLISH,\\n\\t\\tOFFER,\\n\\t\\tOPEN\\n\\t}\\n\\tstruct Period {\\n\\t\\taddress mediaProxy;\\n\\t\\tstring spaceMetadata;\\n\\t\\tstring tokenMetadata;\\n\\t\\tuint256 saleStartTimestamp;\\n\\t\\tuint256 saleEndTimestamp;\\n\\t\\tuint256 displayStartTimestamp;\\n\\t\\tuint256 displayEndTimestamp;\\n\\t\\tPricing pricing;\\n\\t\\tuint256 minPrice;\\n\\t\\tuint256 startPrice;\\n\\t\\tbool sold;\\n\\t}\\n\\n\\tfunction id(\\n\\t\\tstring memory metadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp\\n\\t) public pure returns (uint256) {\\n\\t\\treturn\\n\\t\\t\\tuint256(\\n\\t\\t\\t\\tkeccak256(\\n\\t\\t\\t\\t\\tabi.encodePacked(metadata, displayStartTimestamp, displayEndTimestamp)\\n\\t\\t\\t\\t)\\n\\t\\t\\t) % _ID_LENGTH;\\n\\t}\\n}\\n\",\"keccak256\":\"0x47955874c274fa881de288b6af7d7ea36130caf1d64c6e367316278f6e95fd07\",\"license\":\"UNLICENSED\"},\"contracts/libraries/Purchase.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"./Ad.sol\\\";\\n\\nlibrary Purchase {\\n\\tfunction checkBeforeBuy(Ad.Period memory period, uint256 msgValue)\\n\\t\\tpublic\\n\\t\\tpure\\n\\t{\\n\\t\\trequire(period.pricing == Ad.Pricing.RRP, \\\"KD120\\\");\\n\\t\\trequire(!period.sold, \\\"KD121\\\");\\n\\t\\trequire(period.minPrice == msgValue, \\\"KD122\\\");\\n\\t}\\n\\n\\tfunction checkBeforeBuyBasedOnTime(\\n\\t\\tAd.Period memory period,\\n\\t\\tuint256 currentPrice,\\n\\t\\tuint256 blockTimestamp,\\n\\t\\tuint256 msgValue\\n\\t) public pure {\\n\\t\\trequire(period.pricing == Ad.Pricing.DUTCH, \\\"KD123\\\");\\n\\t\\trequire(!period.sold, \\\"KD121\\\");\\n\\t\\trequire(currentPrice <= msgValue, \\\"KD122\\\");\\n\\t\\trequire(period.saleEndTimestamp >= blockTimestamp, \\\"KD129\\\");\\n\\t}\\n\\n\\tfunction checkBeforeBid(\\n\\t\\tAd.Period memory period,\\n\\t\\tuint256 currentPrice,\\n\\t\\tuint256 blockTimestamp,\\n\\t\\tuint256 msgValue\\n\\t) public pure {\\n\\t\\trequire(period.pricing == Ad.Pricing.ENGLISH, \\\"KD124\\\");\\n\\t\\trequire(!period.sold, \\\"KD121\\\");\\n\\t\\trequire(currentPrice < msgValue, \\\"KD122\\\");\\n\\t\\trequire(period.saleEndTimestamp >= blockTimestamp, \\\"KD129\\\");\\n\\t}\\n\\n\\tfunction checkBeforeBidWithProposal(\\n\\t\\tAd.Period memory period,\\n\\t\\tuint256 blockTimestamp,\\n\\t\\tuint256 msgValue\\n\\t) public pure {\\n\\t\\trequire(period.pricing == Ad.Pricing.OPEN, \\\"KD127\\\");\\n\\t\\trequire(!period.sold, \\\"KD121\\\");\\n\\t\\trequire(period.minPrice <= msgValue, \\\"KD122\\\");\\n\\t\\trequire(period.saleEndTimestamp >= blockTimestamp, \\\"KD129\\\");\\n\\t}\\n}\\n\",\"keccak256\":\"0x2d428de10bc0f94c1bf27f95c0daafb364619ecf63d28cae1d0fdf82f238f43f\",\"license\":\"UNLICENSED\"},\"contracts/libraries/Sale.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"./Ad.sol\\\";\\n\\nlibrary Sale {\\n\\tstruct Bidding {\\n\\t\\tuint256 tokenId;\\n\\t\\taddress bidder;\\n\\t\\tuint256 price;\\n\\t}\\n\\tstruct Offer {\\n\\t\\tstring spaceMetadata;\\n\\t\\tuint256 displayStartTimestamp;\\n\\t\\tuint256 displayEndTimestamp;\\n\\t\\taddress sender;\\n\\t\\tuint256 price;\\n\\t}\\n\\tstruct OpenBid {\\n\\t\\tuint256 tokenId;\\n\\t\\taddress sender;\\n\\t\\tuint256 price;\\n\\t\\tstring content;\\n\\t}\\n\\n\\tfunction startPrice(Ad.Period memory period) public pure returns (uint256) {\\n\\t\\tif (period.pricing == Ad.Pricing.RRP) {\\n\\t\\t\\treturn period.minPrice;\\n\\t\\t} else if (period.pricing == Ad.Pricing.DUTCH) {\\n\\t\\t\\treturn period.minPrice * 10;\\n\\t\\t} else if (period.pricing == Ad.Pricing.ENGLISH) {\\n\\t\\t\\treturn period.minPrice;\\n\\t\\t} else if (period.pricing == Ad.Pricing.OFFER) {\\n\\t\\t\\treturn period.minPrice;\\n\\t\\t} else if (period.pricing == Ad.Pricing.OPEN) {\\n\\t\\t\\treturn period.minPrice;\\n\\t\\t} else {\\n\\t\\t\\treturn 0;\\n\\t\\t}\\n\\t}\\n}\\n\",\"keccak256\":\"0x19a427a8ac429adf4fbe2f2a87c4a95e20c794fb99eaa0baa1ae69257541d9c2\",\"license\":\"UNLICENSED\"},\"contracts/peripheries/OfferBid.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../libraries/Ad.sol\\\";\\nimport \\\"../libraries/Purchase.sol\\\";\\nimport \\\"../accessors/NameAccessor.sol\\\";\\nimport \\\"../interfaces/IAdPool.sol\\\";\\nimport \\\"../interfaces/IEventEmitter.sol\\\";\\nimport \\\"../interfaces/IOfferBid.sol\\\";\\nimport \\\"../interfaces/IMediaRegistry.sol\\\";\\n\\ncontract OfferBid is IOfferBid, NameAccessor {\\n\\t/// @dev Maps a tokenId with offer info\\n\\tmapping(uint256 => Sale.Offer) internal _offered;\\n\\n\\tmodifier onlyProxies() {\\n\\t\\trequire(_mediaRegistry().ownerOf(msg.sender) != address(0x0), \\\"KD011\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\tconstructor(address _nameRegistry) {\\n\\t\\tinitialize(_nameRegistry);\\n\\t}\\n\\n\\t/// @inheritdoc IOfferBid\\n\\tfunction offer(\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\taddress sender,\\n\\t\\tuint256 value\\n\\t) external virtual onlyProxies returns (uint256 tokenId) {\\n\\t\\trequire(_adPool().spaced(spaceMetadata), \\\"KD101\\\");\\n\\t\\trequire(displayStartTimestamp < displayEndTimestamp, \\\"KD113\\\");\\n\\t\\ttokenId = Ad.id(spaceMetadata, displayStartTimestamp, displayEndTimestamp);\\n\\t\\t_offered[tokenId] = Sale.Offer(\\n\\t\\t\\tspaceMetadata,\\n\\t\\t\\tdisplayStartTimestamp,\\n\\t\\t\\tdisplayEndTimestamp,\\n\\t\\t\\tsender,\\n\\t\\t\\tvalue\\n\\t\\t);\\n\\t\\t_event().emitOfferPeriod(\\n\\t\\t\\ttokenId,\\n\\t\\t\\tspaceMetadata,\\n\\t\\t\\tdisplayStartTimestamp,\\n\\t\\t\\tdisplayEndTimestamp,\\n\\t\\t\\tsender,\\n\\t\\t\\tvalue\\n\\t\\t);\\n\\t}\\n\\n\\t/// @inheritdoc IOfferBid\\n\\tfunction cancel(uint256 tokenId, address sender)\\n\\t\\texternal\\n\\t\\tvirtual\\n\\t\\tonlyProxies\\n\\t\\treturns (Sale.Offer memory prev)\\n\\t{\\n\\t\\trequire(_offered[tokenId].sender == sender, \\\"KD116\\\");\\n\\t\\tprev = _offered[tokenId];\\n\\t\\tdelete _offered[tokenId];\\n\\t\\t_event().emitCancelOffer(tokenId);\\n\\t}\\n\\n\\t/// @inheritdoc IOfferBid\\n\\tfunction accept(uint256 tokenId)\\n\\t\\texternal\\n\\t\\tvirtual\\n\\t\\tonlyProxies\\n\\t\\treturns (Sale.Offer memory)\\n\\t{\\n\\t\\tSale.Offer memory target = _offered[tokenId];\\n\\t\\trequire(target.sender != address(0), \\\"KD115\\\");\\n\\t\\tdelete _offered[tokenId];\\n\\t\\treturn target;\\n\\t}\\n\\n\\t/// @inheritdoc IOfferBid\\n\\tfunction currentPrice(uint256 tokenId)\\n\\t\\tpublic\\n\\t\\tview\\n\\t\\toverride\\n\\t\\treturns (uint256)\\n\\t{\\n\\t\\treturn _offered[tokenId].price;\\n\\t}\\n\\n\\tfunction offered(uint256 tokenId) external view returns (Sale.Offer memory) {\\n\\t\\treturn _offered[tokenId];\\n\\t}\\n\\n\\t/**\\n\\t * Accessors\\n\\t */\\n\\tfunction _adPool() internal view returns (IAdPool) {\\n\\t\\treturn IAdPool(adPoolAddress());\\n\\t}\\n\\n\\tfunction _event() internal view virtual returns (IEventEmitter) {\\n\\t\\treturn IEventEmitter(eventEmitterAddress());\\n\\t}\\n\\n\\tfunction _mediaRegistry() internal view returns (IMediaRegistry) {\\n\\t\\treturn IMediaRegistry(mediaRegistryAddress());\\n\\t}\\n}\\n\",\"keccak256\":\"0xba98ef8d3e81eedfd3225273a88f09177fde4553dd8df5bc8b85e3e87d3100d9\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161125138038061125183398101604081905261002f91610050565b600080546001600160a01b0319166001600160a01b03831617905550610080565b60006020828403121561006257600080fd5b81516001600160a01b038116811461007957600080fd5b9392505050565b6111c28061008f6000396000f3fe608060405234801561001057600080fd5b50600436106100d05760003560e01c80630106d8eb146100d557806301b99e04146100f3578063171a133d1461011357806319b05f49146101345780632231c1eb1461014757806327b7a2f51461014f578063430bf08a1461016057806357d682c4146101685780636a58767e1461017b5780637a3c4c17146101835780637cf175fb146101a65780638da5cb5b146101ae5780638f6059d6146101b6578063c9cd71b5146101be578063e2f5fc78146101c6578063f0726291146101ce575b600080fd5b6100dd6101d6565b6040516100ea9190610e40565b60405180910390f35b610106610101366004610e54565b610284565b6040516100ea9190610eba565b610126610121366004610f48565b61036e565b6040519081526020016100ea565b610106610142366004610e54565b610686565b6100dd610895565b6000546001600160a01b03166100dd565b6100dd6108c6565b610106610176366004611024565b6108f5565b6100dd610b83565b610126610191366004610e54565b60009081526001602052604090206004015490565b6100dd610bba565b6100dd610bec565b6100dd610c40565b6100dd610c76565b6100dd610ca6565b6100dd610cde565b600080546040516d22b733b634b9b420bab1ba34b7b760911b60208201526001600160a01b0390911690638eaa6ac090602e015b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161023e91815260200190565b602060405180830381865afa15801561025b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027f9190611054565b905090565b61028c610d32565b60008281526001602052604090819020815160a081019092528054829082906102b490611078565b80601f01602080910402602001604051908101604052809291908181526020018280546102e090611078565b801561032d5780601f106103025761010080835404028352916020019161032d565b820191906000526020600020905b81548152906001019060200180831161031057829003601f168201915b5050509183525050600182015460208201526002820154604082015260038201546001600160a01b0316606082015260049091015460809091015292915050565b600080610379610d14565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b81526004016103a49190610e40565b602060405180830381865afa1580156103c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e59190611054565b6001600160a01b031614156104155760405162461bcd60e51b815260040161040c906110b3565b60405180910390fd5b61041d610d1e565b6001600160a01b03166365045a65876040518263ffffffff1660e01b815260040161044891906110d2565b602060405180830381865afa158015610465573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048991906110e5565b6104bd5760405162461bcd60e51b81526020600482015260056024820152644b4431303160d81b604482015260640161040c565b8385106104f45760405162461bcd60e51b81526020600482015260056024820152644b4431313360d81b604482015260640161040c565b6040516303fb4aab60e41b815273E8f3Ed040c0BbF6cE0FE901720bAeE3f808c961E90633fb4aab09061052f90899089908990600401611107565b602060405180830381865af415801561054c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610570919061112c565b6040805160a08101825288815260208082018990528183018890526001600160a01b0387166060830152608082018690526000848152600182529290922081518051949550919390926105c7928492910190610d6a565b50602082015160018201556040820151600282015560608201516003820180546001600160a01b0319166001600160a01b03909216919091179055608090910151600490910155610616610d28565b6001600160a01b031663f4cb45e58288888888886040518763ffffffff1660e01b815260040161064b96959493929190611145565b600060405180830381600087803b15801561066557600080fd5b505af1158015610679573d6000803e3d6000fd5b5050505095945050505050565b61068e610d32565b6000610698610d14565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b81526004016106c39190610e40565b602060405180830381865afa1580156106e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107049190611054565b6001600160a01b0316141561072b5760405162461bcd60e51b815260040161040c906110b3565b600082815260016020526040808220815160a0810190925280548290829061075290611078565b80601f016020809104026020016040519081016040528092919081815260200182805461077e90611078565b80156107cb5780601f106107a0576101008083540402835291602001916107cb565b820191906000526020600020905b8154815290600101906020018083116107ae57829003601f168201915b5050509183525050600182015460208201526002820154604082015260038201546001600160a01b03908116606080840191909152600490930154608090920191909152908201519192501661084b5760405162461bcd60e51b81526020600482015260056024820152644b4431313560d81b604482015260640161040c565b6000838152600160205260408120906108648282610dee565b50600060018201819055600282018190556003820180546001600160a01b031916905560049091015590505b919050565b600080546040516613dc195b909a5960ca1b60208201526001600160a01b0390911690638eaa6ac09060270161020a565b600080546040516415985d5b1d60da1b60208201526001600160a01b0390911690638eaa6ac09060250161020a565b6108fd610d32565b6000610907610d14565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b81526004016109329190610e40565b602060405180830381865afa15801561094f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109739190611054565b6001600160a01b0316141561099a5760405162461bcd60e51b815260040161040c906110b3565b6000838152600160205260409020600301546001600160a01b038381169116146109ee5760405162461bcd60e51b815260206004820152600560248201526425a218989b60d91b604482015260640161040c565b60008381526001602052604090819020815160a08101909252805482908290610a1690611078565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4290611078565b8015610a8f5780601f10610a6457610100808354040283529160200191610a8f565b820191906000526020600020905b815481529060010190602001808311610a7257829003601f168201915b5050509183525050600182810154602080840191909152600284015460408085019190915260038501546001600160a01b0316606085015260049094015460809093019290925260008781529152908120919250610aed8282610dee565b50600060018201819055600282018190556003820180546001600160a01b0319169055600490910155610b1e610d28565b6001600160a01b031663f65f14ac846040518263ffffffff1660e01b8152600401610b4b91815260200190565b600060405180830381600087803b158015610b6557600080fd5b505af1158015610b79573d6000803e3d6000fd5b5050505092915050565b600080546040516c4d65646961526567697374727960981b60208201526001600160a01b0390911690638eaa6ac090602d0161020a565b600080546040516713d999995c909a5960c21b60208201526001600160a01b0390911690638eaa6ac09060280161020a565b60008060009054906101000a90046001600160a01b03166001600160a01b031663d5f394886040518163ffffffff1660e01b8152600401602060405180830381865afa15801561025b573d6000803e3d6000fd5b600080546040516b4d65646961466163746f727960a01b60208201526001600160a01b0390911690638eaa6ac090602c0161020a565b60008054604051651059141bdbdb60d21b60208201526001600160a01b0390911690638eaa6ac09060260161020a565b600080546040516d50726f706f73616c52657669657760901b60208201526001600160a01b0390911690638eaa6ac090602e0161020a565b600080546040516b22bb32b73a22b6b4ba3a32b960a11b60208201526001600160a01b0390911690638eaa6ac090602c0161020a565b600061027f610b83565b600061027f610c76565b600061027f610cde565b6040518060a0016040528060608152602001600081526020016000815260200160006001600160a01b03168152602001600081525090565b828054610d7690611078565b90600052602060002090601f016020900481019282610d985760008555610dde565b82601f10610db157805160ff1916838001178555610dde565b82800160010185558215610dde579182015b82811115610dde578251825591602001919060010190610dc3565b50610dea929150610e2b565b5090565b508054610dfa90611078565b6000825580601f10610e0a575050565b601f016020900490600052602060002090810190610e289190610e2b565b50565b5b80821115610dea5760008155600101610e2c565b6001600160a01b0391909116815260200190565b600060208284031215610e6657600080fd5b5035919050565b6000815180845260005b81811015610e9357602081850181015186830182015201610e77565b81811115610ea5576000602083870101525b50601f01601f19169290920160200192915050565b602081526000825160a06020840152610ed660c0840182610e6d565b9050602084015160408401526040840151606084015260018060a01b036060850151166080840152608084015160a08401528091505092915050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610e2857600080fd5b803561089081610f28565b600080600080600060a08688031215610f6057600080fd5b85356001600160401b0380821115610f7757600080fd5b818801915088601f830112610f8b57600080fd5b813581811115610f9d57610f9d610f12565b604051601f8201601f19908116603f01168101908382118183101715610fc557610fc5610f12565b816040528281528b6020848701011115610fde57600080fd5b826020860160208301376000602084830101528099505050505050602086013593506040860135925061101360608701610f3d565b949793965091946080013592915050565b6000806040838503121561103757600080fd5b82359150602083013561104981610f28565b809150509250929050565b60006020828403121561106657600080fd5b815161107181610f28565b9392505050565b600181811c9082168061108c57607f821691505b602082108114156110ad57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600590820152644b4430313160d81b604082015260600190565b6020815260006110716020830184610e6d565b6000602082840312156110f757600080fd5b8151801515811461107157600080fd5b60608152600061111a6060830186610e6d565b60208301949094525060400152919050565b60006020828403121561113e57600080fd5b5051919050565b86815260c06020820152600061115e60c0830188610e6d565b60408301969096525060608101939093526001600160a01b0391909116608083015260a0909101529291505056fea2646970667358221220294f69a8dc65aabea24e50fe319d426b869f04695da81d8f38c641c1199c129564736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100d05760003560e01c80630106d8eb146100d557806301b99e04146100f3578063171a133d1461011357806319b05f49146101345780632231c1eb1461014757806327b7a2f51461014f578063430bf08a1461016057806357d682c4146101685780636a58767e1461017b5780637a3c4c17146101835780637cf175fb146101a65780638da5cb5b146101ae5780638f6059d6146101b6578063c9cd71b5146101be578063e2f5fc78146101c6578063f0726291146101ce575b600080fd5b6100dd6101d6565b6040516100ea9190610e40565b60405180910390f35b610106610101366004610e54565b610284565b6040516100ea9190610eba565b610126610121366004610f48565b61036e565b6040519081526020016100ea565b610106610142366004610e54565b610686565b6100dd610895565b6000546001600160a01b03166100dd565b6100dd6108c6565b610106610176366004611024565b6108f5565b6100dd610b83565b610126610191366004610e54565b60009081526001602052604090206004015490565b6100dd610bba565b6100dd610bec565b6100dd610c40565b6100dd610c76565b6100dd610ca6565b6100dd610cde565b600080546040516d22b733b634b9b420bab1ba34b7b760911b60208201526001600160a01b0390911690638eaa6ac090602e015b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161023e91815260200190565b602060405180830381865afa15801561025b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027f9190611054565b905090565b61028c610d32565b60008281526001602052604090819020815160a081019092528054829082906102b490611078565b80601f01602080910402602001604051908101604052809291908181526020018280546102e090611078565b801561032d5780601f106103025761010080835404028352916020019161032d565b820191906000526020600020905b81548152906001019060200180831161031057829003601f168201915b5050509183525050600182015460208201526002820154604082015260038201546001600160a01b0316606082015260049091015460809091015292915050565b600080610379610d14565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b81526004016103a49190610e40565b602060405180830381865afa1580156103c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e59190611054565b6001600160a01b031614156104155760405162461bcd60e51b815260040161040c906110b3565b60405180910390fd5b61041d610d1e565b6001600160a01b03166365045a65876040518263ffffffff1660e01b815260040161044891906110d2565b602060405180830381865afa158015610465573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048991906110e5565b6104bd5760405162461bcd60e51b81526020600482015260056024820152644b4431303160d81b604482015260640161040c565b8385106104f45760405162461bcd60e51b81526020600482015260056024820152644b4431313360d81b604482015260640161040c565b6040516303fb4aab60e41b815273__$a79fa16630ef50be54c6520a39abca49df$__90633fb4aab09061052f90899089908990600401611107565b602060405180830381865af415801561054c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610570919061112c565b6040805160a08101825288815260208082018990528183018890526001600160a01b0387166060830152608082018690526000848152600182529290922081518051949550919390926105c7928492910190610d6a565b50602082015160018201556040820151600282015560608201516003820180546001600160a01b0319166001600160a01b03909216919091179055608090910151600490910155610616610d28565b6001600160a01b031663f4cb45e58288888888886040518763ffffffff1660e01b815260040161064b96959493929190611145565b600060405180830381600087803b15801561066557600080fd5b505af1158015610679573d6000803e3d6000fd5b5050505095945050505050565b61068e610d32565b6000610698610d14565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b81526004016106c39190610e40565b602060405180830381865afa1580156106e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107049190611054565b6001600160a01b0316141561072b5760405162461bcd60e51b815260040161040c906110b3565b600082815260016020526040808220815160a0810190925280548290829061075290611078565b80601f016020809104026020016040519081016040528092919081815260200182805461077e90611078565b80156107cb5780601f106107a0576101008083540402835291602001916107cb565b820191906000526020600020905b8154815290600101906020018083116107ae57829003601f168201915b5050509183525050600182015460208201526002820154604082015260038201546001600160a01b03908116606080840191909152600490930154608090920191909152908201519192501661084b5760405162461bcd60e51b81526020600482015260056024820152644b4431313560d81b604482015260640161040c565b6000838152600160205260408120906108648282610dee565b50600060018201819055600282018190556003820180546001600160a01b031916905560049091015590505b919050565b600080546040516613dc195b909a5960ca1b60208201526001600160a01b0390911690638eaa6ac09060270161020a565b600080546040516415985d5b1d60da1b60208201526001600160a01b0390911690638eaa6ac09060250161020a565b6108fd610d32565b6000610907610d14565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b81526004016109329190610e40565b602060405180830381865afa15801561094f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109739190611054565b6001600160a01b0316141561099a5760405162461bcd60e51b815260040161040c906110b3565b6000838152600160205260409020600301546001600160a01b038381169116146109ee5760405162461bcd60e51b815260206004820152600560248201526425a218989b60d91b604482015260640161040c565b60008381526001602052604090819020815160a08101909252805482908290610a1690611078565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4290611078565b8015610a8f5780601f10610a6457610100808354040283529160200191610a8f565b820191906000526020600020905b815481529060010190602001808311610a7257829003601f168201915b5050509183525050600182810154602080840191909152600284015460408085019190915260038501546001600160a01b0316606085015260049094015460809093019290925260008781529152908120919250610aed8282610dee565b50600060018201819055600282018190556003820180546001600160a01b0319169055600490910155610b1e610d28565b6001600160a01b031663f65f14ac846040518263ffffffff1660e01b8152600401610b4b91815260200190565b600060405180830381600087803b158015610b6557600080fd5b505af1158015610b79573d6000803e3d6000fd5b5050505092915050565b600080546040516c4d65646961526567697374727960981b60208201526001600160a01b0390911690638eaa6ac090602d0161020a565b600080546040516713d999995c909a5960c21b60208201526001600160a01b0390911690638eaa6ac09060280161020a565b60008060009054906101000a90046001600160a01b03166001600160a01b031663d5f394886040518163ffffffff1660e01b8152600401602060405180830381865afa15801561025b573d6000803e3d6000fd5b600080546040516b4d65646961466163746f727960a01b60208201526001600160a01b0390911690638eaa6ac090602c0161020a565b60008054604051651059141bdbdb60d21b60208201526001600160a01b0390911690638eaa6ac09060260161020a565b600080546040516d50726f706f73616c52657669657760901b60208201526001600160a01b0390911690638eaa6ac090602e0161020a565b600080546040516b22bb32b73a22b6b4ba3a32b960a11b60208201526001600160a01b0390911690638eaa6ac090602c0161020a565b600061027f610b83565b600061027f610c76565b600061027f610cde565b6040518060a0016040528060608152602001600081526020016000815260200160006001600160a01b03168152602001600081525090565b828054610d7690611078565b90600052602060002090601f016020900481019282610d985760008555610dde565b82601f10610db157805160ff1916838001178555610dde565b82800160010185558215610dde579182015b82811115610dde578251825591602001919060010190610dc3565b50610dea929150610e2b565b5090565b508054610dfa90611078565b6000825580601f10610e0a575050565b601f016020900490600052602060002090810190610e289190610e2b565b50565b5b80821115610dea5760008155600101610e2c565b6001600160a01b0391909116815260200190565b600060208284031215610e6657600080fd5b5035919050565b6000815180845260005b81811015610e9357602081850181015186830182015201610e77565b81811115610ea5576000602083870101525b50601f01601f19169290920160200192915050565b602081526000825160a06020840152610ed660c0840182610e6d565b9050602084015160408401526040840151606084015260018060a01b036060850151166080840152608084015160a08401528091505092915050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610e2857600080fd5b803561089081610f28565b600080600080600060a08688031215610f6057600080fd5b85356001600160401b0380821115610f7757600080fd5b818801915088601f830112610f8b57600080fd5b813581811115610f9d57610f9d610f12565b604051601f8201601f19908116603f01168101908382118183101715610fc557610fc5610f12565b816040528281528b6020848701011115610fde57600080fd5b826020860160208301376000602084830101528099505050505050602086013593506040860135925061101360608701610f3d565b949793965091946080013592915050565b6000806040838503121561103757600080fd5b82359150602083013561104981610f28565b809150509250929050565b60006020828403121561106657600080fd5b815161107181610f28565b9392505050565b600181811c9082168061108c57607f821691505b602082108114156110ad57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600590820152644b4430313160d81b604082015260600190565b6020815260006110716020830184610e6d565b6000602082840312156110f757600080fd5b8151801515811461107157600080fd5b60608152600061111a6060830186610e6d565b60208301949094525060400152919050565b60006020828403121561113e57600080fd5b5051919050565b86815260c06020820152600061115e60c0830188610e6d565b60408301969096525060608101939093526001600160a01b0391909116608083015260a0909101529291505056fea2646970667358221220294f69a8dc65aabea24e50fe319d426b869f04695da81d8f38c641c1199c129564736f6c634300080a0033",
  "libraries": {
    "Ad": "0xE8f3Ed040c0BbF6cE0FE901720bAeE3f808c961E",
    "Purchase": "0x308fCfF177b3DDD94F55A52487Cc0A4F00cbD134"
  },
  "devdoc": {
    "kind": "dev",
    "methods": {
      "accept(uint256)": {
        "details": "Accepts an offer by the Media.",
        "params": {
          "tokenId": "uint256 of the token ID"
        }
      },
      "adPoolAddress()": {
        "details": "Gets the address of AdPool."
      },
      "cancel(uint256,address)": {
        "details": "Cancels an offer.",
        "params": {
          "sender": "address of the msg.sender",
          "tokenId": "uint256 of the token ID"
        }
      },
      "currentPrice(uint256)": {
        "details": "Returns the current price.",
        "params": {
          "tokenId": "uint256 of the token ID"
        }
      },
      "englishAuctionAddress()": {
        "details": "Gets the address of EnglishAuction."
      },
      "eventEmitterAddress()": {
        "details": "Gets the address of EventEmitter."
      },
      "mediaFactoryAddress()": {
        "details": "Gets the address of MediaFactory."
      },
      "mediaRegistryAddress()": {
        "details": "Gets the address of MediaRegistry."
      },
      "nameRegistryAddress()": {
        "details": "Gets the address of NameRegistry"
      },
      "offer(string,uint256,uint256,address,uint256)": {
        "details": "Offers to buy a period that the sender requests.",
        "params": {
          "displayEndTimestamp": "uint256 of the end timestamp for the display",
          "displayStartTimestamp": "uint256 of the start timestamp for the display",
          "sender": "address of the msg.sender",
          "spaceMetadata": "string of the space metadata",
          "value": "uint256 of the msg.value"
        }
      },
      "offerBidAddress()": {
        "details": "Gets the address of OfferBid."
      },
      "openBidAddress()": {
        "details": "Gets the address of OpenBid."
      },
      "owner()": {
        "details": "Gets the owner address."
      },
      "proposalReviewAddress()": {
        "details": "Gets the address of ProposalReview."
      },
      "vaultAddress()": {
        "details": "Gets the address of Vault."
      }
    },
    "stateVariables": {
      "_offered": {
        "details": "Maps a tokenId with offer info"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1886,
        "contract": "contracts/peripheries/OfferBid.sol:OfferBid",
        "label": "_nameRegistry",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(INameRegistry)3992"
      },
      {
        "astId": 6641,
        "contract": "contracts/peripheries/OfferBid.sol:OfferBid",
        "label": "_offered",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Offer)4411_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(INameRegistry)3992": {
        "encoding": "inplace",
        "label": "contract INameRegistry",
        "numberOfBytes": "20"
      },
      "t_mapping(t_uint256,t_struct(Offer)4411_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Sale.Offer)",
        "numberOfBytes": "32",
        "value": "t_struct(Offer)4411_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Offer)4411_storage": {
        "encoding": "inplace",
        "label": "struct Sale.Offer",
        "members": [
          {
            "astId": 4402,
            "contract": "contracts/peripheries/OfferBid.sol:OfferBid",
            "label": "spaceMetadata",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 4404,
            "contract": "contracts/peripheries/OfferBid.sol:OfferBid",
            "label": "displayStartTimestamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 4406,
            "contract": "contracts/peripheries/OfferBid.sol:OfferBid",
            "label": "displayEndTimestamp",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 4408,
            "contract": "contracts/peripheries/OfferBid.sol:OfferBid",
            "label": "sender",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 4410,
            "contract": "contracts/peripheries/OfferBid.sol:OfferBid",
            "label": "price",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}