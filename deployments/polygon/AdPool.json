{
  "address": "0x64939e0cEB5249a1940428044231614dD47c751A",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nameRegistry",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tokenMetadata",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "spaceMetadata",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "displayStartTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "displayEndTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct Sale.Offer",
          "name": "offer",
          "type": "tuple"
        }
      ],
      "name": "acceptOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "adPoolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "proxy",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "spaceMetadata",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenMetadata",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "saleEndTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "displayStartTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "displayEndTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "enum Ad.Pricing",
          "name": "pricing",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "minPrice",
          "type": "uint256"
        }
      ],
      "name": "addPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "metadata",
          "type": "string"
        }
      ],
      "name": "addSpace",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "allPeriods",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "mediaProxy",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "spaceMetadata",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "tokenMetadata",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "saleStartTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "saleEndTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "displayStartTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "displayEndTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "enum Ad.Pricing",
              "name": "pricing",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "minPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startPrice",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "sold",
              "type": "bool"
            }
          ],
          "internalType": "struct Ad.Period",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "msgSender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "msgValue",
          "type": "uint256"
        }
      ],
      "name": "bidByEnglishAuction",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "bidder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct Sale.Bidding",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "proposalMetadata",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "msgSender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "msgValue",
          "type": "uint256"
        }
      ],
      "name": "bidWithProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "currentPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "deletePeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "spaceMetadata",
          "type": "string"
        }
      ],
      "name": "display",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "englishAuctionAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eventEmitterAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mediaFactoryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mediaProxyOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mediaRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nameRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "offerBidAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openBidAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "periods",
      "outputs": [
        {
          "internalType": "address",
          "name": "mediaProxy",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "spaceMetadata",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenMetadata",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "saleStartTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "saleEndTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "displayStartTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "displayEndTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "enum Ad.Pricing",
          "name": "pricing",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "minPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startPrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "sold",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalReviewAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "msgValue",
          "type": "uint256"
        }
      ],
      "name": "soldByDutchAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "soldByEnglishAuction",
      "outputs": [
        {
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "msgValue",
          "type": "uint256"
        }
      ],
      "name": "soldByFixedPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "spaced",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "spaceMetadata",
          "type": "string"
        }
      ],
      "name": "tokenIdsOf",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xc92896dfe813031877e1f592548c58b0ed526d262a3d132379794d697bc750a0",
  "receipt": {
    "to": null,
    "from": "0x051Eb10CD4d10E18244f40c470c91c72655b7dE9",
    "contractAddress": "0x64939e0cEB5249a1940428044231614dD47c751A",
    "transactionIndex": 30,
    "gasUsed": "3040080",
    "logsBloom": "0x
    "blockHash": "0x23e6c507b52772fc32e39cc290651cb58413c182cadd795dbfad792268664c75",
    "transactionHash": "0xc92896dfe813031877e1f592548c58b0ed526d262a3d132379794d697bc750a0",
    "logs": [
      {
        "transactionIndex": 30,
        "blockNumber": 22431210,
        "transactionHash": "0xc92896dfe813031877e1f592548c58b0ed526d262a3d132379794d697bc750a0",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000051eb10cd4d10e18244f40c470c91c72655b7de9",
          "0x0000000000000000000000005b106f49f30620a07b4fbdcebb1e08b70499c851"
        ],
        "data": "0x000000000000000000000000000000000000000000000000014404197ea9c00000000000000000000000000000000000000000000000000016114b548fc6c400000000000000000000000000000000000000000000000c92faff36516a46f02700000000000000000000000000000000000000000000000014cd473b111d0400000000000000000000000000000000000000000000000c92fc433a6ae8f0b027",
        "logIndex": 139,
        "blockHash": "0x23e6c507b52772fc32e39cc290651cb58413c182cadd795dbfad792268664c75"
      }
    ],
    "blockNumber": 22431210,
    "cumulativeGasUsed": "7674879",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xA21f44Ad2751A5020dBff35f813D90C18f9986b7"
  ],
  "solcInputHash": "2567d620e066e33c4c52999fb777c2a6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nameRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenMetadata\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"spaceMetadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"displayStartTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"displayEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Sale.Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"name\":\"acceptOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"spaceMetadata\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenMetadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"saleEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"displayStartTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"displayEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"enum Ad.Pricing\",\"name\":\"pricing\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"}],\"name\":\"addPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"name\":\"addSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"allPeriods\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"mediaProxy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"spaceMetadata\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenMetadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"saleStartTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"displayStartTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"displayEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"enum Ad.Pricing\",\"name\":\"pricing\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"}],\"internalType\":\"struct Ad.Period\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"}],\"name\":\"bidByEnglishAuction\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Sale.Bidding\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"proposalMetadata\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"}],\"name\":\"bidWithProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"currentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"deletePeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"spaceMetadata\",\"type\":\"string\"}],\"name\":\"display\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"englishAuctionAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eventEmitterAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mediaFactoryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mediaProxyOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mediaRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nameRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"offerBidAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openBidAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"periods\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"mediaProxy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"spaceMetadata\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenMetadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"saleStartTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"displayStartTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"displayEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"enum Ad.Pricing\",\"name\":\"pricing\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalReviewAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"}],\"name\":\"soldByDutchAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"soldByEnglishAuction\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"}],\"name\":\"soldByFixedPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"spaced\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"spaceMetadata\",\"type\":\"string\"}],\"name\":\"tokenIdsOf\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Shumpei Koike - <shumpei.koike@bridges.inc>\",\"kind\":\"dev\",\"methods\":{\"acceptOffer(uint256,string,(string,uint256,uint256,address,uint256))\":{\"details\":\"Accepts an offer by the Media.\",\"params\":{\"offer\":\"Sale.Offer\",\"tokenId\":\"uint256 of the token ID\",\"tokenMetadata\":\"string of the NFT token metadata\"}},\"adPoolAddress()\":{\"details\":\"Gets the address of AdPool.\"},\"addPeriod(address,string,string,uint256,uint256,uint256,uint8,uint256)\":{\"details\":\"Create a new period for a space. This function requires some params      to decide which kinds of pricing way and how much price to get started.\",\"params\":{\"displayEndTimestamp\":\"uint256 of the end timestamp for the display\",\"displayStartTimestamp\":\"uint256 of the start timestamp for the display\",\"minPrice\":\"uint256 of the minimum price to sell it out\",\"pricing\":\"uint256 of the pricing way\",\"proxy\":\"address of the media proxy\",\"saleEndTimestamp\":\"uint256 of the end timestamp for the sale\",\"spaceMetadata\":\"string of the space metadata\",\"tokenMetadata\":\"string of the token metadata\"}},\"addSpace(string)\":{\"details\":\"Creates a new space for the media account.\",\"params\":{\"spaceMetadata\":\"string of the space metadata\"}},\"bidByEnglishAuction(uint256,address,uint256)\":{\"details\":\"Bids to participate in an auction.      It is defined as an English Auction.\",\"params\":{\"msgSender\":\"address of the sender\",\"msgValue\":\"uint256 of the price\",\"tokenId\":\"uint256 of the token ID\"}},\"bidWithProposal(uint256,string,address,uint256)\":{\"details\":\"Bids to participate in an auction.      It is defined as an Open Bid.\",\"params\":{\"msgSender\":\"address of the sender\",\"msgValue\":\"uint256 of the price\",\"proposalMetadata\":\"string of the metadata hash\",\"tokenId\":\"uint256 of the token ID\"}},\"currentPrice(uint256)\":{\"details\":\"Returns the current price.\",\"params\":{\"tokenId\":\"uint256 of the token ID\"}},\"deletePeriod(uint256)\":{\"details\":\"Deletes a period and its token.      If there is any users locking the fund for the sale, the amount would be transfered      to the user when deleting the period.\",\"params\":{\"tokenId\":\"uint256 of the token ID\"}},\"display(string)\":{\"details\":\"Displays the ad content that is approved by the media owner.\",\"params\":{\"spaceMetadata\":\"string of the space metadata\"}},\"englishAuctionAddress()\":{\"details\":\"Gets the address of EnglishAuction.\"},\"eventEmitterAddress()\":{\"details\":\"Gets the address of EventEmitter.\"},\"mediaFactoryAddress()\":{\"details\":\"Gets the address of MediaFactory.\"},\"mediaRegistryAddress()\":{\"details\":\"Gets the address of MediaRegistry.\"},\"nameRegistryAddress()\":{\"details\":\"Gets the address of NameRegistry\"},\"offerBidAddress()\":{\"details\":\"Gets the address of OfferBid.\"},\"openBidAddress()\":{\"details\":\"Gets the address of OpenBid.\"},\"owner()\":{\"details\":\"Gets the owner address.\"},\"proposalReviewAddress()\":{\"details\":\"Gets the address of ProposalReview.\"},\"soldByDutchAuction(uint256,uint256)\":{\"details\":\"Buys the token that is defined as the specific period on an ad space.      The price is decreasing as time goes by, that is defined as an Dutch Auction.\",\"params\":{\"msgValue\":\"uint256 of the price\",\"tokenId\":\"uint256 of the token ID\"}},\"soldByEnglishAuction(uint256)\":{\"details\":\"Receives the token you bidded if you are the successful bidder.\",\"params\":{\"tokenId\":\"uint256 of the token ID\"}},\"soldByFixedPrice(uint256,uint256)\":{\"details\":\"Buys the token that is defined as the specific period on an ad space.      The price of the token is fixed.\",\"params\":{\"msgValue\":\"uint256 of the price\",\"tokenId\":\"uint256 of the token ID\"}},\"tokenIdsOf(string)\":{\"details\":\"Returns tokenIds tied with the space metadata\",\"params\":{\"spaceMetadata\":\"string of the space metadata\"}},\"vaultAddress()\":{\"details\":\"Gets the address of Vault.\"}},\"stateVariables\":{\"_periodKeys\":{\"details\":\"Maps the space metadata with tokenIds of ad periods.\"},\"periods\":{\"details\":\"tokenId <- metadata * displayStartTimestamp * displayEndTimestamp\"},\"spaced\":{\"details\":\"Returns spaceId that is tied with space metadata.\"}},\"title\":\"AdPool - stores all ads accorss every space.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/peripheries/AdPool.sol\":\"AdPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/accessors/NameAccessor.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../interfaces/INameRegistry.sol\\\";\\n\\n/// @title NameAccessor - manages the endpoints.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ncontract NameAccessor {\\n\\tINameRegistry internal _nameRegistry;\\n\\n\\t/// @dev Sets the address of NameRegistry.\\n\\t/// @param nameRegistry address of the NameRegistry\\n\\tfunction initialize(address nameRegistry) internal {\\n\\t\\t_nameRegistry = INameRegistry(nameRegistry);\\n\\t}\\n\\n\\t/// @dev Prevents calling a function from anyone except the accepted contracts.\\n\\tmodifier onlyAllowedContract() {\\n\\t\\trequire(_nameRegistry.allowedContracts(msg.sender), \\\"KD013\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t/// @dev Throws if called by any account other than the owner.\\n\\tmodifier onlyOwner() {\\n\\t\\trequire(owner() == msg.sender, \\\"KD012\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t/// @dev Gets the address of NameRegistry\\n\\tfunction nameRegistryAddress() public view returns (address) {\\n\\t\\treturn address(_nameRegistry);\\n\\t}\\n\\n\\t/// @dev Gets the address of AdPool.\\n\\tfunction adPoolAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"AdPool\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of MediaFactory.\\n\\tfunction mediaFactoryAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"MediaFactory\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of MediaRegistry.\\n\\tfunction mediaRegistryAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"MediaRegistry\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of Vault.\\n\\tfunction vaultAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"Vault\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of EventEmitter.\\n\\tfunction eventEmitterAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"EventEmitter\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of EnglishAuction.\\n\\tfunction englishAuctionAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"EnglishAuction\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of OpenBid.\\n\\tfunction openBidAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"OpenBid\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of OfferBid.\\n\\tfunction offerBidAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"OfferBid\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of ProposalReview.\\n\\tfunction proposalReviewAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"ProposalReview\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the owner address.\\n\\tfunction owner() public view returns (address) {\\n\\t\\treturn _nameRegistry.deployer();\\n\\t}\\n}\\n\",\"keccak256\":\"0x1cd127d9c865e6441a0039bfe6af64ac60f5cf5c338d27e9f928f2eec21ca244\",\"license\":\"UNLICENSED\"},\"contracts/common/BlockTimestamp.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\n/// @title BlockTimestamp - gets a block timestamp.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\nabstract contract BlockTimestamp {\\n\\t/// @dev Method that exists purely to be overridden for tests\\n\\tfunction _blockTimestamp() internal view virtual returns (uint256) {\\n\\t\\treturn block.timestamp;\\n\\t}\\n}\\n\",\"keccak256\":\"0x6991a9f03b7e615563901bb2fb1dadcb4fb6cf3f0e7c15a39d22d5929f530940\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IAdPool.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../libraries/Ad.sol\\\";\\nimport \\\"../libraries/Sale.sol\\\";\\n\\n/// @title IAdPool - stores all ads accorss every space.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IAdPool {\\n\\tfunction allPeriods(uint256 tokenId) external view returns (Ad.Period memory);\\n\\n\\tfunction spaced(string memory spaceMetadata) external view returns (bool);\\n\\n\\t/// @dev Creates a new space for the media account.\\n\\t/// @param spaceMetadata string of the space metadata\\n\\tfunction addSpace(string memory spaceMetadata) external;\\n\\n\\t/// @dev Create a new period for a space. This function requires some params\\n\\t///      to decide which kinds of pricing way and how much price to get started.\\n\\t/// @param proxy address of the media proxy\\n\\t/// @param spaceMetadata string of the space metadata\\n\\t/// @param tokenMetadata string of the token metadata\\n\\t/// @param saleEndTimestamp uint256 of the end timestamp for the sale\\n\\t/// @param displayStartTimestamp uint256 of the start timestamp for the display\\n\\t/// @param displayEndTimestamp uint256 of the end timestamp for the display\\n\\t/// @param pricing uint256 of the pricing way\\n\\t/// @param minPrice uint256 of the minimum price to sell it out\\n\\tfunction addPeriod(\\n\\t\\taddress proxy,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tuint256 saleEndTimestamp,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\tAd.Pricing pricing,\\n\\t\\tuint256 minPrice\\n\\t) external returns (uint256);\\n\\n\\t/// @dev Deletes a period and its token.\\n\\t///      If there is any users locking the fund for the sale, the amount would be transfered\\n\\t///      to the user when deleting the period.\\n\\t/// @param tokenId uint256 of the token ID\\n\\tfunction deletePeriod(uint256 tokenId) external;\\n\\n\\t/// @dev Buys the token that is defined as the specific period on an ad space.\\n\\t///      The price of the token is fixed.\\n\\t/// @param tokenId uint256 of the token ID\\n\\t/// @param msgValue uint256 of the price\\n\\tfunction soldByFixedPrice(uint256 tokenId, uint256 msgValue) external;\\n\\n\\t/// @dev Buys the token that is defined as the specific period on an ad space.\\n\\t///      The price is decreasing as time goes by, that is defined as an Dutch Auction.\\n\\t/// @param tokenId uint256 of the token ID\\n\\t/// @param msgValue uint256 of the price\\n\\tfunction soldByDutchAuction(uint256 tokenId, uint256 msgValue) external;\\n\\n\\t/// @dev Bids to participate in an auction.\\n\\t///      It is defined as an English Auction.\\n\\t/// @param tokenId uint256 of the token ID\\n\\t/// @param msgSender address of the sender\\n\\t/// @param msgValue uint256 of the price\\n\\tfunction bidByEnglishAuction(\\n\\t\\tuint256 tokenId,\\n\\t\\taddress msgSender,\\n\\t\\tuint256 msgValue\\n\\t) external returns (Sale.Bidding memory);\\n\\n\\t/// @dev Receives the token you bidded if you are the successful bidder.\\n\\t/// @param tokenId uint256 of the token ID\\n\\tfunction soldByEnglishAuction(uint256 tokenId)\\n\\t\\texternal\\n\\t\\treturns (address, uint256);\\n\\n\\t/// @dev Bids to participate in an auction.\\n\\t///      It is defined as an Open Bid.\\n\\t/// @param tokenId uint256 of the token ID\\n\\t/// @param proposalMetadata string of the metadata hash\\n\\t/// @param msgSender address of the sender\\n\\t/// @param msgValue uint256 of the price\\n\\tfunction bidWithProposal(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory proposalMetadata,\\n\\t\\taddress msgSender,\\n\\t\\tuint256 msgValue\\n\\t) external;\\n\\n\\t/// @dev Accepts an offer by the Media.\\n\\t/// @param tokenId uint256 of the token ID\\n\\t/// @param tokenMetadata string of the NFT token metadata\\n\\t/// @param offer Sale.Offer\\n\\tfunction acceptOffer(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tSale.Offer memory offer\\n\\t) external;\\n\\n\\tfunction mediaProxyOf(uint256 tokenId) external view returns (address);\\n\\n\\t/// @dev Returns tokenIds tied with the space metadata\\n\\t/// @param spaceMetadata string of the space metadata\\n\\tfunction tokenIdsOf(string memory spaceMetadata)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (uint256[] memory);\\n\\n\\t/// @dev Returns the current price.\\n\\t/// @param tokenId uint256 of the token ID\\n\\tfunction currentPrice(uint256 tokenId) external view returns (uint256);\\n\\n\\t/// @dev Displays the ad content that is approved by the media owner.\\n\\t/// @param spaceMetadata string of the space metadata\\n\\tfunction display(string memory spaceMetadata)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (string memory, uint256);\\n}\\n\",\"keccak256\":\"0x5852d66c1c377716df5e33f0d416f5083e7209cbc1d7f51593f46bd9ae49b728\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IEnglishAuction.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../libraries/Sale.sol\\\";\\n\\n/// @title IEnglishAuction\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IEnglishAuction {\\n\\t/// @dev Bids to participate in an auction.\\n\\t///      It is defined as an English Auction.\\n\\t/// @param tokenId uint256 of the token ID\\n\\t/// @param sender address of the msg.sender\\n\\t/// @param amount uint256 of the msg.value\\n\\tfunction bid(\\n\\t\\tuint256 tokenId,\\n\\t\\taddress sender,\\n\\t\\tuint256 amount\\n\\t) external returns (Sale.Bidding memory);\\n\\n\\t/// @dev Receives the token you bidded if you are the successful bidder.\\n\\t/// @param tokenId uint256 of the token ID\\n\\tfunction receiveToken(uint256 tokenId) external returns (address, uint256);\\n\\n\\t/// @dev Returns the current price.\\n\\t/// @param tokenId uint256 of the token ID\\n\\tfunction currentPrice(uint256 tokenId) external view returns (uint256);\\n\\n\\tfunction bidding(uint256 tokenId) external view returns (Sale.Bidding memory);\\n}\\n\",\"keccak256\":\"0x10039d8981b4321e404958c819ead418f83b2e50df7fce30fa5847f33ab595e4\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IEventEmitter.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../libraries/Ad.sol\\\";\\n\\n/// @title IEventEmitter - emits events.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IEventEmitter {\\n\\tfunction emitNewSpace(string memory metadata) external;\\n\\n\\tfunction emitNewPeriod(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tuint256 saleStartTimestamp,\\n\\t\\tuint256 saleEndTimestamp,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\tAd.Pricing pricing,\\n\\t\\tuint256 minPrice\\n\\t) external;\\n\\n\\tfunction emitDeletePeriod(uint256 tokenId) external;\\n\\n\\tfunction emitBuy(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 msgValue,\\n\\t\\taddress msgSender,\\n\\t\\tuint256 blockTimestamp\\n\\t) external;\\n\\n\\tfunction emitBid(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 msgValue,\\n\\t\\taddress msgSender,\\n\\t\\tuint256 blockTimestamp\\n\\t) external;\\n\\n\\tfunction emitBidWithProposal(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 msgValue,\\n\\t\\taddress msgSender,\\n\\t\\tstring memory metadata,\\n\\t\\tuint256 blockTimestamp\\n\\t) external;\\n\\n\\tfunction emitSelectProposal(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 index,\\n\\t\\taddress successfulBidder,\\n\\t\\tstring memory reason\\n\\t) external;\\n\\n\\tfunction emitReceiveToken(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 price,\\n\\t\\taddress buyer,\\n\\t\\tuint256 blockTimestamp\\n\\t) external;\\n\\n\\tfunction emitOfferPeriod(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\taddress sender,\\n\\t\\tuint256 price\\n\\t) external;\\n\\n\\tfunction emitCancelOffer(uint256 tokenId) external;\\n\\n\\tfunction emitAcceptOffer(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\tuint256 price\\n\\t) external;\\n\\n\\tfunction emitWithdraw(uint256 amount) external;\\n\\n\\tfunction emitPropose(uint256 tokenId, string memory metadata) external;\\n\\n\\tfunction emitAcceptProposal(uint256 tokenId, string memory metadata) external;\\n\\n\\tfunction emitDenyProposal(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory metadata,\\n\\t\\tstring memory reason,\\n\\t\\tbool offensive\\n\\t) external;\\n\\n\\tfunction emitTransferCustom(\\n\\t\\taddress from,\\n\\t\\taddress to,\\n\\t\\tuint256 tokenId\\n\\t) external;\\n\\n\\tfunction emitNewMedia(\\n\\t\\taddress proxy,\\n\\t\\taddress mediaEOA,\\n\\t\\tstring memory applicationMetadata,\\n\\t\\tstring memory updatableMetadata,\\n\\t\\tuint256 saltNonce\\n\\t) external;\\n\\n\\tfunction emitUpdateMedia(\\n\\t\\taddress proxy,\\n\\t\\taddress mediaEOA,\\n\\t\\tstring memory accountMetadata\\n\\t) external;\\n\\n\\tfunction emitPaymentFailure(address receiver, uint256 price) external;\\n\\n\\tfunction emitReceived(address receiver, uint256 price) external;\\n}\\n\",\"keccak256\":\"0x771735fe921d962611486dfed6cce0050c4a0ba7ece4a28678110ae3b0f67b6c\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IMediaRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../libraries/Ad.sol\\\";\\n\\n/// @title MediaRegistry - registers a list of media accounts.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IMediaRegistry {\\n\\tstruct Account {\\n\\t\\taddress proxy;\\n\\t\\taddress mediaEOA;\\n\\t\\tstring applicationMetadata;\\n\\t\\tstring updatableMetadata;\\n\\t}\\n\\n\\t/// @dev Returns account info.\\n\\t/// @param proxy address of the proxy contract address\\n\\tfunction allAccounts(address proxy)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (\\n\\t\\t\\taddress,\\n\\t\\t\\taddress,\\n\\t\\t\\tstring memory,\\n\\t\\t\\tstring memory\\n\\t\\t);\\n\\n\\t/// @dev Adds media account.\\n\\t/// @param proxy address of the proxy contract\\n\\t/// @param applicationMetadata string of constant metadata for the defailts of the account\\n\\t/// @param updatableMetadata string of constant metadata for the defailts of the account\\n\\t/// @param mediaEOA address of the media account\\n\\tfunction addMedia(\\n\\t\\taddress proxy,\\n\\t\\tstring memory applicationMetadata,\\n\\t\\tstring memory updatableMetadata,\\n\\t\\taddress mediaEOA\\n\\t) external;\\n\\n\\t/// @dev Updates media account.\\n\\t/// @param metadata string of the account metadata\\n\\t/// @param mediaEOA address of the media account\\n\\tfunction updateMedia(address mediaEOA, string memory metadata) external;\\n\\n\\tfunction updateApplicationMetadata(address proxy, string memory metadata)\\n\\t\\texternal;\\n\\n\\t/// @dev Returns whether the account has created or not.\\n\\t/// @param proxy address of the proxy contract that represents an account.\\n\\tfunction created(address proxy) external view returns (bool);\\n\\n\\t/// @dev Returns the owner of the account.\\n\\t/// @param proxy address of the proxy contract that represents an account.\\n\\tfunction ownerOf(address proxy) external view returns (address);\\n}\\n\",\"keccak256\":\"0xf60005370edf262e5e68ba96deb5fc8b7a0fcb1546ba8c4a6c1793017389c78b\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/INameRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\n/// @title INameRegistry - saves a set of addresses used in the system.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface INameRegistry {\\n\\t/// @dev Sets the address associated with the key name.\\n\\t///      If the address is the contract, not an EOA, it is\\n\\t///      saved as the allowed contract list.\\n\\t/// @param key bytes32 of the key\\n\\t/// @param value address of the value\\n\\tfunction set(bytes32 key, address value) external;\\n\\n\\t/// @dev Gets the address associated with the key name.\\n\\t/// @param key bytes32 of the key\\n\\tfunction get(bytes32 key) external view returns (address);\\n\\n\\t/// @dev Returns whether or not the address is the one that we deployed.\\n\\t/// @param caller address of the msg.sender\\n\\tfunction allowedContracts(address caller) external returns (bool);\\n\\n\\t/// @dev Gets the deployer of NameRegistry.\\n\\tfunction deployer() external view returns (address);\\n}\\n\",\"keccak256\":\"0xa46fe7c81f01262c7daf69b1d7695a6dd507d5a4ab881dab731e3faa992dcb1d\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IOfferBid.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../libraries/Sale.sol\\\";\\n\\n/// @title IOfferBid\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IOfferBid {\\n\\t/// @dev Offers to buy a period that the sender requests.\\n\\t/// @param spaceMetadata string of the space metadata\\n\\t/// @param displayStartTimestamp uint256 of the start timestamp for the display\\n\\t/// @param displayEndTimestamp uint256 of the end timestamp for the display\\n\\t/// @param sender address of the msg.sender\\n\\t/// @param value uint256 of the msg.value\\n\\tfunction offer(\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\taddress sender,\\n\\t\\tuint256 value\\n\\t) external returns (uint256);\\n\\n\\t/// @dev Cancels an offer.\\n\\t/// @param tokenId uint256 of the token ID\\n\\t/// @param sender address of the msg.sender\\n\\tfunction cancel(uint256 tokenId, address sender)\\n\\t\\texternal\\n\\t\\treturns (Sale.Offer memory);\\n\\n\\t/// @dev Accepts an offer by the Media.\\n\\t/// @param tokenId uint256 of the token ID\\n\\tfunction accept(uint256 tokenId) external returns (Sale.Offer memory);\\n\\n\\t/// @dev Returns the current price.\\n\\t/// @param tokenId uint256 of the token ID\\n\\tfunction currentPrice(uint256 tokenId) external view returns (uint256);\\n\\n\\tfunction offered(uint256 tokenId) external view returns (Sale.Offer memory);\\n}\\n\",\"keccak256\":\"0xded2b4f6698d868661056de8beccdddca56e85bdfdd3fade1512edb50dc938fa\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IOpenBid.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../libraries/Sale.sol\\\";\\n\\n/// @title IOpenBid\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IOpenBid {\\n\\t/// @dev Bids to participate in an auction.\\n\\t///      It is defined as an Open Bid.\\n\\t/// @param tokenId uint256 of the token ID\\n\\t/// @param proposal string of the metadata hash\\n\\t/// @param sender address of the msg.sender\\n\\t/// @param amount uint256 of the msg.value\\n\\tfunction bid(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory proposal,\\n\\t\\taddress sender,\\n\\t\\tuint256 amount\\n\\t) external;\\n\\n\\t/// @dev Selects the best proposal bidded with.\\n\\t/// @param tokenId uint256 of the token ID\\n\\t/// @param index uint256 of the index number\\n\\t/// @param reason string of the reason or metadata\\n\\tfunction selectProposal(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 index,\\n\\t\\tstring memory reason\\n\\t)\\n\\t\\texternal\\n\\t\\treturns (Sale.OpenBid memory selected, Sale.OpenBid[] memory nonSelected);\\n\\n\\tfunction biddingList(uint256 tokenId)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (Sale.OpenBid[] memory);\\n\\n\\tfunction bidding(uint256 tokenId, uint256 index)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (Sale.OpenBid memory);\\n}\\n\",\"keccak256\":\"0xf29f1e439017218595e55ea62955bf1f7b93bca8801aea0a8241345af262fd11\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IProposalReview.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\n/// @title IProposalReview\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IProposalReview {\\n\\tstruct Denied {\\n\\t\\tstring reason;\\n\\t\\tbool offensive;\\n\\t}\\n\\tstruct Proposal {\\n\\t\\tstring content;\\n\\t\\taddress proposer;\\n\\t}\\n\\n\\t/// @dev Proposes the metadata to the token you bought.\\n\\t///      Users can propose many times as long as it is accepted.\\n\\t/// @param tokenId uint256 of the token ID\\n\\t/// @param metadata string of the proposal metadata\\n\\t/// @param msgSender address of the msg.sender\\n\\tfunction propose(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory metadata,\\n\\t\\taddress msgSender\\n\\t) external;\\n\\n\\t/// @dev Accepts the proposal.\\n\\t/// @param tokenId uint256 of the token ID\\n\\tfunction accept(uint256 tokenId) external;\\n\\n\\t/// @dev Denies the submitted proposal, mentioning what is the problem.\\n\\t/// @param tokenId uint256 of the token ID\\n\\t/// @param reason string of the reason why it is rejected\\n\\t/// @param offensive bool if the content would offend somebody\\n\\tfunction denyProposal(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory reason,\\n\\t\\tbool offensive\\n\\t) external;\\n\\n\\t/// @dev Returns the proposer of the token.\\n\\t/// @param tokenId uint256 of the token ID\\n\\tfunction proposer(uint256 tokenId) external view returns (address);\\n\\n\\t/// @dev Returns the proposal content of the token.\\n\\t/// @param tokenId uint256 of the token ID\\n\\tfunction acceptedContent(uint256 tokenId)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (string memory);\\n\\n\\t/// @dev Accepts the best proposal for an open bidding.\\n\\t/// @param tokenId uint256 of the token ID\\n\\t/// @param metadata string of the proposal metadata\\n\\tfunction acceptToOpenBid(uint256 tokenId, string memory metadata) external;\\n}\\n\",\"keccak256\":\"0x80267ddf355d3ddebbe59d630c5bb8fea9ce5bdc6bb3267541ba82bb7344b262\",\"license\":\"UNLICENSED\"},\"contracts/libraries/Ad.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nlibrary Ad {\\n\\tuint256 private constant _ID_LENGTH = 100000000000000000000000000000000;\\n\\t// 0.RRP     : Recommended Retail Price\\n\\t// 1.DUTCH   : Dutch Auction\\n\\t// 2.ENGLISH : English Acction\\n\\t// 3.OFFER   : Offered by Others\\n\\t// 4.OPEN    : Open Bid by revealing the content\\n\\tenum Pricing {\\n\\t\\tRRP,\\n\\t\\tDUTCH,\\n\\t\\tENGLISH,\\n\\t\\tOFFER,\\n\\t\\tOPEN\\n\\t}\\n\\tstruct Period {\\n\\t\\taddress mediaProxy;\\n\\t\\tstring spaceMetadata;\\n\\t\\tstring tokenMetadata;\\n\\t\\tuint256 saleStartTimestamp;\\n\\t\\tuint256 saleEndTimestamp;\\n\\t\\tuint256 displayStartTimestamp;\\n\\t\\tuint256 displayEndTimestamp;\\n\\t\\tPricing pricing;\\n\\t\\tuint256 minPrice;\\n\\t\\tuint256 startPrice;\\n\\t\\tbool sold;\\n\\t}\\n\\n\\tfunction id(\\n\\t\\tstring memory metadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp\\n\\t) public pure returns (uint256) {\\n\\t\\treturn\\n\\t\\t\\tuint256(\\n\\t\\t\\t\\tkeccak256(\\n\\t\\t\\t\\t\\tabi.encodePacked(metadata, displayStartTimestamp, displayEndTimestamp)\\n\\t\\t\\t\\t)\\n\\t\\t\\t) % _ID_LENGTH;\\n\\t}\\n}\\n\",\"keccak256\":\"0x47955874c274fa881de288b6af7d7ea36130caf1d64c6e367316278f6e95fd07\",\"license\":\"UNLICENSED\"},\"contracts/libraries/Purchase.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"./Ad.sol\\\";\\n\\nlibrary Purchase {\\n\\tfunction checkBeforeBuy(Ad.Period memory period, uint256 msgValue)\\n\\t\\tpublic\\n\\t\\tpure\\n\\t{\\n\\t\\trequire(period.pricing == Ad.Pricing.RRP, \\\"KD120\\\");\\n\\t\\trequire(!period.sold, \\\"KD121\\\");\\n\\t\\trequire(period.minPrice == msgValue, \\\"KD122\\\");\\n\\t}\\n\\n\\tfunction checkBeforeBuyBasedOnTime(\\n\\t\\tAd.Period memory period,\\n\\t\\tuint256 currentPrice,\\n\\t\\tuint256 blockTimestamp,\\n\\t\\tuint256 msgValue\\n\\t) public pure {\\n\\t\\trequire(period.pricing == Ad.Pricing.DUTCH, \\\"KD123\\\");\\n\\t\\trequire(!period.sold, \\\"KD121\\\");\\n\\t\\trequire(currentPrice <= msgValue, \\\"KD122\\\");\\n\\t\\trequire(period.saleEndTimestamp >= blockTimestamp, \\\"KD129\\\");\\n\\t}\\n\\n\\tfunction checkBeforeBid(\\n\\t\\tAd.Period memory period,\\n\\t\\tuint256 currentPrice,\\n\\t\\tuint256 blockTimestamp,\\n\\t\\tuint256 msgValue\\n\\t) public pure {\\n\\t\\trequire(period.pricing == Ad.Pricing.ENGLISH, \\\"KD124\\\");\\n\\t\\trequire(!period.sold, \\\"KD121\\\");\\n\\t\\trequire(currentPrice < msgValue, \\\"KD122\\\");\\n\\t\\trequire(period.saleEndTimestamp >= blockTimestamp, \\\"KD129\\\");\\n\\t}\\n\\n\\tfunction checkBeforeBidWithProposal(\\n\\t\\tAd.Period memory period,\\n\\t\\tuint256 blockTimestamp,\\n\\t\\tuint256 msgValue\\n\\t) public pure {\\n\\t\\trequire(period.pricing == Ad.Pricing.OPEN, \\\"KD127\\\");\\n\\t\\trequire(!period.sold, \\\"KD121\\\");\\n\\t\\trequire(period.minPrice <= msgValue, \\\"KD122\\\");\\n\\t\\trequire(period.saleEndTimestamp >= blockTimestamp, \\\"KD129\\\");\\n\\t}\\n}\\n\",\"keccak256\":\"0x2d428de10bc0f94c1bf27f95c0daafb364619ecf63d28cae1d0fdf82f238f43f\",\"license\":\"UNLICENSED\"},\"contracts/libraries/Sale.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"./Ad.sol\\\";\\n\\nlibrary Sale {\\n\\tstruct Bidding {\\n\\t\\tuint256 tokenId;\\n\\t\\taddress bidder;\\n\\t\\tuint256 price;\\n\\t}\\n\\tstruct Offer {\\n\\t\\tstring spaceMetadata;\\n\\t\\tuint256 displayStartTimestamp;\\n\\t\\tuint256 displayEndTimestamp;\\n\\t\\taddress sender;\\n\\t\\tuint256 price;\\n\\t}\\n\\tstruct OpenBid {\\n\\t\\tuint256 tokenId;\\n\\t\\taddress sender;\\n\\t\\tuint256 price;\\n\\t\\tstring content;\\n\\t}\\n\\n\\tfunction startPrice(Ad.Period memory period) public pure returns (uint256) {\\n\\t\\tif (period.pricing == Ad.Pricing.RRP) {\\n\\t\\t\\treturn period.minPrice;\\n\\t\\t} else if (period.pricing == Ad.Pricing.DUTCH) {\\n\\t\\t\\treturn period.minPrice * 10;\\n\\t\\t} else if (period.pricing == Ad.Pricing.ENGLISH) {\\n\\t\\t\\treturn period.minPrice;\\n\\t\\t} else if (period.pricing == Ad.Pricing.OFFER) {\\n\\t\\t\\treturn period.minPrice;\\n\\t\\t} else if (period.pricing == Ad.Pricing.OPEN) {\\n\\t\\t\\treturn period.minPrice;\\n\\t\\t} else {\\n\\t\\t\\treturn 0;\\n\\t\\t}\\n\\t}\\n}\\n\",\"keccak256\":\"0x19a427a8ac429adf4fbe2f2a87c4a95e20c794fb99eaa0baa1ae69257541d9c2\",\"license\":\"UNLICENSED\"},\"contracts/libraries/Schedule.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nlibrary Schedule {\\n\\tfunction isOverlapped(\\n\\t\\tuint256 newFromTimestamp,\\n\\t\\tuint256 newToTimestamp,\\n\\t\\tuint256 currentFromTimestamp,\\n\\t\\tuint256 currentToTimestamp\\n\\t) public pure returns (bool) {\\n\\t\\treturn\\n\\t\\t\\t!(isPast(newToTimestamp, currentFromTimestamp) ||\\n\\t\\t\\t\\tisFuture(newFromTimestamp, currentToTimestamp));\\n\\t}\\n\\n\\tfunction isPast(uint256 newToTimestamp, uint256 currentFromTimestamp)\\n\\t\\tpublic\\n\\t\\tpure\\n\\t\\treturns (bool)\\n\\t{\\n\\t\\treturn newToTimestamp < currentFromTimestamp;\\n\\t}\\n\\n\\tfunction isFuture(uint256 newFromTimestamp, uint256 currentToTimestamp)\\n\\t\\tpublic\\n\\t\\tpure\\n\\t\\treturns (bool)\\n\\t{\\n\\t\\treturn currentToTimestamp < newFromTimestamp;\\n\\t}\\n}\\n\",\"keccak256\":\"0x1b08c9922bc41268e7257710f27da978fdee46f50bb750851386c9b6c2a56406\",\"license\":\"UNLICENSED\"},\"contracts/peripheries/AdPool.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../accessors/NameAccessor.sol\\\";\\nimport \\\"../common/BlockTimestamp.sol\\\";\\nimport \\\"../interfaces/IAdPool.sol\\\";\\nimport \\\"../interfaces/IMediaRegistry.sol\\\";\\nimport \\\"../interfaces/IEventEmitter.sol\\\";\\nimport \\\"../interfaces/IOfferBid.sol\\\";\\nimport \\\"../interfaces/IEnglishAuction.sol\\\";\\nimport \\\"../interfaces/IProposalReview.sol\\\";\\nimport \\\"../interfaces/IOpenBid.sol\\\";\\nimport \\\"../libraries/Schedule.sol\\\";\\nimport \\\"../libraries/Purchase.sol\\\";\\n\\n/// @title AdPool - stores all ads accorss every space.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ncontract AdPool is IAdPool, BlockTimestamp, NameAccessor {\\n\\t/// @dev tokenId <- metadata * displayStartTimestamp * displayEndTimestamp\\n\\tmapping(uint256 => Ad.Period) public periods;\\n\\n\\t/// @dev Returns spaceId that is tied with space metadata.\\n\\tmapping(string => bool) public spaced;\\n\\n\\t/// @dev Maps the space metadata with tokenIds of ad periods.\\n\\tmapping(string => uint256[]) internal _periodKeys;\\n\\n\\tmodifier onlyProxies() {\\n\\t\\trequire(_mediaRegistry().ownerOf(msg.sender) != address(0x0), \\\"KD011\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\tconstructor(address _nameRegistry) {\\n\\t\\tinitialize(_nameRegistry);\\n\\t}\\n\\n\\t/// @inheritdoc IAdPool\\n\\tfunction addSpace(string memory metadata) external virtual onlyProxies {\\n\\t\\trequire(!spaced[metadata], \\\"KD100\\\");\\n\\t\\tspaced[metadata] = true;\\n\\t\\t_event().emitNewSpace(metadata);\\n\\t}\\n\\n\\t/// @inheritdoc IAdPool\\n\\tfunction addPeriod(\\n\\t\\taddress proxy,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tuint256 saleEndTimestamp,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\tAd.Pricing pricing,\\n\\t\\tuint256 minPrice\\n\\t) external virtual onlyProxies returns (uint256 tokenId) {\\n\\t\\trequire(saleEndTimestamp > _blockTimestamp(), \\\"KD111\\\");\\n\\t\\trequire(saleEndTimestamp <= displayStartTimestamp, \\\"KD112\\\");\\n\\t\\trequire(displayStartTimestamp < displayEndTimestamp, \\\"KD113\\\");\\n\\n\\t\\t_addSpaceIfNot(spaceMetadata);\\n\\t\\t_checkOverlapping(\\n\\t\\t\\tspaceMetadata,\\n\\t\\t\\tdisplayStartTimestamp,\\n\\t\\t\\tdisplayEndTimestamp\\n\\t\\t);\\n\\t\\ttokenId = Ad.id(spaceMetadata, displayStartTimestamp, displayEndTimestamp);\\n\\t\\tAd.Period memory period = Ad.Period(\\n\\t\\t\\tproxy,\\n\\t\\t\\tspaceMetadata,\\n\\t\\t\\ttokenMetadata,\\n\\t\\t\\t_blockTimestamp(),\\n\\t\\t\\tsaleEndTimestamp,\\n\\t\\t\\tdisplayStartTimestamp,\\n\\t\\t\\tdisplayEndTimestamp,\\n\\t\\t\\tpricing,\\n\\t\\t\\tminPrice,\\n\\t\\t\\t0,\\n\\t\\t\\tfalse\\n\\t\\t);\\n\\t\\tperiod.startPrice = Sale.startPrice(period);\\n\\t\\tperiods[tokenId] = period;\\n\\t\\t_periodKeys[spaceMetadata].push(tokenId);\\n\\t\\t_event().emitNewPeriod(\\n\\t\\t\\ttokenId,\\n\\t\\t\\tspaceMetadata,\\n\\t\\t\\ttokenMetadata,\\n\\t\\t\\t_blockTimestamp(),\\n\\t\\t\\tsaleEndTimestamp,\\n\\t\\t\\tdisplayStartTimestamp,\\n\\t\\t\\tdisplayEndTimestamp,\\n\\t\\t\\tpricing,\\n\\t\\t\\tminPrice\\n\\t\\t);\\n\\t}\\n\\n\\t/// @inheritdoc IAdPool\\n\\tfunction deletePeriod(uint256 tokenId) external virtual onlyProxies {\\n\\t\\trequire(periods[tokenId].mediaProxy != address(0), \\\"KD114\\\");\\n\\t\\trequire(!_alreadyBid(tokenId), \\\"KD128\\\");\\n\\t\\tstring memory spaceMetadata = periods[tokenId].spaceMetadata;\\n\\t\\tuint256 index = 0;\\n\\t\\tfor (uint256 i = 1; i < _periodKeys[spaceMetadata].length + 1; i++) {\\n\\t\\t\\tif (_periodKeys[spaceMetadata][i - 1] == tokenId) {\\n\\t\\t\\t\\tindex = i;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\trequire(index != 0, \\\"No deletable keys\\\");\\n\\t\\tdelete _periodKeys[spaceMetadata][index - 1];\\n\\t\\tdelete periods[tokenId];\\n\\t\\t_event().emitDeletePeriod(tokenId);\\n\\t}\\n\\n\\t/// @inheritdoc IAdPool\\n\\tfunction soldByFixedPrice(uint256 tokenId, uint256 msgValue)\\n\\t\\texternal\\n\\t\\tonlyProxies\\n\\t{\\n\\t\\tPurchase.checkBeforeBuy(periods[tokenId], msgValue);\\n\\t\\tperiods[tokenId].sold = true;\\n\\t}\\n\\n\\t/// @inheritdoc IAdPool\\n\\tfunction soldByDutchAuction(uint256 tokenId, uint256 msgValue)\\n\\t\\texternal\\n\\t\\tonlyProxies\\n\\t{\\n\\t\\tPurchase.checkBeforeBuyBasedOnTime(\\n\\t\\t\\tperiods[tokenId],\\n\\t\\t\\tcurrentPrice(tokenId),\\n\\t\\t\\t_blockTimestamp(),\\n\\t\\t\\tmsgValue\\n\\t\\t);\\n\\t\\tperiods[tokenId].sold = true;\\n\\t}\\n\\n\\t/// @inheritdoc IAdPool\\n\\tfunction bidByEnglishAuction(\\n\\t\\tuint256 tokenId,\\n\\t\\taddress msgSender,\\n\\t\\tuint256 msgValue\\n\\t) external onlyProxies returns (Sale.Bidding memory) {\\n\\t\\tPurchase.checkBeforeBid(\\n\\t\\t\\tperiods[tokenId],\\n\\t\\t\\tcurrentPrice(tokenId),\\n\\t\\t\\t_blockTimestamp(),\\n\\t\\t\\tmsgValue\\n\\t\\t);\\n\\t\\treturn _english().bid(tokenId, msgSender, msgValue);\\n\\t}\\n\\n\\t/// @inheritdoc IAdPool\\n\\tfunction soldByEnglishAuction(uint256 tokenId)\\n\\t\\texternal\\n\\t\\tonlyProxies\\n\\t\\treturns (address bidder, uint256 price)\\n\\t{\\n\\t\\t(bidder, price) = _english().receiveToken(tokenId);\\n\\t\\tperiods[tokenId].sold = true;\\n\\t}\\n\\n\\t/// @inheritdoc IAdPool\\n\\tfunction bidWithProposal(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory proposalMetadata,\\n\\t\\taddress msgSender,\\n\\t\\tuint256 msgValue\\n\\t) external onlyProxies {\\n\\t\\tPurchase.checkBeforeBidWithProposal(\\n\\t\\t\\tperiods[tokenId],\\n\\t\\t\\t_blockTimestamp(),\\n\\t\\t\\tmsgValue\\n\\t\\t);\\n\\t\\t_openBid().bid(tokenId, proposalMetadata, msgSender, msgValue);\\n\\t}\\n\\n\\t/// @inheritdoc IAdPool\\n\\tfunction acceptOffer(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tSale.Offer memory offer\\n\\t) external virtual onlyProxies {\\n\\t\\t_checkOverlapping(\\n\\t\\t\\toffer.spaceMetadata,\\n\\t\\t\\toffer.displayStartTimestamp,\\n\\t\\t\\toffer.displayEndTimestamp\\n\\t\\t);\\n\\t\\tAd.Period memory period = Ad.Period(\\n\\t\\t\\toffer.sender,\\n\\t\\t\\toffer.spaceMetadata,\\n\\t\\t\\ttokenMetadata,\\n\\t\\t\\t_blockTimestamp(),\\n\\t\\t\\t_blockTimestamp(),\\n\\t\\t\\toffer.displayStartTimestamp,\\n\\t\\t\\toffer.displayEndTimestamp,\\n\\t\\t\\tAd.Pricing.OFFER,\\n\\t\\t\\toffer.price,\\n\\t\\t\\toffer.price,\\n\\t\\t\\ttrue\\n\\t\\t);\\n\\t\\tperiods[tokenId] = period;\\n\\t\\t_periodKeys[offer.spaceMetadata].push(tokenId);\\n\\t\\t_event().emitAcceptOffer(\\n\\t\\t\\ttokenId,\\n\\t\\t\\toffer.spaceMetadata,\\n\\t\\t\\ttokenMetadata,\\n\\t\\t\\toffer.displayStartTimestamp,\\n\\t\\t\\toffer.displayEndTimestamp,\\n\\t\\t\\toffer.price\\n\\t\\t);\\n\\t}\\n\\n\\tfunction allPeriods(uint256 tokenId)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (Ad.Period memory)\\n\\t{\\n\\t\\treturn periods[tokenId];\\n\\t}\\n\\n\\t/// @inheritdoc IAdPool\\n\\tfunction currentPrice(uint256 tokenId) public view virtual returns (uint256) {\\n\\t\\tAd.Period memory period = periods[tokenId];\\n\\t\\tif (period.pricing == Ad.Pricing.RRP) {\\n\\t\\t\\treturn period.minPrice;\\n\\t\\t}\\n\\t\\tif (period.pricing == Ad.Pricing.DUTCH) {\\n\\t\\t\\treturn\\n\\t\\t\\t\\tperiod.startPrice -\\n\\t\\t\\t\\t((period.startPrice - period.minPrice) *\\n\\t\\t\\t\\t\\t(_blockTimestamp() - period.saleStartTimestamp)) /\\n\\t\\t\\t\\t(period.saleEndTimestamp - period.saleStartTimestamp);\\n\\t\\t}\\n\\t\\tif (period.pricing == Ad.Pricing.ENGLISH) {\\n\\t\\t\\treturn _english().currentPrice(tokenId);\\n\\t\\t}\\n\\t\\tif (period.pricing == Ad.Pricing.OFFER) {\\n\\t\\t\\treturn _offerBid().currentPrice(tokenId);\\n\\t\\t}\\n\\t\\tif (period.pricing == Ad.Pricing.OPEN) {\\n\\t\\t\\treturn 0;\\n\\t\\t}\\n\\t\\trevert(\\\"not exist\\\");\\n\\t}\\n\\n\\t/// @inheritdoc IAdPool\\n\\tfunction display(string memory spaceMetadata)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\tvirtual\\n\\t\\treturns (string memory, uint256)\\n\\t{\\n\\t\\tuint256[] memory tokenIds = tokenIdsOf(spaceMetadata);\\n\\t\\tfor (uint256 i = 0; i < tokenIds.length; i++) {\\n\\t\\t\\tif (tokenIds[i] != 0) {\\n\\t\\t\\t\\tAd.Period memory period = periods[tokenIds[i]];\\n\\t\\t\\t\\tif (\\n\\t\\t\\t\\t\\tperiod.displayStartTimestamp <= _blockTimestamp() &&\\n\\t\\t\\t\\t\\tperiod.displayEndTimestamp >= _blockTimestamp()\\n\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\tstring memory content = _review().acceptedContent(tokenIds[i]);\\n\\t\\t\\t\\t\\treturn (content, tokenIds[i]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn (\\\"\\\", 0);\\n\\t}\\n\\n\\t/// @inheritdoc IAdPool\\n\\tfunction mediaProxyOf(uint256 tokenId) external view returns (address) {\\n\\t\\treturn periods[tokenId].mediaProxy;\\n\\t}\\n\\n\\t/// @inheritdoc IAdPool\\n\\tfunction tokenIdsOf(string memory spaceMetadata)\\n\\t\\tpublic\\n\\t\\tview\\n\\t\\tvirtual\\n\\t\\treturns (uint256[] memory)\\n\\t{\\n\\t\\treturn _periodKeys[spaceMetadata];\\n\\t}\\n\\n\\tfunction _alreadyBid(uint256 tokenId) internal view virtual returns (bool) {\\n\\t\\treturn\\n\\t\\t\\t_english().bidding(tokenId).bidder != address(0) ||\\n\\t\\t\\t_openBid().biddingList(tokenId).length != 0;\\n\\t}\\n\\n\\tfunction _checkOverlapping(\\n\\t\\tstring memory metadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp\\n\\t) internal view virtual {\\n\\t\\tfor (uint256 i = 0; i < _periodKeys[metadata].length; i++) {\\n\\t\\t\\tuint256 existDisplayStart = periods[_periodKeys[metadata][i]]\\n\\t\\t\\t\\t.displayStartTimestamp;\\n\\t\\t\\tuint256 existDisplayEnd = periods[_periodKeys[metadata][i]]\\n\\t\\t\\t\\t.displayEndTimestamp;\\n\\n\\t\\t\\tif (\\n\\t\\t\\t\\tSchedule.isOverlapped(\\n\\t\\t\\t\\t\\tdisplayStartTimestamp,\\n\\t\\t\\t\\t\\tdisplayEndTimestamp,\\n\\t\\t\\t\\t\\texistDisplayStart,\\n\\t\\t\\t\\t\\texistDisplayEnd\\n\\t\\t\\t\\t)\\n\\t\\t\\t) {\\n\\t\\t\\t\\trevert(\\\"KD110\\\");\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tfunction _addSpaceIfNot(string memory metadata) internal {\\n\\t\\tif (!spaced[metadata]) {\\n\\t\\t\\tspaced[metadata] = true;\\n\\t\\t\\t_event().emitNewSpace(metadata);\\n\\t\\t}\\n\\t}\\n\\n\\t/**\\n\\t * Accessors\\n\\t */\\n\\tfunction _mediaRegistry() internal view returns (IMediaRegistry) {\\n\\t\\treturn IMediaRegistry(mediaRegistryAddress());\\n\\t}\\n\\n\\tfunction _event() internal view virtual returns (IEventEmitter) {\\n\\t\\treturn IEventEmitter(eventEmitterAddress());\\n\\t}\\n\\n\\tfunction _offerBid() internal view virtual returns (IOfferBid) {\\n\\t\\treturn IOfferBid(offerBidAddress());\\n\\t}\\n\\n\\tfunction _english() internal view virtual returns (IEnglishAuction) {\\n\\t\\treturn IEnglishAuction(englishAuctionAddress());\\n\\t}\\n\\n\\tfunction _review() internal view virtual returns (IProposalReview) {\\n\\t\\treturn IProposalReview(proposalReviewAddress());\\n\\t}\\n\\n\\tfunction _openBid() internal view virtual returns (IOpenBid) {\\n\\t\\treturn IOpenBid(openBidAddress());\\n\\t}\\n}\\n\",\"keccak256\":\"0x5e160c9884d5b7eaabdc961a69bef5f36a6faf3806771ff0fea7b8a47fde1e3a\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101495760003560e01c80630106d8eb1461014e57806301cd1f581461016c57806310335241146101815780632231c1eb146101aa57806327b7a2f5146101b2578063430bf08a146101c35780634b455a51146101cb57806353c14776146101de57806365045a65146101ff5780636a58767e1461023d5780636c15b2bf146102455780637a3c4c17146102585780637cf175fb146102795780637ee8065f146102815780638da5cb5b146102bf5780638f6059d6146102c75780639d23b6af146102cf578063a9ad60f3146102e2578063b3a0ebc9146102f5578063b8926f2c14610315578063c9cd71b514610328578063d028bd6614610330578063e2f5fc7814610350578063e6851b9814610358578063ea4a11041461036b578063f072629114610395578063f86fde571461039d575b600080fd5b6101566103cf565b60405161016391906128e5565b60405180910390f35b61017f61017a3660046128f9565b61047d565b005b61015661018f36600461291b565b6000908152600160205260409020546001600160a01b031690565b6101566105c9565b6000546001600160a01b0316610156565b6101566105fa565b61017f6101d936600461291b565b610629565b6101f16101ec366004612a41565b610a00565b604051610163929190612acd565b61022d61020d366004612a41565b805160208183018101805160028252928201919093012091525460ff1681565b6040519015158152602001610163565b610156610d58565b61017f610253366004612b04565b610d8f565b61026b61026636600461291b565b610f16565b604051908152602001610163565b6101566112a8565b61029461028f366004612b64565b6112da565b60408051825181526020808401516001600160a01b0316908201529181015190820152606001610163565b6101566114b4565b610156611508565b61017f6102dd3660046128f9565b61153e565b61017f6102f0366004612b9c565b611622565b61030861030336600461291b565b6118ba565b6040516101639190612ca4565b61017f610323366004612a41565b611a95565b610156611c24565b61034361033e366004612a41565b611c54565b6040516101639190612d5c565b610156611cc4565b61026b610366366004612da0565b611cfc565b61037e61037936600461291b565b612165565b6040516101639b9a99989796959493929190612e55565b6101566122dd565b6103b06103ab36600461291b565b612313565b604080516001600160a01b039093168352602083019190915201610163565b600080546040516d22b733b634b9b420bab1ba34b7b760911b60208201526001600160a01b0390911690638eaa6ac090602e015b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161043791815260200190565b602060405180830381865afa158015610454573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104789190612edd565b905090565b600061048761244f565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b81526004016104b291906128e5565b602060405180830381865afa1580156104cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f39190612edd565b6001600160a01b031614156105235760405162461bcd60e51b815260040161051a90612efa565b60405180910390fd5b600082815260016020526040902073__$d7d41b463f0c25cd0b86b1d270805192c7$__9063922d31599061055685610f16565b42856040518563ffffffff1660e01b815260040161057794939291906130b4565b60006040518083038186803b15801561058f57600080fd5b505af41580156105a3573d6000803e3d6000fd5b50505060009283525050600160208190526040909120600a01805460ff19169091179055565b600080546040516613dc195b909a5960ca1b60208201526001600160a01b0390911690638eaa6ac090602701610403565b600080546040516415985d5b1d60da1b60208201526001600160a01b0390911690638eaa6ac090602501610403565b600061063361244f565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b815260040161065e91906128e5565b602060405180830381865afa15801561067b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069f9190612edd565b6001600160a01b031614156106c65760405162461bcd60e51b815260040161051a90612efa565b6000818152600160205260409020546001600160a01b03166107125760405162461bcd60e51b815260206004820152600560248201526412d10c4c4d60da1b604482015260640161051a565b61071b81612459565b156107505760405162461bcd60e51b8152602060048201526005602482015264096886264760db1b604482015260640161051a565b6000818152600160208190526040822001805461076c90612f19565b80601f016020809104026020016040519081016040528092919081815260200182805461079890612f19565b80156107e55780601f106107ba576101008083540402835291602001916107e5565b820191906000526020600020905b8154815290600101906020018083116107c857829003601f168201915b50505050509050600080600190505b60038360405161080491906130e3565b9081526040519081900360200190205461081f906001613115565b811015610888578360038460405161083791906130e3565b90815260405190819003602001902061085160018461312d565b8154811061086157610861613144565b90600052602060002001541415610876578091505b806108808161315a565b9150506107f4565b50806108ca5760405162461bcd60e51b81526020600482015260116024820152704e6f2064656c657461626c65206b65797360781b604482015260640161051a565b6003826040516108da91906130e3565b9081526040519081900360200190206108f460018361312d565b8154811061090457610904613144565b600091825260208083209091018290558482526001908190526040822080546001600160a01b0319168155919061093d9083018261278f565b61094b60028301600061278f565b5060006003820181905560048201819055600582018190556006820181905560078201805460ff19908116909155600883018290556009830191909155600a9091018054909116905561099c61256b565b6001600160a01b031663ccb55a98846040518263ffffffff1660e01b81526004016109c991815260200190565b600060405180830381600087803b1580156109e357600080fd5b505af11580156109f7573d6000803e3d6000fd5b50505050505050565b6060600080610a0e84611c54565b905060005b8151811015610d3a57818181518110610a2e57610a2e613144565b6020026020010151600014610d2857600060016000848481518110610a5557610a55613144565b60200260200101518152602001908152602001600020604051806101600160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600182018054610ab690612f19565b80601f0160208091040260200160405190810160405280929190818152602001828054610ae290612f19565b8015610b2f5780601f10610b0457610100808354040283529160200191610b2f565b820191906000526020600020905b815481529060010190602001808311610b1257829003601f168201915b50505050508152602001600282018054610b4890612f19565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7490612f19565b8015610bc15780601f10610b9657610100808354040283529160200191610bc1565b820191906000526020600020905b815481529060010190602001808311610ba457829003601f168201915b50505091835250506003820154602082015260048083015460408301526005830154606083015260068301546080830152600783015460a09092019160ff1690811115610c1057610c10612c6c565b6004811115610c2157610c21612c6c565b81526008820154602082015260098201546040820152600a9091015460ff1615156060909101529050428160a0015111158015610c625750428160c0015110155b15610d26576000610c71612575565b6001600160a01b031663bd365642858581518110610c9157610c91613144565b60200260200101516040518263ffffffff1660e01b8152600401610cb791815260200190565b600060405180830381865afa158015610cd4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cfc91908101906131ba565b905080848481518110610d1157610d11613144565b60200260200101519550955050505050915091565b505b80610d328161315a565b915050610a13565b50600060405180602001604052806000815250909250925050915091565b600080546040516c4d65646961526567697374727960981b60208201526001600160a01b0390911690638eaa6ac090602d01610403565b6000610d9961244f565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b8152600401610dc491906128e5565b602060405180830381865afa158015610de1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e059190612edd565b6001600160a01b03161415610e2c5760405162461bcd60e51b815260040161051a90612efa565b6000848152600160205260409081902090516368a8f95160e01b815273__$d7d41b463f0c25cd0b86b1d270805192c7$__916368a8f95191610e759190429086906004016131ee565b60006040518083038186803b158015610e8d57600080fd5b505af4158015610ea1573d6000803e3d6000fd5b50505050610ead61257f565b6001600160a01b031663389ad90e858585856040518563ffffffff1660e01b8152600401610ede9493929190613213565b600060405180830381600087803b158015610ef857600080fd5b505af1158015610f0c573d6000803e3d6000fd5b5050505050505050565b60008181526001602081815260408084208151610160810190925280546001600160a01b0316825292830180548594929384019190610f5490612f19565b80601f0160208091040260200160405190810160405280929190818152602001828054610f8090612f19565b8015610fcd5780601f10610fa257610100808354040283529160200191610fcd565b820191906000526020600020905b815481529060010190602001808311610fb057829003601f168201915b50505050508152602001600282018054610fe690612f19565b80601f016020809104026020016040519081016040528092919081815260200182805461101290612f19565b801561105f5780601f106110345761010080835404028352916020019161105f565b820191906000526020600020905b81548152906001019060200180831161104257829003601f168201915b50505091835250506003820154602082015260048083015460408301526005830154606083015260068301546080830152600783015460a09092019160ff16908111156110ae576110ae612c6c565b60048111156110bf576110bf612c6c565b81526008820154602082015260098201546040820152600a9091015460ff161515606090910152905060008160e00151600481111561110057611100612c6c565b141561111157610100015192915050565b60018160e00151600481111561112957611129612c6c565b14156111935780606001518160800151611143919061312d565b6060820151611152904261312d565b826101000151836101200151611168919061312d565b6111729190613248565b61117c9190613267565b81610120015161118c919061312d565b9392505050565b60028160e0015160048111156111ab576111ab612c6c565b1415611227576111b9612589565b6001600160a01b0316637a3c4c17846040518263ffffffff1660e01b81526004016111e691815260200190565b602060405180830381865afa158015611203573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118c9190613289565b60038160e00151600481111561123f5761123f612c6c565b141561124d576111b9612593565b60048160e00151600481111561126557611265612c6c565b14156112745750600092915050565b60405162461bcd60e51b81526020600482015260096024820152681b9bdd08195e1a5cdd60ba1b604482015260640161051a565b600080546040516713d999995c909a5960c21b60208201526001600160a01b0390911690638eaa6ac090602801610403565b61130760405180606001604052806000815260200160006001600160a01b03168152602001600081525090565b600061131161244f565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b815260040161133c91906128e5565b602060405180830381865afa158015611359573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137d9190612edd565b6001600160a01b031614156113a45760405162461bcd60e51b815260040161051a90612efa565b600084815260016020526040902073__$d7d41b463f0c25cd0b86b1d270805192c7$__90639e1b3936906113d787610f16565b42866040518563ffffffff1660e01b81526004016113f894939291906130b4565b60006040518083038186803b15801561141057600080fd5b505af4158015611424573d6000803e3d6000fd5b50505050611430612589565b60405163c0f4ed3160e01b8152600481018690526001600160a01b03858116602483015260448201859052919091169063c0f4ed31906064016060604051808303816000875af1158015611488573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ac91906132a2565b949350505050565b60008060009054906101000a90046001600160a01b03166001600160a01b031663d5f394886040518163ffffffff1660e01b8152600401602060405180830381865afa158015610454573d6000803e3d6000fd5b600080546040516b4d65646961466163746f727960a01b60208201526001600160a01b0390911690638eaa6ac090602c01610403565b600061154861244f565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b815260040161157391906128e5565b602060405180830381865afa158015611590573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b49190612edd565b6001600160a01b031614156115db5760405162461bcd60e51b815260040161051a90612efa565b60008281526001602052604090819020905163625deb3b60e11b815273__$d7d41b463f0c25cd0b86b1d270805192c7$__9163c4bbd6769161057791908590600401613303565b600061162c61244f565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b815260040161165791906128e5565b602060405180830381865afa158015611674573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116989190612edd565b6001600160a01b031614156116bf5760405162461bcd60e51b815260040161051a90612efa565b6116d681600001518260200151836040015161259d565b600060405180610160016040528083606001516001600160a01b031681526020018360000151815260200184815260200161170e4290565b815260200142815260208481015181830152604080860151818401526003606084015260808087018051918501919091525160a0840152600160c0909301839052600088815283835220835181546001600160a01b039091166001600160a01b03199091161781558382015180519495508594919361179393908501929101906127c9565b50604082015180516117af9160028401916020909101906127c9565b50606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070160006101000a81548160ff0219169083600481111561180257611802612c6c565b02179055506101008201516008820155610120820151600982015561014090910151600a909101805460ff19169115159190911790558151604051600391611849916130e3565b90815260405160209181900382019020805460018101825560009182529190200184905561187561256b565b6001600160a01b0316630ca82afb858460000151868660200151876040015188608001516040518763ffffffff1660e01b8152600401610ede96959493929190613316565b6118c261284d565b6000828152600160208181526040928390208351610160810190945280546001600160a01b031684529182018054918401916118fd90612f19565b80601f016020809104026020016040519081016040528092919081815260200182805461192990612f19565b80156119765780601f1061194b57610100808354040283529160200191611976565b820191906000526020600020905b81548152906001019060200180831161195957829003601f168201915b5050505050815260200160028201805461198f90612f19565b80601f01602080910402602001604051908101604052809291908181526020018280546119bb90612f19565b8015611a085780601f106119dd57610100808354040283529160200191611a08565b820191906000526020600020905b8154815290600101906020018083116119eb57829003601f168201915b50505091835250506003820154602082015260048083015460408301526005830154606083015260068301546080830152600783015460a09092019160ff1690811115611a5757611a57612c6c565b6004811115611a6857611a68612c6c565b81526008820154602082015260098201546040820152600a9091015460ff16151560609091015292915050565b6000611a9f61244f565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b8152600401611aca91906128e5565b602060405180830381865afa158015611ae7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b0b9190612edd565b6001600160a01b03161415611b325760405162461bcd60e51b815260040161051a90612efa565b600281604051611b4291906130e3565b9081526040519081900360200190205460ff1615611b8a5760405162461bcd60e51b815260206004820152600560248201526404b443130360dc1b604482015260640161051a565b6001600282604051611b9c91906130e3565b908152604051908190036020019020805491151560ff19909216919091179055611bc461256b565b6001600160a01b03166378689c64826040518263ffffffff1660e01b8152600401611bef9190613360565b600060405180830381600087803b158015611c0957600080fd5b505af1158015611c1d573d6000803e3d6000fd5b5050505050565b60008054604051651059141bdbdb60d21b60208201526001600160a01b0390911690638eaa6ac090602601610403565b6060600382604051611c6691906130e3565b9081526040805191829003602090810183208054808302850183019093528284529190830182828015611cb857602002820191906000526020600020905b815481526020019060010190808311611ca4575b50505050509050919050565b600080546040516d50726f706f73616c52657669657760901b60208201526001600160a01b0390911690638eaa6ac090602e01610403565b600080611d0761244f565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b8152600401611d3291906128e5565b602060405180830381865afa158015611d4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d739190612edd565b6001600160a01b03161415611d9a5760405162461bcd60e51b815260040161051a90612efa565b428611611dd15760405162461bcd60e51b81526020600482015260056024820152644b4431313160d81b604482015260640161051a565b84861115611e095760405162461bcd60e51b815260206004820152600560248201526425a218989960d91b604482015260640161051a565b838510611e405760405162461bcd60e51b81526020600482015260056024820152644b4431313360d81b604482015260640161051a565b611e4988612753565b611e5488868661259d565b6040516303fb4aab60e41b815273__$a79fa16630ef50be54c6520a39abca49df$__90633fb4aab090611e8f908b9089908990600401613373565b602060405180830381865af4158015611eac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ed09190613289565b905060006040518061016001604052808b6001600160a01b031681526020018a8152602001898152602001611f024290565b8152602001888152602001878152602001868152602001856004811115611f2b57611f2b612c6c565b8152602081018590526000604080830182905260609092015251634a8f3f1960e01b815290915073__$388ad09e564d78c8f313b1396af8a4a6a6$__90634a8f3f1990611f7c908490600401612ca4565b602060405180830381865af4158015611f99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fbd9190613289565b6101208201526000828152600160208181526040909220835181546001600160a01b0319166001600160a01b0390911617815582840151805185949293612009939085019201906127c9565b50604082015180516120259160028401916020909101906127c9565b50606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070160006101000a81548160ff0219169083600481111561207857612078612c6c565b02179055506101008201516008820155610120820151600982015561014090910151600a909101805460ff19169115159190911790556040516003906120bf908b906130e3565b9081526040516020918190038201902080546001810182556000918252919020018290556120eb61256b565b6001600160a01b0316637bab635a838b8b428c8c8c8c8c6040518a63ffffffff1660e01b815260040161212699989796959493929190613386565b600060405180830381600087803b15801561214057600080fd5b505af1158015612154573d6000803e3d6000fd5b505050505098975050505050505050565b6001602081905260009182526040909120805491810180546001600160a01b039093169261219290612f19565b80601f01602080910402602001604051908101604052809291908181526020018280546121be90612f19565b801561220b5780601f106121e05761010080835404028352916020019161220b565b820191906000526020600020905b8154815290600101906020018083116121ee57829003601f168201915b50505050509080600201805461222090612f19565b80601f016020809104026020016040519081016040528092919081815260200182805461224c90612f19565b80156122995780601f1061226e57610100808354040283529160200191612299565b820191906000526020600020905b81548152906001019060200180831161227c57829003601f168201915b50505060038401546004850154600586015460068701546007880154600889015460098a0154600a909a015498999598949750929550909360ff918216939091168b565b600080546040516b22bb32b73a22b6b4ba3a32b960a11b60208201526001600160a01b0390911690638eaa6ac090602c01610403565b6000808061231f61244f565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b815260040161234a91906128e5565b602060405180830381865afa158015612367573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061238b9190612edd565b6001600160a01b031614156123b25760405162461bcd60e51b815260040161051a90612efa565b6123ba612589565b6001600160a01b03166337df00c9846040518263ffffffff1660e01b81526004016123e791815260200190565b60408051808303816000875af1158015612405573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061242991906133f1565b6000948552600160208190526040909520600a01805460ff191690951790945593915050565b6000610478610d58565b600080612464612589565b6001600160a01b031663cc889b0b846040518263ffffffff1660e01b815260040161249191815260200190565b606060405180830381865afa1580156124ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124d291906132a2565b602001516001600160a01b031614158061256557506124ef61257f565b6001600160a01b031663761ce95d836040518263ffffffff1660e01b815260040161251c91815260200190565b600060405180830381865afa158015612539573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612561919081019061341f565b5115155b92915050565b60006104786122dd565b6000610478611cc4565b60006104786105c9565b60006104786103cf565b60006104786112a8565b60005b6003846040516125b091906130e3565b9081526040519081900360200190205481101561274d576000600160006003876040516125dd91906130e3565b908152602001604051809103902084815481106125fc576125fc613144565b9060005260206000200154815260200190815260200160002060050154905060006001600060038860405161263191906130e3565b9081526020016040518091039020858154811061265057612650613144565b9060005260206000200154815260200190815260200160002060060154905073__$07208da1966d569b755f74076ac36b126b$__638cb44d3e868685856040518563ffffffff1660e01b81526004016126c2949392919093845260208401929092526040830152606082015260800190565b602060405180830381865af41580156126df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612703919061353f565b156127385760405162461bcd60e51b815260206004820152600560248201526404b443131360dc1b604482015260640161051a565b505080806127459061315a565b9150506125a0565b50505050565b60028160405161276391906130e3565b9081526040519081900360200190205460ff1661278c576001600282604051611b9c91906130e3565b50565b50805461279b90612f19565b6000825580601f106127ab575050565b601f01602090049060005260206000209081019061278c91906128c3565b8280546127d590612f19565b90600052602060002090601f0160209004810192826127f7576000855561283d565b82601f1061281057805160ff191683800117855561283d565b8280016001018555821561283d579182015b8281111561283d578251825591602001919060010190612822565b506128499291506128c3565b5090565b60405180610160016040528060006001600160a01b03168152602001606081526020016060815260200160008152602001600081526020016000815260200160008152602001600060048111156128a6576128a6612c6c565b815260200160008152602001600081526020016000151581525090565b5b8082111561284957600081556001016128c4565b6001600160a01b03169052565b6001600160a01b0391909116815260200190565b6000806040838503121561290c57600080fd5b50508035926020909101359150565b60006020828403121561292d57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b038111828210171561296c5761296c612934565b60405290565b604051608081016001600160401b038111828210171561296c5761296c612934565b604051601f8201601f191681016001600160401b03811182821017156129bc576129bc612934565b604052919050565b60006001600160401b038211156129dd576129dd612934565b50601f01601f191660200190565b600082601f8301126129fc57600080fd5b8135612a0f612a0a826129c4565b612994565b818152846020838601011115612a2457600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215612a5357600080fd5b81356001600160401b03811115612a6957600080fd5b6114ac848285016129eb565b60005b83811015612a90578181015183820152602001612a78565b8381111561274d5750506000910152565b60008151808452612ab9816020860160208601612a75565b601f01601f19169290920160200192915050565b604081526000612ae06040830185612aa1565b90508260208301529392505050565b6001600160a01b038116811461278c57600080fd5b60008060008060808587031215612b1a57600080fd5b8435935060208501356001600160401b03811115612b3757600080fd5b612b43878288016129eb565b9350506040850135612b5481612aef565b9396929550929360600135925050565b600080600060608486031215612b7957600080fd5b833592506020840135612b8b81612aef565b929592945050506040919091013590565b600080600060608486031215612bb157600080fd5b8335925060208401356001600160401b0380821115612bcf57600080fd5b612bdb878388016129eb565b93506040860135915080821115612bf157600080fd5b9085019060a08288031215612c0557600080fd5b612c0d61294a565b823582811115612c1c57600080fd5b612c28898286016129eb565b825250602083013560208201526040830135604082015260608301359150612c4f82612aef565b816060820152608083013560808201528093505050509250925092565b634e487b7160e01b600052602160045260246000fd5b60058110612ca057634e487b7160e01b600052602160045260246000fd5b9052565b60208152612cb66020820183516128d8565b60006020830151610160806040850152612cd4610180850183612aa1565b91506040850151601f19858403016060860152612cf18382612aa1565b92505060608501516080850152608085015160a085015260a085015160c085015260c085015160e085015260e0850151610100612d3081870183612c82565b860151610120868101919091528601516101408087019190915290950151151593019290925250919050565b6020808252825182820181905260009190848201906040850190845b81811015612d9457835183529284019291840191600101612d78565b50909695505050505050565b600080600080600080600080610100898b031215612dbd57600080fd5b8835612dc881612aef565b975060208901356001600160401b0380821115612de457600080fd5b612df08c838d016129eb565b985060408b0135915080821115612e0657600080fd5b50612e138b828c016129eb565b965050606089013594506080890135935060a0890135925060c089013560058110612e3d57600080fd5b8092505060e089013590509295985092959890939650565b6001600160a01b038c16815261016060208201819052600090612e7a8382018e612aa1565b90508281036040840152612e8e818d612aa1565b9150508960608301528860808301528760a08301528660c0830152612eb660e0830187612c82565b84610100830152836101208301528215156101408301529c9b505050505050505050505050565b600060208284031215612eef57600080fd5b815161118c81612aef565b6020808252600590820152644b4430313160d81b604082015260600190565b600181811c90821680612f2d57607f821691505b60208210811415612f4e57634e487b7160e01b600052602260045260246000fd5b50919050565b8054600090600181811c9080831680612f6e57607f831692505b6020808410821415612f9057634e487b7160e01b600052602260045260246000fd5b83885260208801828015612fab5760018114612fbc57612fe7565b60ff19871682528282019750612fe7565b60008981526020902060005b87811015612fe157815484820152908601908401612fc8565b83019850505b5050505050505092915050565b60006101606130138461300e85546001600160a01b031690565b6128d8565b80602085015261302881850160018501612f54565b9050838103604085015261303f8160028501612f54565b90506003830154606085015260048301546080850152600583015460a0850152600683015460c0850152613077600784015460ff1690565b61308460e0860182612c82565b5060088301546101008501526009830154610120850152600a83015460ff16801515610140860152509392505050565b6080815260006130c76080830187612ff4565b6020830195909552506040810192909252606090910152919050565b600082516130f5818460208701612a75565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b60008219821115613128576131286130ff565b500190565b60008282101561313f5761313f6130ff565b500390565b634e487b7160e01b600052603260045260246000fd5b600060001982141561316e5761316e6130ff565b5060010190565b600082601f83011261318657600080fd5b8151613194612a0a826129c4565b8181528460208386010111156131a957600080fd5b6114ac826020830160208701612a75565b6000602082840312156131cc57600080fd5b81516001600160401b038111156131e257600080fd5b6114ac84828501613175565b6060815260006132016060830186612ff4565b60208301949094525060400152919050565b84815260806020820152600061322c6080830186612aa1565b6001600160a01b03949094166040830152506060015292915050565b6000816000190483118215151615613262576132626130ff565b500290565b60008261328457634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561329b57600080fd5b5051919050565b6000606082840312156132b457600080fd5b604051606081016001600160401b03811182821017156132d6576132d6612934565b6040528251815260208301516132eb81612aef565b60208201526040928301519281019290925250919050565b604081526000612ae06040830185612ff4565b86815260c06020820152600061332f60c0830188612aa1565b82810360408401526133418188612aa1565b60608401969096525050608081019290925260a0909101529392505050565b60208152600061118c6020830184612aa1565b6060815260006132016060830186612aa1565b60006101208b83528060208401526133a08184018c612aa1565b905082810360408401526133b4818b612aa1565b9150508760608301528660808301528560a08301528460c08301526133dc60e0830185612c82565b826101008301529a9950505050505050505050565b6000806040838503121561340457600080fd5b825161340f81612aef565b6020939093015192949293505050565b6000602080838503121561343257600080fd5b82516001600160401b038082111561344957600080fd5b818501915085601f83011261345d57600080fd5b81518181111561346f5761346f612934565b8060051b61347e858201612994565b918252838101850191858101908984111561349857600080fd5b86860192505b83831015613532578251858111156134b65760008081fd5b86016080818c03601f19018113156134ce5760008081fd5b6134d6612972565b8983015181526040808401516134eb81612aef565b828c01526060848101518284015292840151928984111561350e57600091508182fd5b61351c8f8d86880101613175565b908301525084525050918601919086019061349e565b9998505050505050505050565b60006020828403121561355157600080fd5b8151801515811461118c57600080fdfea26469706673582212204112e172b024b82f6cd5b4d324a3ef7f57774dd9e05a4514ea0d3442399d8c9c64736f6c634300080a0033",
  "libraries": {
    "Ad": "0xE8f3Ed040c0BbF6cE0FE901720bAeE3f808c961E",
    "Schedule": "0x3Edf3E9C3b9BD8d090b29788cA6d3f03f024EB0A",
    "Sale": "0xa6E4240C3A9E389624364ECA6a340642F44EC8C3",
    "Purchase": "0x308fCfF177b3DDD94F55A52487Cc0A4F00cbD134"
  },
  "devdoc": {
    "author": "Shumpei Koike - <shumpei.koike@bridges.inc>",
    "kind": "dev",
    "methods": {
      "acceptOffer(uint256,string,(string,uint256,uint256,address,uint256))": {
        "details": "Accepts an offer by the Media.",
        "params": {
          "offer": "Sale.Offer",
          "tokenId": "uint256 of the token ID",
          "tokenMetadata": "string of the NFT token metadata"
        }
      },
      "adPoolAddress()": {
        "details": "Gets the address of AdPool."
      },
      "addPeriod(address,string,string,uint256,uint256,uint256,uint8,uint256)": {
        "details": "Create a new period for a space. This function requires some params      to decide which kinds of pricing way and how much price to get started.",
        "params": {
          "displayEndTimestamp": "uint256 of the end timestamp for the display",
          "displayStartTimestamp": "uint256 of the start timestamp for the display",
          "minPrice": "uint256 of the minimum price to sell it out",
          "pricing": "uint256 of the pricing way",
          "proxy": "address of the media proxy",
          "saleEndTimestamp": "uint256 of the end timestamp for the sale",
          "spaceMetadata": "string of the space metadata",
          "tokenMetadata": "string of the token metadata"
        }
      },
      "addSpace(string)": {
        "details": "Creates a new space for the media account.",
        "params": {
          "spaceMetadata": "string of the space metadata"
        }
      },
      "bidByEnglishAuction(uint256,address,uint256)": {
        "details": "Bids to participate in an auction.      It is defined as an English Auction.",
        "params": {
          "msgSender": "address of the sender",
          "msgValue": "uint256 of the price",
          "tokenId": "uint256 of the token ID"
        }
      },
      "bidWithProposal(uint256,string,address,uint256)": {
        "details": "Bids to participate in an auction.      It is defined as an Open Bid.",
        "params": {
          "msgSender": "address of the sender",
          "msgValue": "uint256 of the price",
          "proposalMetadata": "string of the metadata hash",
          "tokenId": "uint256 of the token ID"
        }
      },
      "currentPrice(uint256)": {
        "details": "Returns the current price.",
        "params": {
          "tokenId": "uint256 of the token ID"
        }
      },
      "deletePeriod(uint256)": {
        "details": "Deletes a period and its token.      If there is any users locking the fund for the sale, the amount would be transfered      to the user when deleting the period.",
        "params": {
          "tokenId": "uint256 of the token ID"
        }
      },
      "display(string)": {
        "details": "Displays the ad content that is approved by the media owner.",
        "params": {
          "spaceMetadata": "string of the space metadata"
        }
      },
      "englishAuctionAddress()": {
        "details": "Gets the address of EnglishAuction."
      },
      "eventEmitterAddress()": {
        "details": "Gets the address of EventEmitter."
      },
      "mediaFactoryAddress()": {
        "details": "Gets the address of MediaFactory."
      },
      "mediaRegistryAddress()": {
        "details": "Gets the address of MediaRegistry."
      },
      "nameRegistryAddress()": {
        "details": "Gets the address of NameRegistry"
      },
      "offerBidAddress()": {
        "details": "Gets the address of OfferBid."
      },
      "openBidAddress()": {
        "details": "Gets the address of OpenBid."
      },
      "owner()": {
        "details": "Gets the owner address."
      },
      "proposalReviewAddress()": {
        "details": "Gets the address of ProposalReview."
      },
      "soldByDutchAuction(uint256,uint256)": {
        "details": "Buys the token that is defined as the specific period on an ad space.      The price is decreasing as time goes by, that is defined as an Dutch Auction.",
        "params": {
          "msgValue": "uint256 of the price",
          "tokenId": "uint256 of the token ID"
        }
      },
      "soldByEnglishAuction(uint256)": {
        "details": "Receives the token you bidded if you are the successful bidder.",
        "params": {
          "tokenId": "uint256 of the token ID"
        }
      },
      "soldByFixedPrice(uint256,uint256)": {
        "details": "Buys the token that is defined as the specific period on an ad space.      The price of the token is fixed.",
        "params": {
          "msgValue": "uint256 of the price",
          "tokenId": "uint256 of the token ID"
        }
      },
      "tokenIdsOf(string)": {
        "details": "Returns tokenIds tied with the space metadata",
        "params": {
          "spaceMetadata": "string of the space metadata"
        }
      },
      "vaultAddress()": {
        "details": "Gets the address of Vault."
      }
    },
    "stateVariables": {
      "_periodKeys": {
        "details": "Maps the space metadata with tokenIds of ad periods."
      },
      "periods": {
        "details": "tokenId <- metadata * displayStartTimestamp * displayEndTimestamp"
      },
      "spaced": {
        "details": "Returns spaceId that is tied with space metadata."
      }
    },
    "title": "AdPool - stores all ads accorss every space.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1889,
        "contract": "contracts/peripheries/AdPool.sol:AdPool",
        "label": "_nameRegistry",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(INameRegistry)3999"
      },
      {
        "astId": 4590,
        "contract": "contracts/peripheries/AdPool.sol:AdPool",
        "label": "periods",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Period)4208_storage)"
      },
      {
        "astId": 4595,
        "contract": "contracts/peripheries/AdPool.sol:AdPool",
        "label": "spaced",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_bool)"
      },
      {
        "astId": 4601,
        "contract": "contracts/peripheries/AdPool.sol:AdPool",
        "label": "_periodKeys",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(INameRegistry)3999": {
        "encoding": "inplace",
        "label": "contract INameRegistry",
        "numberOfBytes": "20"
      },
      "t_enum(Pricing)4184": {
        "encoding": "inplace",
        "label": "enum Ad.Pricing",
        "numberOfBytes": "1"
      },
      "t_mapping(t_string_memory_ptr,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_string_memory_ptr,t_bool)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Period)4208_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Ad.Period)",
        "numberOfBytes": "32",
        "value": "t_struct(Period)4208_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Period)4208_storage": {
        "encoding": "inplace",
        "label": "struct Ad.Period",
        "members": [
          {
            "astId": 4186,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "mediaProxy",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 4188,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "spaceMetadata",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 4190,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "tokenMetadata",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 4192,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "saleStartTimestamp",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 4194,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "saleEndTimestamp",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 4196,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "displayStartTimestamp",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 4198,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "displayEndTimestamp",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 4201,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "pricing",
            "offset": 0,
            "slot": "7",
            "type": "t_enum(Pricing)4184"
          },
          {
            "astId": 4203,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "minPrice",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 4205,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "startPrice",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 4207,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "sold",
            "offset": 0,
            "slot": "10",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "352"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}