{
  "address": "0x29eAe8E1b46AbC9C9DCFBBFcAF32D09046E1558A",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nameRegistry",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "adPoolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "proxy",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "applicationMetadata",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "updatableMetadata",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "mediaEOA",
          "type": "address"
        }
      ],
      "name": "addMedia",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allAccounts",
      "outputs": [
        {
          "internalType": "address",
          "name": "proxy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "mediaEOA",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "applicationMetadata",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "updatableMetadata",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "proxy",
          "type": "address"
        }
      ],
      "name": "created",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "englishAuctionAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eventEmitterAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mediaFactoryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mediaRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nameRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "offerBidAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openBidAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "proxy",
          "type": "address"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalReviewAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "proxy",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "metadata",
          "type": "string"
        }
      ],
      "name": "updateApplicationMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "mediaEOA",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "metadata",
          "type": "string"
        }
      ],
      "name": "updateMedia",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x3e8f6b6c9757bf008c4354c1efe088b7a619bd993cbfe6d2b7c715031e646b4a",
  "receipt": {
    "to": null,
    "from": "0x051Eb10CD4d10E18244f40c470c91c72655b7dE9",
    "contractAddress": "0x29eAe8E1b46AbC9C9DCFBBFcAF32D09046E1558A",
    "transactionIndex": 79,
    "gasUsed": "752845",
    "logsBloom": "0x
    "blockHash": "0x7213ec1fe760e66999fe6779a90d8e65e6607ac1c544d8df1aa4a5b00a1a160e",
    "transactionHash": "0x3e8f6b6c9757bf008c4354c1efe088b7a619bd993cbfe6d2b7c715031e646b4a",
    "logs": [
      {
        "transactionIndex": 79,
        "blockNumber": 22200454,
        "transactionHash": "0x3e8f6b6c9757bf008c4354c1efe088b7a619bd993cbfe6d2b7c715031e646b4a",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000051eb10cd4d10e18244f40c470c91c72655b7de9",
          "0x0000000000000000000000007b5000af8ab69fd59eb0d4f5762bff57c9c04385"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000503d4193e0bc0000000000000000000000000000000000000000000000000027a47d26f907bc0000000000000000000000000000000000000000000000a8c8be1989a9e23c066800000000000000000000000000000000000000000000000027543fe56527000000000000000000000000000000000000000000000000a8c8be69c6eb761cc268",
        "logIndex": 573,
        "blockHash": "0x7213ec1fe760e66999fe6779a90d8e65e6607ac1c544d8df1aa4a5b00a1a160e"
      }
    ],
    "blockNumber": 22200454,
    "cumulativeGasUsed": "15814816",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xA21f44Ad2751A5020dBff35f813D90C18f9986b7"
  ],
  "solcInputHash": "3b843421c7cbc4186a9b782888b147b3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nameRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"adPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"applicationMetadata\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"updatableMetadata\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"mediaEOA\",\"type\":\"address\"}],\"name\":\"addMedia\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allAccounts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"mediaEOA\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"applicationMetadata\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"updatableMetadata\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"created\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"englishAuctionAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eventEmitterAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mediaFactoryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mediaRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nameRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"offerBidAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openBidAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalReviewAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"name\":\"updateApplicationMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mediaEOA\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"name\":\"updateMedia\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Shumpei Koike - <shumpei.koike@bridges.inc>\",\"kind\":\"dev\",\"methods\":{\"adPoolAddress()\":{\"details\":\"Gets the address of AdPool.\"},\"addMedia(address,string,string,address)\":{\"details\":\"Adds media account.\",\"params\":{\"applicationMetadata\":\"string of constant metadata for the defailts of the account\",\"mediaEOA\":\"address of the media account\",\"proxy\":\"address of the proxy contract\",\"updatableMetadata\":\"string of constant metadata for the defailts of the account\"}},\"constructor\":{\"details\":\"_nameRegistry address of the NameRegistry\"},\"created(address)\":{\"details\":\"Returns whether the account has created or not.\",\"params\":{\"proxy\":\"address of the proxy contract that represents an account.\"}},\"englishAuctionAddress()\":{\"details\":\"Gets the address of EnglishAuction.\"},\"eventEmitterAddress()\":{\"details\":\"Gets the address of EventEmitter.\"},\"mediaFactoryAddress()\":{\"details\":\"Gets the address of MediaFactory.\"},\"mediaRegistryAddress()\":{\"details\":\"Gets the address of MediaRegistry.\"},\"nameRegistryAddress()\":{\"details\":\"Gets the address of NameRegistry\"},\"offerBidAddress()\":{\"details\":\"Gets the address of OfferBid.\"},\"openBidAddress()\":{\"details\":\"Gets the address of OpenBid.\"},\"owner()\":{\"details\":\"Gets the owner address.\"},\"ownerOf(address)\":{\"details\":\"Returns the owner of the account.\",\"params\":{\"proxy\":\"address of the proxy contract that represents an account.\"}},\"proposalReviewAddress()\":{\"details\":\"Gets the address of ProposalReview.\"},\"updateApplicationMetadata(address,string)\":{\"details\":\"Updates media account. It can only be called by the deployer as it is an application info.\",\"params\":{\"metadata\":\"address of the media account\",\"proxy\":\"string of the account metadata\"}},\"updateMedia(address,string)\":{\"details\":\"Updates media account. It can be called by media proxies.\",\"params\":{\"mediaEOA\":\"address of the media account\",\"metadata\":\"string of the account metadata\"}},\"vaultAddress()\":{\"details\":\"Gets the address of Vault.\"}},\"stateVariables\":{\"allAccounts\":{\"details\":\"Returns account info.\",\"params\":{\"proxy\":\"address of the proxy contract address\"}}},\"title\":\"MediaRegistry - registers a list of media accounts.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/peripheries/MediaRegistry.sol\":\"MediaRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/accessors/NameAccessor.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../interfaces/INameRegistry.sol\\\";\\n\\n/// @title NameAccessor - manages the endpoints.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ncontract NameAccessor {\\n\\tINameRegistry internal _nameRegistry;\\n\\n\\t/// @dev Sets the address of NameRegistry.\\n\\t/// @param nameRegistry address of the NameRegistry\\n\\tfunction initialize(address nameRegistry) internal {\\n\\t\\t_nameRegistry = INameRegistry(nameRegistry);\\n\\t}\\n\\n\\t/// @dev Prevents calling a function from anyone except the accepted contracts.\\n\\tmodifier onlyAllowedContract() {\\n\\t\\trequire(_nameRegistry.allowedContracts(msg.sender), \\\"KD013\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t/// @dev Throws if called by any account other than the owner.\\n\\tmodifier onlyOwner() {\\n\\t\\trequire(owner() == msg.sender, \\\"KD012\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t/// @dev Gets the address of NameRegistry\\n\\tfunction nameRegistryAddress() public view returns (address) {\\n\\t\\treturn address(_nameRegistry);\\n\\t}\\n\\n\\t/// @dev Gets the address of AdPool.\\n\\tfunction adPoolAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"AdPool\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of MediaFactory.\\n\\tfunction mediaFactoryAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"MediaFactory\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of MediaRegistry.\\n\\tfunction mediaRegistryAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"MediaRegistry\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of Vault.\\n\\tfunction vaultAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"Vault\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of EventEmitter.\\n\\tfunction eventEmitterAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"EventEmitter\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of EnglishAuction.\\n\\tfunction englishAuctionAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"EnglishAuction\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of OpenBid.\\n\\tfunction openBidAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"OpenBid\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of OfferBid.\\n\\tfunction offerBidAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"OfferBid\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of ProposalReview.\\n\\tfunction proposalReviewAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"ProposalReview\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the owner address.\\n\\tfunction owner() public view returns (address) {\\n\\t\\treturn _nameRegistry.deployer();\\n\\t}\\n}\\n\",\"keccak256\":\"0x1cd127d9c865e6441a0039bfe6af64ac60f5cf5c338d27e9f928f2eec21ca244\",\"license\":\"UNLICENSED\"},\"contracts/common/BlockTimestamp.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\n/// @title BlockTimestamp - gets a block timestamp.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\nabstract contract BlockTimestamp {\\n\\t/// @dev Method that exists purely to be overridden for tests\\n\\tfunction _blockTimestamp() internal view virtual returns (uint256) {\\n\\t\\treturn block.timestamp;\\n\\t}\\n}\\n\",\"keccak256\":\"0x6991a9f03b7e615563901bb2fb1dadcb4fb6cf3f0e7c15a39d22d5929f530940\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IEventEmitter.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../libraries/Ad.sol\\\";\\n\\n/// @title IEventEmitter - emits events.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IEventEmitter {\\n\\tfunction emitNewSpace(string memory metadata) external;\\n\\n\\tfunction emitNewPeriod(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tuint256 saleStartTimestamp,\\n\\t\\tuint256 saleEndTimestamp,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\tAd.Pricing pricing,\\n\\t\\tuint256 minPrice\\n\\t) external;\\n\\n\\tfunction emitDeletePeriod(uint256 tokenId) external;\\n\\n\\tfunction emitBuy(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 msgValue,\\n\\t\\taddress msgSender,\\n\\t\\tuint256 blockTimestamp\\n\\t) external;\\n\\n\\tfunction emitBid(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 msgValue,\\n\\t\\taddress msgSender,\\n\\t\\tuint256 blockTimestamp\\n\\t) external;\\n\\n\\tfunction emitBidWithProposal(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 msgValue,\\n\\t\\taddress msgSender,\\n\\t\\tstring memory metadata,\\n\\t\\tuint256 blockTimestamp\\n\\t) external;\\n\\n\\tfunction emitSelectProposal(uint256 tokenId, address successfulBidder)\\n\\t\\texternal;\\n\\n\\tfunction emitReceiveToken(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 price,\\n\\t\\taddress buyer,\\n\\t\\tuint256 blockTimestamp\\n\\t) external;\\n\\n\\tfunction emitOfferPeriod(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\taddress sender,\\n\\t\\tuint256 price\\n\\t) external;\\n\\n\\tfunction emitCancelOffer(uint256 tokenId) external;\\n\\n\\tfunction emitAcceptOffer(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\tuint256 price\\n\\t) external;\\n\\n\\tfunction emitWithdraw(uint256 amount) external;\\n\\n\\tfunction emitPropose(uint256 tokenId, string memory metadata) external;\\n\\n\\tfunction emitAcceptProposal(uint256 tokenId, string memory metadata) external;\\n\\n\\tfunction emitDenyProposal(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory metadata,\\n\\t\\tstring memory reason,\\n\\t\\tbool offensive\\n\\t) external;\\n\\n\\tfunction emitTransferCustom(\\n\\t\\taddress from,\\n\\t\\taddress to,\\n\\t\\tuint256 tokenId\\n\\t) external;\\n\\n\\tfunction emitNewMedia(\\n\\t\\taddress proxy,\\n\\t\\taddress mediaEOA,\\n\\t\\tstring memory applicationMetadata,\\n\\t\\tstring memory updatableMetadata,\\n\\t\\tuint256 saltNonce\\n\\t) external;\\n\\n\\tfunction emitUpdateMedia(\\n\\t\\taddress proxy,\\n\\t\\taddress mediaEOA,\\n\\t\\tstring memory accountMetadata\\n\\t) external;\\n\\n\\tfunction emitPaymentFailure(address receiver, uint256 price) external;\\n\\n\\tfunction emitReceived(address receiver, uint256 price) external;\\n}\\n\",\"keccak256\":\"0x7ab04e62e2094f870870364d5df7f8ab7f6a646f74fcead70cef4c4a47b23613\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IMediaRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../libraries/Ad.sol\\\";\\n\\n/// @title MediaRegistry - registers a list of media accounts.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IMediaRegistry {\\n\\tstruct Account {\\n\\t\\taddress proxy;\\n\\t\\taddress mediaEOA;\\n\\t\\tstring applicationMetadata;\\n\\t\\tstring updatableMetadata;\\n\\t}\\n\\n\\t/// @dev Returns account info.\\n\\t/// @param proxy address of the proxy contract address\\n\\tfunction allAccounts(address proxy)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (\\n\\t\\t\\taddress,\\n\\t\\t\\taddress,\\n\\t\\t\\tstring memory,\\n\\t\\t\\tstring memory\\n\\t\\t);\\n\\n\\t/// @dev Adds media account.\\n\\t/// @param proxy address of the proxy contract\\n\\t/// @param applicationMetadata string of constant metadata for the defailts of the account\\n\\t/// @param updatableMetadata string of constant metadata for the defailts of the account\\n\\t/// @param mediaEOA address of the media account\\n\\tfunction addMedia(\\n\\t\\taddress proxy,\\n\\t\\tstring memory applicationMetadata,\\n\\t\\tstring memory updatableMetadata,\\n\\t\\taddress mediaEOA\\n\\t) external;\\n\\n\\t/// @dev Updates media account.\\n\\t/// @param metadata string of the account metadata\\n\\t/// @param mediaEOA address of the media account\\n\\tfunction updateMedia(address mediaEOA, string memory metadata) external;\\n\\n\\tfunction updateApplicationMetadata(address proxy, string memory metadata)\\n\\t\\texternal;\\n\\n\\t/// @dev Returns whether the account has created or not.\\n\\t/// @param proxy address of the proxy contract that represents an account.\\n\\tfunction created(address proxy) external view returns (bool);\\n\\n\\t/// @dev Returns the owner of the account.\\n\\t/// @param proxy address of the proxy contract that represents an account.\\n\\tfunction ownerOf(address proxy) external view returns (address);\\n}\\n\",\"keccak256\":\"0xf60005370edf262e5e68ba96deb5fc8b7a0fcb1546ba8c4a6c1793017389c78b\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/INameRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\n/// @title INameRegistry - saves a set of addresses used in the system.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface INameRegistry {\\n\\t/// @dev Sets the address associated with the key name.\\n\\t///      If the address is the contract, not an EOA, it is\\n\\t///      saved as the allowed contract list.\\n\\t/// @param key bytes32 of the key\\n\\t/// @param value address of the value\\n\\tfunction set(bytes32 key, address value) external;\\n\\n\\t/// @dev Gets the address associated with the key name.\\n\\t/// @param key bytes32 of the key\\n\\tfunction get(bytes32 key) external view returns (address);\\n\\n\\t/// @dev Returns whether or not the address is the one that we deployed.\\n\\t/// @param caller address of the msg.sender\\n\\tfunction allowedContracts(address caller) external returns (bool);\\n\\n\\t/// @dev Gets the deployer of NameRegistry.\\n\\tfunction deployer() external view returns (address);\\n}\\n\",\"keccak256\":\"0xa46fe7c81f01262c7daf69b1d7695a6dd507d5a4ab881dab731e3faa992dcb1d\",\"license\":\"UNLICENSED\"},\"contracts/libraries/Ad.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nlibrary Ad {\\n\\tuint256 private constant _ID_LENGTH = 100000000000000000000000000000000;\\n\\t// 0.RRP     : Recommended Retail Price\\n\\t// 1.DUTCH   : Dutch Auction\\n\\t// 2.ENGLISH : English Acction\\n\\t// 3.OFFER   : Offered by Others\\n\\t// 4.OPEN    : Open Bid by revealing the content\\n\\tenum Pricing {\\n\\t\\tRRP,\\n\\t\\tDUTCH,\\n\\t\\tENGLISH,\\n\\t\\tOFFER,\\n\\t\\tOPEN\\n\\t}\\n\\tstruct Period {\\n\\t\\taddress mediaProxy;\\n\\t\\tstring spaceMetadata;\\n\\t\\tstring tokenMetadata;\\n\\t\\tuint256 saleStartTimestamp;\\n\\t\\tuint256 saleEndTimestamp;\\n\\t\\tuint256 displayStartTimestamp;\\n\\t\\tuint256 displayEndTimestamp;\\n\\t\\tPricing pricing;\\n\\t\\tuint256 minPrice;\\n\\t\\tuint256 startPrice;\\n\\t\\tbool sold;\\n\\t}\\n\\n\\tfunction id(\\n\\t\\tstring memory metadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp\\n\\t) public pure returns (uint256) {\\n\\t\\treturn\\n\\t\\t\\tuint256(\\n\\t\\t\\t\\tkeccak256(\\n\\t\\t\\t\\t\\tabi.encodePacked(metadata, displayStartTimestamp, displayEndTimestamp)\\n\\t\\t\\t\\t)\\n\\t\\t\\t) % _ID_LENGTH;\\n\\t}\\n}\\n\",\"keccak256\":\"0x47955874c274fa881de288b6af7d7ea36130caf1d64c6e367316278f6e95fd07\",\"license\":\"UNLICENSED\"},\"contracts/peripheries/MediaRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../accessors/NameAccessor.sol\\\";\\nimport \\\"../common/BlockTimestamp.sol\\\";\\nimport \\\"../interfaces/IMediaRegistry.sol\\\";\\nimport \\\"../interfaces/IEventEmitter.sol\\\";\\n\\n/// @title MediaRegistry - registers a list of media accounts.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ncontract MediaRegistry is IMediaRegistry, BlockTimestamp, NameAccessor {\\n\\t/// @inheritdoc IMediaRegistry\\n\\tmapping(address => Account) public override allAccounts;\\n\\n\\t/// @dev Throws if not called by MediaFacade proxies.\\n\\tmodifier onlyProxies() {\\n\\t\\trequire(ownerOf(msg.sender) != address(0), \\\"KD011\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t/// @dev Throws if not called by MediaFactory.\\n\\tmodifier onlyFactory() {\\n\\t\\trequire(msg.sender == mediaFactoryAddress(), \\\"KD010\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t/// Constructor\\n\\t/// @dev _nameRegistry address of the NameRegistry\\n\\tconstructor(address _nameRegistry) {\\n\\t\\tinitialize(_nameRegistry);\\n\\t}\\n\\n\\t/// @dev Adds media account.\\n\\t/// @param proxy address of the proxy contract\\n\\t/// @param applicationMetadata string of constant metadata for the defailts of the account\\n\\t/// @param updatableMetadata string of constant metadata for the defailts of the account\\n\\t/// @param mediaEOA address of the media account\\n\\tfunction addMedia(\\n\\t\\taddress proxy,\\n\\t\\tstring memory applicationMetadata,\\n\\t\\tstring memory updatableMetadata,\\n\\t\\taddress mediaEOA\\n\\t) external onlyFactory {\\n\\t\\tallAccounts[proxy] = Account(\\n\\t\\t\\tproxy,\\n\\t\\t\\tmediaEOA,\\n\\t\\t\\tapplicationMetadata,\\n\\t\\t\\tupdatableMetadata\\n\\t\\t);\\n\\t}\\n\\n\\t/// @dev Updates media account. It can be called by media proxies.\\n\\t/// @param metadata string of the account metadata\\n\\t/// @param mediaEOA address of the media account\\n\\tfunction updateMedia(address mediaEOA, string memory metadata)\\n\\t\\texternal\\n\\t\\tonlyProxies\\n\\t{\\n\\t\\tallAccounts[msg.sender].mediaEOA = mediaEOA;\\n\\t\\tallAccounts[msg.sender].updatableMetadata = metadata;\\n\\t\\t_event().emitUpdateMedia(msg.sender, mediaEOA, metadata);\\n\\t}\\n\\n\\t/// @dev Updates media account. It can only be called by the deployer as it is an application info.\\n\\t/// @param proxy string of the account metadata\\n\\t/// @param metadata address of the media account\\n\\tfunction updateApplicationMetadata(address proxy, string memory metadata)\\n\\t\\texternal\\n\\t\\tonlyOwner\\n\\t{\\n\\t\\tallAccounts[proxy].applicationMetadata = metadata;\\n\\t}\\n\\n\\t/// @dev Returns whether the account has created or not.\\n\\t/// @param proxy address of the proxy contract that represents an account.\\n\\tfunction created(address proxy) public view returns (bool) {\\n\\t\\treturn allAccounts[proxy].proxy != address(0x0);\\n\\t}\\n\\n\\t/// @dev Returns the owner of the account.\\n\\t/// @param proxy address of the proxy contract that represents an account.\\n\\tfunction ownerOf(address proxy) public view returns (address) {\\n\\t\\treturn allAccounts[proxy].mediaEOA;\\n\\t}\\n\\n\\tfunction _event() internal view virtual returns (IEventEmitter) {\\n\\t\\treturn IEventEmitter(eventEmitterAddress());\\n\\t}\\n}\\n\",\"keccak256\":\"0x8e2078fb7c4c3a0e092e6d96d864c55b387ba02f69f859e55eb2dbc46fff22a0\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610cc6380380610cc683398101604081905261002f91610050565b600080546001600160a01b0319166001600160a01b03831617905550610080565b60006020828403121561006257600080fd5b81516001600160a01b038116811461007957600080fd5b9392505050565b610c378061008f6000396000f3fe608060405234801561001057600080fd5b50600436106100db5760003560e01c80630106d8eb146100e05780630df8e9fe1461010557806314afd79e14610128578063179bcff71461013b5780632231c1eb1461015057806327b7a2f514610158578063430bf08a146101695780636a58767e146101715780637cf175fb146101795780638da5cb5b146101815780638f6059d614610189578063a029900814610191578063a8774e17146101a4578063c9cd71b5146101b7578063d42efd83146101bf578063e2f5fc78146101fd578063f072629114610205575b600080fd5b6100e861020d565b6040516001600160a01b0390911681526020015b60405180910390f35b610118610113366004610941565b6102bb565b6040516100fc94939291906109b2565b6100e8610136366004610941565b610403565b61014e610149366004610a9d565b610425565b005b6100e8610524565b6000546001600160a01b03166100e8565b6100e8610555565b6100e8610584565b6100e86105bb565b6100e86105ed565b6100e8610641565b61014e61019f366004610aec565b610677565b61014e6101b2366004610a9d565b61076d565b6100e86107e8565b6101ed6101cd366004610941565b6001600160a01b0390811660009081526001602052604090205416151590565b60405190151581526020016100fc565b6100e8610818565b6100e8610850565b600080546040516d22b733b634b9b420bab1ba34b7b760911b60208201526001600160a01b0390911690638eaa6ac090602e015b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161027591815260200190565b602060405180830381865afa158015610292573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b69190610b74565b905090565b60016020819052600091825260409091208054918101546002820180546001600160a01b039485169490921692916102f290610b91565b80601f016020809104026020016040519081016040528092919081815260200182805461031e90610b91565b801561036b5780601f106103405761010080835404028352916020019161036b565b820191906000526020600020905b81548152906001019060200180831161034e57829003601f168201915b50505050509080600301805461038090610b91565b80601f01602080910402602001604051908101604052809291908181526020018280546103ac90610b91565b80156103f95780601f106103ce576101008083540402835291602001916103f9565b820191906000526020600020905b8154815290600101906020018083116103dc57829003601f168201915b5050505050905084565b6001600160a01b03908116600090815260016020819052604090912001541690565b600061043033610403565b6001600160a01b031614156104745760405162461bcd60e51b81526020600482015260056024820152644b4430313160d81b60448201526064015b60405180910390fd5b33600090815260016020818152604090922090810180546001600160a01b0319166001600160a01b03861617905582516104b692600390920191840190610890565b506104bf610886565b6001600160a01b031663262360133384846040518463ffffffff1660e01b81526004016104ee93929190610bcc565b600060405180830381600087803b15801561050857600080fd5b505af115801561051c573d6000803e3d6000fd5b505050505050565b600080546040516613dc195b909a5960ca1b60208201526001600160a01b0390911690638eaa6ac090602701610241565b600080546040516415985d5b1d60da1b60208201526001600160a01b0390911690638eaa6ac090602501610241565b600080546040516c4d65646961526567697374727960981b60208201526001600160a01b0390911690638eaa6ac090602d01610241565b600080546040516713d999995c909a5960c21b60208201526001600160a01b0390911690638eaa6ac090602801610241565b60008060009054906101000a90046001600160a01b03166001600160a01b031663d5f394886040518163ffffffff1660e01b8152600401602060405180830381865afa158015610292573d6000803e3d6000fd5b600080546040516b4d65646961466163746f727960a01b60208201526001600160a01b0390911690638eaa6ac090602c01610241565b61067f610641565b6001600160a01b0316336001600160a01b0316146106c75760405162461bcd60e51b815260206004820152600560248201526404b443031360dc1b604482015260640161046b565b604080516080810182526001600160a01b038087168083528482166020808501918252848601898152606086018990526000938452600180835296909320855181549086166001600160a01b031991821617825592519681018054979095169690921695909517909255518051929391926107489260028501920190610890565b5060608201518051610764916003840191602090910190610890565b50505050505050565b336107766105ed565b6001600160a01b0316146107b45760405162461bcd60e51b815260206004820152600560248201526425a218189960d91b604482015260640161046b565b6001600160a01b038216600090815260016020908152604090912082516107e392600290920191840190610890565b505050565b60008054604051651059141bdbdb60d21b60208201526001600160a01b0390911690638eaa6ac090602601610241565b600080546040516d50726f706f73616c52657669657760901b60208201526001600160a01b0390911690638eaa6ac090602e01610241565b600080546040516b22bb32b73a22b6b4ba3a32b960a11b60208201526001600160a01b0390911690638eaa6ac090602c01610241565b60006102b6610850565b82805461089c90610b91565b90600052602060002090601f0160209004810192826108be5760008555610904565b82601f106108d757805160ff1916838001178555610904565b82800160010185558215610904579182015b828111156109045782518255916020019190600101906108e9565b50610910929150610914565b5090565b5b808211156109105760008155600101610915565b6001600160a01b038116811461093e57600080fd5b50565b60006020828403121561095357600080fd5b813561095e81610929565b9392505050565b6000815180845260005b8181101561098b5760208185018101518683018201520161096f565b8181111561099d576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b038581168252841660208201526080604082018190526000906109de90830185610965565b82810360608401526109f08185610965565b979650505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610a2257600080fd5b81356001600160401b0380821115610a3c57610a3c6109fb565b604051601f8301601f19908116603f01168101908282118183101715610a6457610a646109fb565b81604052838152866020858801011115610a7d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610ab057600080fd5b8235610abb81610929565b915060208301356001600160401b03811115610ad657600080fd5b610ae285828601610a11565b9150509250929050565b60008060008060808587031215610b0257600080fd5b8435610b0d81610929565b935060208501356001600160401b0380821115610b2957600080fd5b610b3588838901610a11565b94506040870135915080821115610b4b57600080fd5b50610b5887828801610a11565b9250506060850135610b6981610929565b939692955090935050565b600060208284031215610b8657600080fd5b815161095e81610929565b600181811c90821680610ba557607f821691505b60208210811415610bc657634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b03848116825283166020820152606060408201819052600090610bf890830184610965565b9594505050505056fea2646970667358221220b9816b68cd46f7e76f2f5111ba5cfd24d2455fc2465fbd11b65912c5e502a30a64736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100db5760003560e01c80630106d8eb146100e05780630df8e9fe1461010557806314afd79e14610128578063179bcff71461013b5780632231c1eb1461015057806327b7a2f514610158578063430bf08a146101695780636a58767e146101715780637cf175fb146101795780638da5cb5b146101815780638f6059d614610189578063a029900814610191578063a8774e17146101a4578063c9cd71b5146101b7578063d42efd83146101bf578063e2f5fc78146101fd578063f072629114610205575b600080fd5b6100e861020d565b6040516001600160a01b0390911681526020015b60405180910390f35b610118610113366004610941565b6102bb565b6040516100fc94939291906109b2565b6100e8610136366004610941565b610403565b61014e610149366004610a9d565b610425565b005b6100e8610524565b6000546001600160a01b03166100e8565b6100e8610555565b6100e8610584565b6100e86105bb565b6100e86105ed565b6100e8610641565b61014e61019f366004610aec565b610677565b61014e6101b2366004610a9d565b61076d565b6100e86107e8565b6101ed6101cd366004610941565b6001600160a01b0390811660009081526001602052604090205416151590565b60405190151581526020016100fc565b6100e8610818565b6100e8610850565b600080546040516d22b733b634b9b420bab1ba34b7b760911b60208201526001600160a01b0390911690638eaa6ac090602e015b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161027591815260200190565b602060405180830381865afa158015610292573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b69190610b74565b905090565b60016020819052600091825260409091208054918101546002820180546001600160a01b039485169490921692916102f290610b91565b80601f016020809104026020016040519081016040528092919081815260200182805461031e90610b91565b801561036b5780601f106103405761010080835404028352916020019161036b565b820191906000526020600020905b81548152906001019060200180831161034e57829003601f168201915b50505050509080600301805461038090610b91565b80601f01602080910402602001604051908101604052809291908181526020018280546103ac90610b91565b80156103f95780601f106103ce576101008083540402835291602001916103f9565b820191906000526020600020905b8154815290600101906020018083116103dc57829003601f168201915b5050505050905084565b6001600160a01b03908116600090815260016020819052604090912001541690565b600061043033610403565b6001600160a01b031614156104745760405162461bcd60e51b81526020600482015260056024820152644b4430313160d81b60448201526064015b60405180910390fd5b33600090815260016020818152604090922090810180546001600160a01b0319166001600160a01b03861617905582516104b692600390920191840190610890565b506104bf610886565b6001600160a01b031663262360133384846040518463ffffffff1660e01b81526004016104ee93929190610bcc565b600060405180830381600087803b15801561050857600080fd5b505af115801561051c573d6000803e3d6000fd5b505050505050565b600080546040516613dc195b909a5960ca1b60208201526001600160a01b0390911690638eaa6ac090602701610241565b600080546040516415985d5b1d60da1b60208201526001600160a01b0390911690638eaa6ac090602501610241565b600080546040516c4d65646961526567697374727960981b60208201526001600160a01b0390911690638eaa6ac090602d01610241565b600080546040516713d999995c909a5960c21b60208201526001600160a01b0390911690638eaa6ac090602801610241565b60008060009054906101000a90046001600160a01b03166001600160a01b031663d5f394886040518163ffffffff1660e01b8152600401602060405180830381865afa158015610292573d6000803e3d6000fd5b600080546040516b4d65646961466163746f727960a01b60208201526001600160a01b0390911690638eaa6ac090602c01610241565b61067f610641565b6001600160a01b0316336001600160a01b0316146106c75760405162461bcd60e51b815260206004820152600560248201526404b443031360dc1b604482015260640161046b565b604080516080810182526001600160a01b038087168083528482166020808501918252848601898152606086018990526000938452600180835296909320855181549086166001600160a01b031991821617825592519681018054979095169690921695909517909255518051929391926107489260028501920190610890565b5060608201518051610764916003840191602090910190610890565b50505050505050565b336107766105ed565b6001600160a01b0316146107b45760405162461bcd60e51b815260206004820152600560248201526425a218189960d91b604482015260640161046b565b6001600160a01b038216600090815260016020908152604090912082516107e392600290920191840190610890565b505050565b60008054604051651059141bdbdb60d21b60208201526001600160a01b0390911690638eaa6ac090602601610241565b600080546040516d50726f706f73616c52657669657760901b60208201526001600160a01b0390911690638eaa6ac090602e01610241565b600080546040516b22bb32b73a22b6b4ba3a32b960a11b60208201526001600160a01b0390911690638eaa6ac090602c01610241565b60006102b6610850565b82805461089c90610b91565b90600052602060002090601f0160209004810192826108be5760008555610904565b82601f106108d757805160ff1916838001178555610904565b82800160010185558215610904579182015b828111156109045782518255916020019190600101906108e9565b50610910929150610914565b5090565b5b808211156109105760008155600101610915565b6001600160a01b038116811461093e57600080fd5b50565b60006020828403121561095357600080fd5b813561095e81610929565b9392505050565b6000815180845260005b8181101561098b5760208185018101518683018201520161096f565b8181111561099d576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b038581168252841660208201526080604082018190526000906109de90830185610965565b82810360608401526109f08185610965565b979650505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610a2257600080fd5b81356001600160401b0380821115610a3c57610a3c6109fb565b604051601f8301601f19908116603f01168101908282118183101715610a6457610a646109fb565b81604052838152866020858801011115610a7d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610ab057600080fd5b8235610abb81610929565b915060208301356001600160401b03811115610ad657600080fd5b610ae285828601610a11565b9150509250929050565b60008060008060808587031215610b0257600080fd5b8435610b0d81610929565b935060208501356001600160401b0380821115610b2957600080fd5b610b3588838901610a11565b94506040870135915080821115610b4b57600080fd5b50610b5887828801610a11565b9250506060850135610b6981610929565b939692955090935050565b600060208284031215610b8657600080fd5b815161095e81610929565b600181811c90821680610ba557607f821691505b60208210811415610bc657634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b03848116825283166020820152606060408201819052600090610bf890830184610965565b9594505050505056fea2646970667358221220b9816b68cd46f7e76f2f5111ba5cfd24d2455fc2465fbd11b65912c5e502a30a64736f6c634300080a0033",
  "devdoc": {
    "author": "Shumpei Koike - <shumpei.koike@bridges.inc>",
    "kind": "dev",
    "methods": {
      "adPoolAddress()": {
        "details": "Gets the address of AdPool."
      },
      "addMedia(address,string,string,address)": {
        "details": "Adds media account.",
        "params": {
          "applicationMetadata": "string of constant metadata for the defailts of the account",
          "mediaEOA": "address of the media account",
          "proxy": "address of the proxy contract",
          "updatableMetadata": "string of constant metadata for the defailts of the account"
        }
      },
      "constructor": {
        "details": "_nameRegistry address of the NameRegistry"
      },
      "created(address)": {
        "details": "Returns whether the account has created or not.",
        "params": {
          "proxy": "address of the proxy contract that represents an account."
        }
      },
      "englishAuctionAddress()": {
        "details": "Gets the address of EnglishAuction."
      },
      "eventEmitterAddress()": {
        "details": "Gets the address of EventEmitter."
      },
      "mediaFactoryAddress()": {
        "details": "Gets the address of MediaFactory."
      },
      "mediaRegistryAddress()": {
        "details": "Gets the address of MediaRegistry."
      },
      "nameRegistryAddress()": {
        "details": "Gets the address of NameRegistry"
      },
      "offerBidAddress()": {
        "details": "Gets the address of OfferBid."
      },
      "openBidAddress()": {
        "details": "Gets the address of OpenBid."
      },
      "owner()": {
        "details": "Gets the owner address."
      },
      "ownerOf(address)": {
        "details": "Returns the owner of the account.",
        "params": {
          "proxy": "address of the proxy contract that represents an account."
        }
      },
      "proposalReviewAddress()": {
        "details": "Gets the address of ProposalReview."
      },
      "updateApplicationMetadata(address,string)": {
        "details": "Updates media account. It can only be called by the deployer as it is an application info.",
        "params": {
          "metadata": "address of the media account",
          "proxy": "string of the account metadata"
        }
      },
      "updateMedia(address,string)": {
        "details": "Updates media account. It can be called by media proxies.",
        "params": {
          "mediaEOA": "address of the media account",
          "metadata": "string of the account metadata"
        }
      },
      "vaultAddress()": {
        "details": "Gets the address of Vault."
      }
    },
    "stateVariables": {
      "allAccounts": {
        "details": "Returns account info.",
        "params": {
          "proxy": "address of the proxy contract address"
        }
      }
    },
    "title": "MediaRegistry - registers a list of media accounts.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Constructor"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1886,
        "contract": "contracts/peripheries/MediaRegistry.sol:MediaRegistry",
        "label": "_nameRegistry",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(INameRegistry)3992"
      },
      {
        "astId": 6453,
        "contract": "contracts/peripheries/MediaRegistry.sol:MediaRegistry",
        "label": "allAccounts",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(Account)3900_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(INameRegistry)3992": {
        "encoding": "inplace",
        "label": "contract INameRegistry",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Account)3900_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IMediaRegistry.Account)",
        "numberOfBytes": "32",
        "value": "t_struct(Account)3900_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Account)3900_storage": {
        "encoding": "inplace",
        "label": "struct IMediaRegistry.Account",
        "members": [
          {
            "astId": 3893,
            "contract": "contracts/peripheries/MediaRegistry.sol:MediaRegistry",
            "label": "proxy",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 3895,
            "contract": "contracts/peripheries/MediaRegistry.sol:MediaRegistry",
            "label": "mediaEOA",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 3897,
            "contract": "contracts/peripheries/MediaRegistry.sol:MediaRegistry",
            "label": "applicationMetadata",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 3899,
            "contract": "contracts/peripheries/MediaRegistry.sol:MediaRegistry",
            "label": "updatableMetadata",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "128"
      }
    }
  }
}