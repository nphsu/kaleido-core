{
  "address": "0x048B7a8BA183bb0C8DBf3DA60F2403f3A721c0aA",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nameRegistry",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "accept",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "spaceMetadata",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "displayStartTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "displayEndTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct Sale.Offer",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "adPoolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "currentPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "englishAuctionAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eventEmitterAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mediaFactoryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mediaRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nameRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "spaceMetadata",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "displayStartTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "displayEndTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "offer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "offerBidAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "offered",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "spaceMetadata",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "displayStartTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "displayEndTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct Sale.Offer",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openBidAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalReviewAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x95d1a709c2f3dc2392221d900532a3251ea4f48137576c471b45c8aaf9029023",
  "receipt": {
    "to": null,
    "from": "0xCdfc500F7f0FCe1278aECb0340b523cD55b3EBbb",
    "contractAddress": "0x048B7a8BA183bb0C8DBf3DA60F2403f3A721c0aA",
    "transactionIndex": 0,
    "gasUsed": "1026080",
    "logsBloom": "0x
    "blockHash": "0x82cf3dc89460a8e397bfa1567ce30cf7ab2b61d520bb10c70d6bdc90bdfc17a3",
    "transactionHash": "0x95d1a709c2f3dc2392221d900532a3251ea4f48137576c471b45c8aaf9029023",
    "logs": [],
    "blockNumber": 9760112,
    "cumulativeGasUsed": "1026080",
    "status": 1,
    "byzantium": true
  },
  "args": ["0x173E3862BaE7bD155a7a371Ee3b855de01aa63dd"],
  "solcInputHash": "289fa2710193a113c0b3ec7823c19cab",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nameRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"accept\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"spaceMetadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"displayStartTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"displayEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Sale.Offer\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"currentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"englishAuctionAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eventEmitterAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mediaFactoryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mediaRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nameRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"spaceMetadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"displayStartTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"displayEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"offer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"offerBidAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"offered\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"spaceMetadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"displayStartTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"displayEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Sale.Offer\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openBidAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalReviewAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"adPoolAddress()\":{\"details\":\"Gets the address of AdPool.\"},\"englishAuctionAddress()\":{\"details\":\"Gets the address of EnglishAuction.\"},\"eventEmitterAddress()\":{\"details\":\"Gets the address of EventEmitter.\"},\"mediaFactoryAddress()\":{\"details\":\"Gets the address of MediaFactory.\"},\"mediaRegistryAddress()\":{\"details\":\"Gets the address of MediaRegistry.\"},\"nameRegistryAddress()\":{\"details\":\"Gets the address of NameRegistry\"},\"offerBidAddress()\":{\"details\":\"Gets the address of OfferBid.\"},\"openBidAddress()\":{\"details\":\"Gets the address of OpenBid.\"},\"owner()\":{\"details\":\"Gets the owner address.\"},\"proposalReviewAddress()\":{\"details\":\"Gets the address of ProposalReview.\"},\"vaultAddress()\":{\"details\":\"Gets the address of Vault.\"}},\"stateVariables\":{\"_offered\":{\"details\":\"Maps a tokenId with offer info\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/peripheries/OfferBid.sol\":\"OfferBid\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/accessors/NameAccessor.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../interfaces/INameRegistry.sol\\\";\\n\\n/// @title NameAccessor - manages the endpoints.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ncontract NameAccessor {\\n\\tINameRegistry internal _nameRegistry;\\n\\n\\t/// @dev Sets the address of NameRegistry.\\n\\t/// @param nameRegistry address of the NameRegistry\\n\\tfunction initialize(address nameRegistry) internal {\\n\\t\\t_nameRegistry = INameRegistry(nameRegistry);\\n\\t}\\n\\n\\t/// @dev Prevents calling a function from anyone except the accepted contracts.\\n\\tmodifier onlyAllowedContract() {\\n\\t\\trequire(_nameRegistry.allowedContracts(msg.sender), \\\"KD013\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t/// @dev Throws if not called by MediaFactory.\\n\\tmodifier onlyFactory() {\\n\\t\\trequire(msg.sender == mediaFactoryAddress(), \\\"KD010\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t/// @dev Throws if called by any account other than the owner.\\n\\tmodifier onlyOwner() {\\n\\t\\trequire(owner() == msg.sender, \\\"KD012\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t/// @dev Gets the address of NameRegistry\\n\\tfunction nameRegistryAddress() public view returns (address) {\\n\\t\\treturn address(_nameRegistry);\\n\\t}\\n\\n\\t/// @dev Gets the address of AdPool.\\n\\tfunction adPoolAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"AdPool\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of MediaFactory.\\n\\tfunction mediaFactoryAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"MediaFactory\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of MediaRegistry.\\n\\tfunction mediaRegistryAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"MediaRegistry\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of Vault.\\n\\tfunction vaultAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"Vault\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of EventEmitter.\\n\\tfunction eventEmitterAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"EventEmitter\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of EnglishAuction.\\n\\tfunction englishAuctionAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"EnglishAuction\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of OpenBid.\\n\\tfunction openBidAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"OpenBid\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of OfferBid.\\n\\tfunction offerBidAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"OfferBid\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of ProposalReview.\\n\\tfunction proposalReviewAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"ProposalReview\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the owner address.\\n\\tfunction owner() public view returns (address) {\\n\\t\\treturn _nameRegistry.deployer();\\n\\t}\\n}\\n\",\"keccak256\":\"0x92a0809b892e7b89f6a5d845aca491a2eda6bd56a5cbe69db31809f9e7c15b2a\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IAdPool.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../libraries/Ad.sol\\\";\\nimport \\\"../libraries/Sale.sol\\\";\\n\\n/// @title IAdPool - stores all ads accorss every space.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IAdPool {\\n\\tfunction allPeriods(uint256 tokenId) external view returns (Ad.Period memory);\\n\\n\\tfunction spaced(string memory spaceMetadata) external view returns (bool);\\n\\n\\tfunction addSpace(string memory spaceMetadata) external;\\n\\n\\tfunction addPeriod(\\n\\t\\taddress proxy,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tuint256 saleEndTimestamp,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\tAd.Pricing pricing,\\n\\t\\tuint256 minPrice\\n\\t) external returns (uint256);\\n\\n\\tfunction deletePeriod(uint256 tokenId) external;\\n\\n\\tfunction sold(uint256 tokenId) external;\\n\\n\\tfunction acceptOffer(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tSale.Offer memory offer\\n\\t) external;\\n\\n\\tfunction mediaProxyOf(uint256 tokenId) external view returns (address);\\n\\n\\tfunction displayStart(uint256 tokenId) external view returns (uint256);\\n\\n\\tfunction displayEnd(uint256 tokenId) external view returns (uint256);\\n\\n\\tfunction tokenIdsOf(string memory spaceMetadata)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (uint256[] memory);\\n}\\n\",\"keccak256\":\"0x9db94679b25b0afc4b4b94048dd2d040fd466be2024d8849d9d1d6b667dd9b1f\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IEventEmitter.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../libraries/Ad.sol\\\";\\n\\n/// @title IEventEmitter - emits events.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IEventEmitter {\\n\\tfunction emitNewSpace(string memory metadata) external;\\n\\n\\tfunction emitNewPeriod(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tuint256 saleStartTimestamp,\\n\\t\\tuint256 saleEndTimestamp,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\tAd.Pricing pricing,\\n\\t\\tuint256 minPrice\\n\\t) external;\\n\\n\\tfunction emitDeletePeriod(uint256 tokenId) external;\\n\\n\\tfunction emitBuy(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 msgValue,\\n\\t\\taddress msgSender,\\n\\t\\tuint256 blockTimestamp\\n\\t) external;\\n\\n\\tfunction emitBid(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 msgValue,\\n\\t\\taddress msgSender,\\n\\t\\tuint256 blockTimestamp\\n\\t) external;\\n\\n\\tfunction emitBidWithProposal(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 msgValue,\\n\\t\\taddress msgSender,\\n\\t\\tstring memory metadata,\\n\\t\\tuint256 blockTimestamp\\n\\t) external;\\n\\n\\tfunction emitSelectProposal(uint256 tokenId, address successfulBidder)\\n\\t\\texternal;\\n\\n\\tfunction emitReceiveToken(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 price,\\n\\t\\taddress buyer,\\n\\t\\tuint256 blockTimestamp\\n\\t) external;\\n\\n\\tfunction emitOfferPeriod(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\taddress sender,\\n\\t\\tuint256 price\\n\\t) external;\\n\\n\\tfunction emitCancelOffer(uint256 tokenId) external;\\n\\n\\tfunction emitAcceptOffer(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\tuint256 price\\n\\t) external;\\n\\n\\tfunction emitWithdraw(uint256 amount) external;\\n\\n\\tfunction emitPropose(uint256 tokenId, string memory metadata) external;\\n\\n\\tfunction emitAcceptProposal(uint256 tokenId, string memory metadata) external;\\n\\n\\tfunction emitDenyProposal(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory metadata,\\n\\t\\tstring memory reason,\\n\\t\\tbool offensive\\n\\t) external;\\n\\n\\tfunction emitTransferCustom(\\n\\t\\taddress from,\\n\\t\\taddress to,\\n\\t\\tuint256 tokenId\\n\\t) external;\\n\\n\\tfunction emitNewMedia(\\n\\t\\taddress proxy,\\n\\t\\taddress mediaEOA,\\n\\t\\tstring memory applicationMetadata,\\n\\t\\tstring memory updatableMetadata,\\n\\t\\tuint256 saltNonce\\n\\t) external;\\n\\n\\tfunction emitUpdateMedia(\\n\\t\\taddress proxy,\\n\\t\\taddress mediaEOA,\\n\\t\\tstring memory accountMetadata\\n\\t) external;\\n\\n\\tfunction emitPaymentFailure(address receiver, uint256 price) external;\\n\\n\\tfunction emitReceived(address receiver, uint256 price) external;\\n}\\n\",\"keccak256\":\"0xb8824b144c059b4b6ce8f7453a5f68fd420481e29b18a4d0e5f35fa163bc4e8a\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IMediaRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../libraries/Ad.sol\\\";\\n\\n/// @title MediaRegistry - registers a list of media accounts.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IMediaRegistry {\\n\\tstruct Account {\\n\\t\\taddress proxy;\\n\\t\\taddress mediaEOA;\\n\\t\\tstring applicationMetadata;\\n\\t\\tstring updatableMetadata;\\n\\t}\\n\\n\\tfunction allAccounts(address proxy)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (\\n\\t\\t\\taddress,\\n\\t\\t\\taddress,\\n\\t\\t\\tstring memory,\\n\\t\\t\\tstring memory\\n\\t\\t);\\n\\n\\t/// @dev Adds media account.\\n\\t/// @param proxy address of the proxy contract\\n\\t/// @param applicationMetadata string of constant metadata for the defailts of the account\\n\\t/// @param updatableMetadata string of constant metadata for the defailts of the account\\n\\t/// @param mediaEOA address of the media account\\n\\tfunction addMedia(\\n\\t\\taddress proxy,\\n\\t\\tstring memory applicationMetadata,\\n\\t\\tstring memory updatableMetadata,\\n\\t\\taddress mediaEOA\\n\\t) external;\\n\\n\\t/// @dev Updates media account.\\n\\t/// @param metadata string of the account metadata\\n\\t/// @param mediaEOA address of the media account\\n\\tfunction updateMedia(address mediaEOA, string memory metadata) external;\\n\\n\\tfunction updateApplicationMetadata(address proxy, string memory metadata)\\n\\t\\texternal;\\n\\n\\t/// @dev Returns whether the account has created or not.\\n\\t/// @param proxy address of the proxy contract that represents an account.\\n\\tfunction created(address proxy) external view returns (bool);\\n\\n\\t/// @dev Returns the owner of the account.\\n\\t/// @param proxy address of the proxy contract that represents an account.\\n\\tfunction ownerOf(address proxy) external view returns (address);\\n}\\n\",\"keccak256\":\"0x63655aa8531480b3da0c4b3f6cd63d72c3ca678661fa52dd90e5ab1a89b43131\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/INameRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\n/// @title INameRegistry - saves a set of addresses used in the system.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface INameRegistry {\\n\\t/// @dev Sets the address associated with the key name.\\n\\t///      If the address is the contract, not an EOA, it is\\n\\t///      saved as the allowed contract list.\\n\\t/// @param key bytes32 of the key\\n\\t/// @param value address of the value\\n\\tfunction set(bytes32 key, address value) external;\\n\\n\\t/// @dev Gets the address associated with the key name.\\n\\t/// @param key bytes32 of the key\\n\\tfunction get(bytes32 key) external view returns (address);\\n\\n\\t/// @dev Returns whether or not the address is the one that we deployed.\\n\\t/// @param caller address of the msg.sender\\n\\tfunction allowedContracts(address caller) external returns (bool);\\n\\n\\t/// @dev Gets the deployer of NameRegistry.\\n\\tfunction deployer() external view returns (address);\\n}\\n\",\"keccak256\":\"0xb4612b34aa95a45ed84877f60adc23f5f8eb941a00a2644dc29ecea26c1c032f\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IOfferBid.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../libraries/Sale.sol\\\";\\n\\n/// @title IOfferBid\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IOfferBid {\\n\\tfunction offer(\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\taddress sender,\\n\\t\\tuint256 value\\n\\t) external returns (uint256);\\n\\n\\tfunction cancel(uint256 tokenId, address sender) external;\\n\\n\\tfunction accept(uint256 tokenId) external returns (Sale.Offer memory);\\n\\n\\tfunction currentPrice(uint256 tokenId) external view returns (uint256);\\n\\n\\tfunction offered(uint256 tokenId) external view returns (Sale.Offer memory);\\n}\\n\",\"keccak256\":\"0x171bdb94a94e97c18873e3a5961dcaa6ded2d5fa70396ba812e114ab1652d4b5\",\"license\":\"UNLICENSED\"},\"contracts/libraries/Ad.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nlibrary Ad {\\n\\tuint256 private constant _ID_LENGTH = 100000000000000000000000000000000;\\n\\t// 0.RRP     : Recommended Retail Price\\n\\t// 1.DUTCH   : Dutch Auction\\n\\t// 2.ENGLISH : English Acction\\n\\t// 3.OFFER   : Offered by Others\\n\\t// 4.OPEN    : Open Bid by revealing the content\\n\\tenum Pricing {\\n\\t\\tRRP,\\n\\t\\tDUTCH,\\n\\t\\tENGLISH,\\n\\t\\tOFFER,\\n\\t\\tOPEN\\n\\t}\\n\\tstruct Period {\\n\\t\\taddress mediaProxy;\\n\\t\\tstring spaceMetadata;\\n\\t\\tstring tokenMetadata;\\n\\t\\tuint256 saleStartTimestamp;\\n\\t\\tuint256 saleEndTimestamp;\\n\\t\\tuint256 displayStartTimestamp;\\n\\t\\tuint256 displayEndTimestamp;\\n\\t\\tPricing pricing;\\n\\t\\tuint256 minPrice;\\n\\t\\tuint256 startPrice;\\n\\t\\tbool sold;\\n\\t}\\n\\n\\tfunction id(\\n\\t\\tstring memory metadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp\\n\\t) public pure returns (uint256) {\\n\\t\\treturn\\n\\t\\t\\tuint256(\\n\\t\\t\\t\\tkeccak256(\\n\\t\\t\\t\\t\\tabi.encodePacked(metadata, displayStartTimestamp, displayEndTimestamp)\\n\\t\\t\\t\\t)\\n\\t\\t\\t) % _ID_LENGTH;\\n\\t}\\n}\\n\",\"keccak256\":\"0x98b8f7d36adbd4e0b75ef9c5a0ec7045e0661b9015a90beffa30004f35ff7039\",\"license\":\"UNLICENSED\"},\"contracts/libraries/Purchase.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"./Ad.sol\\\";\\n\\nlibrary Purchase {\\n\\tfunction checkBeforeBuy(Ad.Period memory period, uint256 msgValue)\\n\\t\\tpublic\\n\\t\\tpure\\n\\t{\\n\\t\\trequire(period.pricing == Ad.Pricing.RRP, \\\"KD120\\\");\\n\\t\\trequire(!period.sold, \\\"KD121\\\");\\n\\t\\trequire(period.minPrice == msgValue, \\\"KD122\\\");\\n\\t}\\n\\n\\tfunction checkBeforeBuyBasedOnTime(\\n\\t\\tAd.Period memory period,\\n\\t\\tuint256 currentPrice,\\n\\t\\tuint256 msgValue\\n\\t) public pure {\\n\\t\\trequire(period.pricing == Ad.Pricing.DUTCH, \\\"KD123\\\");\\n\\t\\trequire(!period.sold, \\\"KD121\\\");\\n\\t\\trequire(currentPrice <= msgValue, \\\"KD122\\\");\\n\\t}\\n\\n\\tfunction checkBeforeBid(\\n\\t\\tAd.Period memory period,\\n\\t\\tuint256 currentPrice,\\n\\t\\tuint256 blockTimestamp,\\n\\t\\tuint256 msgValue\\n\\t) public pure {\\n\\t\\trequire(period.pricing == Ad.Pricing.ENGLISH, \\\"KD124\\\");\\n\\t\\trequire(!period.sold, \\\"KD121\\\");\\n\\t\\trequire(currentPrice < msgValue, \\\"KD122\\\");\\n\\t\\trequire(period.saleEndTimestamp >= blockTimestamp, \\\"KD129\\\");\\n\\t}\\n\\n\\tfunction checkBeforeBidWithProposal(\\n\\t\\tAd.Period memory period,\\n\\t\\tuint256 blockTimestamp,\\n\\t\\tuint256 msgValue\\n\\t) public pure {\\n\\t\\trequire(period.pricing == Ad.Pricing.OPEN, \\\"KD127\\\");\\n\\t\\trequire(!period.sold, \\\"KD121\\\");\\n\\t\\trequire(period.minPrice <= msgValue, \\\"KD122\\\");\\n\\t\\trequire(period.saleEndTimestamp >= blockTimestamp, \\\"KD129\\\");\\n\\t}\\n}\\n\",\"keccak256\":\"0x633c0d134cd93c15076fab913e86ca4a1d2927bae73f4974bd684b15754779d4\",\"license\":\"UNLICENSED\"},\"contracts/libraries/Sale.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"./Ad.sol\\\";\\n\\nlibrary Sale {\\n\\tstruct Bidding {\\n\\t\\tuint256 tokenId;\\n\\t\\taddress bidder;\\n\\t\\tuint256 price;\\n\\t}\\n\\tstruct Offer {\\n\\t\\tstring spaceMetadata;\\n\\t\\tuint256 displayStartTimestamp;\\n\\t\\tuint256 displayEndTimestamp;\\n\\t\\taddress sender;\\n\\t\\tuint256 price;\\n\\t}\\n\\tstruct OpenBid {\\n\\t\\tuint256 tokenId;\\n\\t\\taddress sender;\\n\\t\\tuint256 price;\\n\\t\\tstring content;\\n\\t}\\n\\n\\tfunction startPrice(Ad.Period memory period) public pure returns (uint256) {\\n\\t\\tif (period.pricing == Ad.Pricing.RRP) {\\n\\t\\t\\treturn period.minPrice;\\n\\t\\t} else if (period.pricing == Ad.Pricing.DUTCH) {\\n\\t\\t\\treturn period.minPrice * 10;\\n\\t\\t} else if (period.pricing == Ad.Pricing.ENGLISH) {\\n\\t\\t\\treturn period.minPrice;\\n\\t\\t} else if (period.pricing == Ad.Pricing.OFFER) {\\n\\t\\t\\treturn period.minPrice;\\n\\t\\t} else if (period.pricing == Ad.Pricing.OPEN) {\\n\\t\\t\\treturn period.minPrice;\\n\\t\\t} else {\\n\\t\\t\\treturn 0;\\n\\t\\t}\\n\\t}\\n}\\n\",\"keccak256\":\"0x1a32666b69f927d29b818c643d9b31e10f08e5663ed2a8409ff13522ad38bd38\",\"license\":\"UNLICENSED\"},\"contracts/peripheries/OfferBid.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../libraries/Ad.sol\\\";\\nimport \\\"../libraries/Purchase.sol\\\";\\nimport \\\"../accessors/NameAccessor.sol\\\";\\nimport \\\"../interfaces/IAdPool.sol\\\";\\nimport \\\"../interfaces/IEventEmitter.sol\\\";\\nimport \\\"../interfaces/IOfferBid.sol\\\";\\nimport \\\"../interfaces/IMediaRegistry.sol\\\";\\n\\ncontract OfferBid is IOfferBid, NameAccessor {\\n\\t/// @dev Maps a tokenId with offer info\\n\\tmapping(uint256 => Sale.Offer) internal _offered;\\n\\n\\tmodifier onlyProxies() {\\n\\t\\trequire(_mediaRegistry().ownerOf(msg.sender) != address(0x0), \\\"KD011\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\tconstructor(address _nameRegistry) {\\n\\t\\tinitialize(_nameRegistry);\\n\\t}\\n\\n\\tfunction offer(\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\taddress sender,\\n\\t\\tuint256 value\\n\\t) external virtual onlyProxies returns (uint256 tokenId) {\\n\\t\\trequire(_adPool().spaced(spaceMetadata), \\\"KD101\\\");\\n\\t\\trequire(displayStartTimestamp < displayEndTimestamp, \\\"KD113\\\");\\n\\t\\ttokenId = Ad.id(spaceMetadata, displayStartTimestamp, displayEndTimestamp);\\n\\t\\t_offered[tokenId] = Sale.Offer(\\n\\t\\t\\tspaceMetadata,\\n\\t\\t\\tdisplayStartTimestamp,\\n\\t\\t\\tdisplayEndTimestamp,\\n\\t\\t\\tsender,\\n\\t\\t\\tvalue\\n\\t\\t);\\n\\t\\t_eventEmitter().emitOfferPeriod(\\n\\t\\t\\ttokenId,\\n\\t\\t\\tspaceMetadata,\\n\\t\\t\\tdisplayStartTimestamp,\\n\\t\\t\\tdisplayEndTimestamp,\\n\\t\\t\\tsender,\\n\\t\\t\\tvalue\\n\\t\\t);\\n\\t}\\n\\n\\tfunction cancel(uint256 tokenId, address sender)\\n\\t\\texternal\\n\\t\\tvirtual\\n\\t\\tonlyProxies\\n\\t{\\n\\t\\trequire(_offered[tokenId].sender == sender, \\\"KD116\\\");\\n\\t\\tdelete _offered[tokenId];\\n\\t\\t_eventEmitter().emitCancelOffer(tokenId);\\n\\t}\\n\\n\\tfunction accept(uint256 tokenId)\\n\\t\\texternal\\n\\t\\tvirtual\\n\\t\\tonlyProxies\\n\\t\\treturns (Sale.Offer memory)\\n\\t{\\n\\t\\tSale.Offer memory target = _offered[tokenId];\\n\\t\\trequire(target.sender != address(0), \\\"KD115\\\");\\n\\t\\tdelete _offered[tokenId];\\n\\t\\treturn target;\\n\\t}\\n\\n\\tfunction currentPrice(uint256 tokenId)\\n\\t\\tpublic\\n\\t\\tview\\n\\t\\toverride\\n\\t\\treturns (uint256)\\n\\t{\\n\\t\\treturn _offered[tokenId].price;\\n\\t}\\n\\n\\tfunction offered(uint256 tokenId) external view returns (Sale.Offer memory) {\\n\\t\\treturn _offered[tokenId];\\n\\t}\\n\\n\\t/**\\n\\t * Accessors\\n\\t */\\n\\tfunction _adPool() internal view returns (IAdPool) {\\n\\t\\treturn IAdPool(adPoolAddress());\\n\\t}\\n\\n\\tfunction _eventEmitter() internal view virtual returns (IEventEmitter) {\\n\\t\\treturn IEventEmitter(eventEmitterAddress());\\n\\t}\\n\\n\\tfunction _mediaRegistry() internal view returns (IMediaRegistry) {\\n\\t\\treturn IMediaRegistry(mediaRegistryAddress());\\n\\t}\\n}\\n\",\"keccak256\":\"0x1378df63e8adf3cc7d66abc2c1c42187be118bb2ed18b72d0e4ef856afc91178\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516111b83803806111b883398101604081905261002f91610050565b600080546001600160a01b0319166001600160a01b03831617905550610080565b60006020828403121561006257600080fd5b81516001600160a01b038116811461007957600080fd5b9392505050565b6111298061008f6000396000f3fe608060405234801561001057600080fd5b50600436106100d05760003560e01c80630106d8eb146100d557806301b99e04146100f3578063171a133d1461011357806319b05f49146101345780632231c1eb1461014757806327b7a2f51461014f578063430bf08a1461016057806357d682c4146101685780636a58767e1461017d5780637a3c4c17146101855780637cf175fb146101a85780638da5cb5b146101b05780638f6059d6146101b8578063c9cd71b5146101c0578063e2f5fc78146101c8578063f0726291146101d0575b600080fd5b6100dd6101d8565b6040516100ea9190610da7565b60405180910390f35b610106610101366004610dbb565b610295565b6040516100ea9190610e21565b610126610121366004610eaf565b61037f565b6040519081526020016100ea565b610106610142366004610dbb565b6106c4565b6100dd6108e2565b6000546001600160a01b03166100dd565b6100dd610913565b61017b610176366004610f8b565b610942565b005b6100dd610aef565b610126610193366004610dbb565b60009081526001602052604090206004015490565b6100dd610b26565b6100dd610b58565b6100dd610ba7565b6100dd610bdd565b6100dd610c0d565b6100dd610c45565b600080546040516d22b733b634b9b420bab1ba34b7b760911b60208201526001600160a01b0390911690638eaa6ac090602e015b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161024091815260200190565b60206040518083038186803b15801561025857600080fd5b505afa15801561026c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102909190610fbb565b905090565b61029d610c99565b60008281526001602052604090819020815160a081019092528054829082906102c590610fdf565b80601f01602080910402602001604051908101604052809291908181526020018280546102f190610fdf565b801561033e5780601f106103135761010080835404028352916020019161033e565b820191906000526020600020905b81548152906001019060200180831161032157829003601f168201915b5050509183525050600182015460208201526002820154604082015260038201546001600160a01b0316606082015260049091015460809091015292915050565b60008061038a610c7b565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b81526004016103b59190610da7565b60206040518083038186803b1580156103cd57600080fd5b505afa1580156103e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104059190610fbb565b6001600160a01b031614156104355760405162461bcd60e51b815260040161042c9061101a565b60405180910390fd5b61043d610c85565b6001600160a01b03166365045a65876040518263ffffffff1660e01b81526004016104689190611039565b60206040518083038186803b15801561048057600080fd5b505afa158015610494573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b8919061104c565b6104ec5760405162461bcd60e51b81526020600482015260056024820152644b4431303160d81b604482015260640161042c565b8385106105235760405162461bcd60e51b81526020600482015260056024820152644b4431313360d81b604482015260640161042c565b6040516303fb4aab60e41b8152739F397D94EC32D43EeC60dCF9A38a44322D54d42A90633fb4aab09061055e9089908990899060040161106e565b60206040518083038186803b15801561057657600080fd5b505af415801561058a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ae9190611093565b6040805160a08101825288815260208082018990528183018890526001600160a01b038716606083015260808201869052600084815260018252929092208151805194955091939092610605928492910190610cd1565b50602082015160018201556040820151600282015560608201516003820180546001600160a01b0319166001600160a01b03909216919091179055608090910151600490910155610654610c8f565b6001600160a01b031663f4cb45e58288888888886040518763ffffffff1660e01b8152600401610689969594939291906110ac565b600060405180830381600087803b1580156106a357600080fd5b505af11580156106b7573d6000803e3d6000fd5b5050505095945050505050565b6106cc610c99565b60006106d6610c7b565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b81526004016107019190610da7565b60206040518083038186803b15801561071957600080fd5b505afa15801561072d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107519190610fbb565b6001600160a01b031614156107785760405162461bcd60e51b815260040161042c9061101a565b600082815260016020526040808220815160a0810190925280548290829061079f90610fdf565b80601f01602080910402602001604051908101604052809291908181526020018280546107cb90610fdf565b80156108185780601f106107ed57610100808354040283529160200191610818565b820191906000526020600020905b8154815290600101906020018083116107fb57829003601f168201915b5050509183525050600182015460208201526002820154604082015260038201546001600160a01b0390811660608084019190915260049093015460809092019190915290820151919250166108985760405162461bcd60e51b81526020600482015260056024820152644b4431313560d81b604482015260640161042c565b6000838152600160205260408120906108b18282610d55565b50600060018201819055600282018190556003820180546001600160a01b031916905560049091015590505b919050565b600080546040516613dc195b909a5960ca1b60208201526001600160a01b0390911690638eaa6ac09060270161020c565b600080546040516415985d5b1d60da1b60208201526001600160a01b0390911690638eaa6ac09060250161020c565b600061094c610c7b565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b81526004016109779190610da7565b60206040518083038186803b15801561098f57600080fd5b505afa1580156109a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c79190610fbb565b6001600160a01b031614156109ee5760405162461bcd60e51b815260040161042c9061101a565b6000828152600160205260409020600301546001600160a01b03828116911614610a425760405162461bcd60e51b815260206004820152600560248201526425a218989b60d91b604482015260640161042c565b600082815260016020526040812090610a5b8282610d55565b50600060018201819055600282018190556003820180546001600160a01b0319169055600490910155610a8c610c8f565b6001600160a01b031663f65f14ac836040518263ffffffff1660e01b8152600401610ab991815260200190565b600060405180830381600087803b158015610ad357600080fd5b505af1158015610ae7573d6000803e3d6000fd5b505050505050565b600080546040516c4d65646961526567697374727960981b60208201526001600160a01b0390911690638eaa6ac090602d0161020c565b600080546040516713d999995c909a5960c21b60208201526001600160a01b0390911690638eaa6ac09060280161020c565b60008060009054906101000a90046001600160a01b03166001600160a01b031663d5f394886040518163ffffffff1660e01b815260040160206040518083038186803b15801561025857600080fd5b600080546040516b4d65646961466163746f727960a01b60208201526001600160a01b0390911690638eaa6ac090602c0161020c565b60008054604051651059141bdbdb60d21b60208201526001600160a01b0390911690638eaa6ac09060260161020c565b600080546040516d50726f706f73616c52657669657760901b60208201526001600160a01b0390911690638eaa6ac090602e0161020c565b600080546040516b22bb32b73a22b6b4ba3a32b960a11b60208201526001600160a01b0390911690638eaa6ac090602c0161020c565b6000610290610aef565b6000610290610bdd565b6000610290610c45565b6040518060a0016040528060608152602001600081526020016000815260200160006001600160a01b03168152602001600081525090565b828054610cdd90610fdf565b90600052602060002090601f016020900481019282610cff5760008555610d45565b82601f10610d1857805160ff1916838001178555610d45565b82800160010185558215610d45579182015b82811115610d45578251825591602001919060010190610d2a565b50610d51929150610d92565b5090565b508054610d6190610fdf565b6000825580601f10610d71575050565b601f016020900490600052602060002090810190610d8f9190610d92565b50565b5b80821115610d515760008155600101610d93565b6001600160a01b0391909116815260200190565b600060208284031215610dcd57600080fd5b5035919050565b6000815180845260005b81811015610dfa57602081850181015186830182015201610dde565b81811115610e0c576000602083870101525b50601f01601f19169290920160200192915050565b602081526000825160a06020840152610e3d60c0840182610dd4565b9050602084015160408401526040840151606084015260018060a01b036060850151166080840152608084015160a08401528091505092915050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610d8f57600080fd5b80356108dd81610e8f565b600080600080600060a08688031215610ec757600080fd5b85356001600160401b0380821115610ede57600080fd5b818801915088601f830112610ef257600080fd5b813581811115610f0457610f04610e79565b604051601f8201601f19908116603f01168101908382118183101715610f2c57610f2c610e79565b816040528281528b6020848701011115610f4557600080fd5b8260208601602083013760006020848301015280995050505050506020860135935060408601359250610f7a60608701610ea4565b949793965091946080013592915050565b60008060408385031215610f9e57600080fd5b823591506020830135610fb081610e8f565b809150509250929050565b600060208284031215610fcd57600080fd5b8151610fd881610e8f565b9392505050565b600181811c90821680610ff357607f821691505b6020821081141561101457634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600590820152644b4430313160d81b604082015260600190565b602081526000610fd86020830184610dd4565b60006020828403121561105e57600080fd5b81518015158114610fd857600080fd5b6060815260006110816060830186610dd4565b60208301949094525060400152919050565b6000602082840312156110a557600080fd5b5051919050565b86815260c0602082015260006110c560c0830188610dd4565b60408301969096525060608101939093526001600160a01b0391909116608083015260a0909101529291505056fea2646970667358221220f27a6e89dabdc28688cbc0618297b8576c246275eb203e539699661b0da976bf64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100d05760003560e01c80630106d8eb146100d557806301b99e04146100f3578063171a133d1461011357806319b05f49146101345780632231c1eb1461014757806327b7a2f51461014f578063430bf08a1461016057806357d682c4146101685780636a58767e1461017d5780637a3c4c17146101855780637cf175fb146101a85780638da5cb5b146101b05780638f6059d6146101b8578063c9cd71b5146101c0578063e2f5fc78146101c8578063f0726291146101d0575b600080fd5b6100dd6101d8565b6040516100ea9190610da7565b60405180910390f35b610106610101366004610dbb565b610295565b6040516100ea9190610e21565b610126610121366004610eaf565b61037f565b6040519081526020016100ea565b610106610142366004610dbb565b6106c4565b6100dd6108e2565b6000546001600160a01b03166100dd565b6100dd610913565b61017b610176366004610f8b565b610942565b005b6100dd610aef565b610126610193366004610dbb565b60009081526001602052604090206004015490565b6100dd610b26565b6100dd610b58565b6100dd610ba7565b6100dd610bdd565b6100dd610c0d565b6100dd610c45565b600080546040516d22b733b634b9b420bab1ba34b7b760911b60208201526001600160a01b0390911690638eaa6ac090602e015b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161024091815260200190565b60206040518083038186803b15801561025857600080fd5b505afa15801561026c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102909190610fbb565b905090565b61029d610c99565b60008281526001602052604090819020815160a081019092528054829082906102c590610fdf565b80601f01602080910402602001604051908101604052809291908181526020018280546102f190610fdf565b801561033e5780601f106103135761010080835404028352916020019161033e565b820191906000526020600020905b81548152906001019060200180831161032157829003601f168201915b5050509183525050600182015460208201526002820154604082015260038201546001600160a01b0316606082015260049091015460809091015292915050565b60008061038a610c7b565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b81526004016103b59190610da7565b60206040518083038186803b1580156103cd57600080fd5b505afa1580156103e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104059190610fbb565b6001600160a01b031614156104355760405162461bcd60e51b815260040161042c9061101a565b60405180910390fd5b61043d610c85565b6001600160a01b03166365045a65876040518263ffffffff1660e01b81526004016104689190611039565b60206040518083038186803b15801561048057600080fd5b505afa158015610494573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b8919061104c565b6104ec5760405162461bcd60e51b81526020600482015260056024820152644b4431303160d81b604482015260640161042c565b8385106105235760405162461bcd60e51b81526020600482015260056024820152644b4431313360d81b604482015260640161042c565b6040516303fb4aab60e41b815273__$a79fa16630ef50be54c6520a39abca49df$__90633fb4aab09061055e9089908990899060040161106e565b60206040518083038186803b15801561057657600080fd5b505af415801561058a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ae9190611093565b6040805160a08101825288815260208082018990528183018890526001600160a01b038716606083015260808201869052600084815260018252929092208151805194955091939092610605928492910190610cd1565b50602082015160018201556040820151600282015560608201516003820180546001600160a01b0319166001600160a01b03909216919091179055608090910151600490910155610654610c8f565b6001600160a01b031663f4cb45e58288888888886040518763ffffffff1660e01b8152600401610689969594939291906110ac565b600060405180830381600087803b1580156106a357600080fd5b505af11580156106b7573d6000803e3d6000fd5b5050505095945050505050565b6106cc610c99565b60006106d6610c7b565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b81526004016107019190610da7565b60206040518083038186803b15801561071957600080fd5b505afa15801561072d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107519190610fbb565b6001600160a01b031614156107785760405162461bcd60e51b815260040161042c9061101a565b600082815260016020526040808220815160a0810190925280548290829061079f90610fdf565b80601f01602080910402602001604051908101604052809291908181526020018280546107cb90610fdf565b80156108185780601f106107ed57610100808354040283529160200191610818565b820191906000526020600020905b8154815290600101906020018083116107fb57829003601f168201915b5050509183525050600182015460208201526002820154604082015260038201546001600160a01b0390811660608084019190915260049093015460809092019190915290820151919250166108985760405162461bcd60e51b81526020600482015260056024820152644b4431313560d81b604482015260640161042c565b6000838152600160205260408120906108b18282610d55565b50600060018201819055600282018190556003820180546001600160a01b031916905560049091015590505b919050565b600080546040516613dc195b909a5960ca1b60208201526001600160a01b0390911690638eaa6ac09060270161020c565b600080546040516415985d5b1d60da1b60208201526001600160a01b0390911690638eaa6ac09060250161020c565b600061094c610c7b565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b81526004016109779190610da7565b60206040518083038186803b15801561098f57600080fd5b505afa1580156109a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c79190610fbb565b6001600160a01b031614156109ee5760405162461bcd60e51b815260040161042c9061101a565b6000828152600160205260409020600301546001600160a01b03828116911614610a425760405162461bcd60e51b815260206004820152600560248201526425a218989b60d91b604482015260640161042c565b600082815260016020526040812090610a5b8282610d55565b50600060018201819055600282018190556003820180546001600160a01b0319169055600490910155610a8c610c8f565b6001600160a01b031663f65f14ac836040518263ffffffff1660e01b8152600401610ab991815260200190565b600060405180830381600087803b158015610ad357600080fd5b505af1158015610ae7573d6000803e3d6000fd5b505050505050565b600080546040516c4d65646961526567697374727960981b60208201526001600160a01b0390911690638eaa6ac090602d0161020c565b600080546040516713d999995c909a5960c21b60208201526001600160a01b0390911690638eaa6ac09060280161020c565b60008060009054906101000a90046001600160a01b03166001600160a01b031663d5f394886040518163ffffffff1660e01b815260040160206040518083038186803b15801561025857600080fd5b600080546040516b4d65646961466163746f727960a01b60208201526001600160a01b0390911690638eaa6ac090602c0161020c565b60008054604051651059141bdbdb60d21b60208201526001600160a01b0390911690638eaa6ac09060260161020c565b600080546040516d50726f706f73616c52657669657760901b60208201526001600160a01b0390911690638eaa6ac090602e0161020c565b600080546040516b22bb32b73a22b6b4ba3a32b960a11b60208201526001600160a01b0390911690638eaa6ac090602c0161020c565b6000610290610aef565b6000610290610bdd565b6000610290610c45565b6040518060a0016040528060608152602001600081526020016000815260200160006001600160a01b03168152602001600081525090565b828054610cdd90610fdf565b90600052602060002090601f016020900481019282610cff5760008555610d45565b82601f10610d1857805160ff1916838001178555610d45565b82800160010185558215610d45579182015b82811115610d45578251825591602001919060010190610d2a565b50610d51929150610d92565b5090565b508054610d6190610fdf565b6000825580601f10610d71575050565b601f016020900490600052602060002090810190610d8f9190610d92565b50565b5b80821115610d515760008155600101610d93565b6001600160a01b0391909116815260200190565b600060208284031215610dcd57600080fd5b5035919050565b6000815180845260005b81811015610dfa57602081850181015186830182015201610dde565b81811115610e0c576000602083870101525b50601f01601f19169290920160200192915050565b602081526000825160a06020840152610e3d60c0840182610dd4565b9050602084015160408401526040840151606084015260018060a01b036060850151166080840152608084015160a08401528091505092915050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610d8f57600080fd5b80356108dd81610e8f565b600080600080600060a08688031215610ec757600080fd5b85356001600160401b0380821115610ede57600080fd5b818801915088601f830112610ef257600080fd5b813581811115610f0457610f04610e79565b604051601f8201601f19908116603f01168101908382118183101715610f2c57610f2c610e79565b816040528281528b6020848701011115610f4557600080fd5b8260208601602083013760006020848301015280995050505050506020860135935060408601359250610f7a60608701610ea4565b949793965091946080013592915050565b60008060408385031215610f9e57600080fd5b823591506020830135610fb081610e8f565b809150509250929050565b600060208284031215610fcd57600080fd5b8151610fd881610e8f565b9392505050565b600181811c90821680610ff357607f821691505b6020821081141561101457634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600590820152644b4430313160d81b604082015260600190565b602081526000610fd86020830184610dd4565b60006020828403121561105e57600080fd5b81518015158114610fd857600080fd5b6060815260006110816060830186610dd4565b60208301949094525060400152919050565b6000602082840312156110a557600080fd5b5051919050565b86815260c0602082015260006110c560c0830188610dd4565b60408301969096525060608101939093526001600160a01b0391909116608083015260a0909101529291505056fea2646970667358221220f27a6e89dabdc28688cbc0618297b8576c246275eb203e539699661b0da976bf64736f6c63430008090033",
  "libraries": {
    "Ad": "0x9F397D94EC32D43EeC60dCF9A38a44322D54d42A",
    "Purchase": "0xA5DD71afe7c4a1e123f3aF11624642F39A67e06A"
  },
  "devdoc": {
    "kind": "dev",
    "methods": {
      "adPoolAddress()": {
        "details": "Gets the address of AdPool."
      },
      "englishAuctionAddress()": {
        "details": "Gets the address of EnglishAuction."
      },
      "eventEmitterAddress()": {
        "details": "Gets the address of EventEmitter."
      },
      "mediaFactoryAddress()": {
        "details": "Gets the address of MediaFactory."
      },
      "mediaRegistryAddress()": {
        "details": "Gets the address of MediaRegistry."
      },
      "nameRegistryAddress()": {
        "details": "Gets the address of NameRegistry"
      },
      "offerBidAddress()": {
        "details": "Gets the address of OfferBid."
      },
      "openBidAddress()": {
        "details": "Gets the address of OpenBid."
      },
      "owner()": {
        "details": "Gets the owner address."
      },
      "proposalReviewAddress()": {
        "details": "Gets the address of ProposalReview."
      },
      "vaultAddress()": {
        "details": "Gets the address of Vault."
      }
    },
    "stateVariables": {
      "_offered": {
        "details": "Maps a tokenId with offer info"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2345,
        "contract": "contracts/peripheries/OfferBid.sol:OfferBid",
        "label": "_nameRegistry",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(INameRegistry)4466"
      },
      {
        "astId": 6988,
        "contract": "contracts/peripheries/OfferBid.sol:OfferBid",
        "label": "_offered",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Offer)4924_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(INameRegistry)4466": {
        "encoding": "inplace",
        "label": "contract INameRegistry",
        "numberOfBytes": "20"
      },
      "t_mapping(t_uint256,t_struct(Offer)4924_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Sale.Offer)",
        "numberOfBytes": "32",
        "value": "t_struct(Offer)4924_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Offer)4924_storage": {
        "encoding": "inplace",
        "label": "struct Sale.Offer",
        "members": [
          {
            "astId": 4915,
            "contract": "contracts/peripheries/OfferBid.sol:OfferBid",
            "label": "spaceMetadata",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 4917,
            "contract": "contracts/peripheries/OfferBid.sol:OfferBid",
            "label": "displayStartTimestamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 4919,
            "contract": "contracts/peripheries/OfferBid.sol:OfferBid",
            "label": "displayEndTimestamp",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 4921,
            "contract": "contracts/peripheries/OfferBid.sol:OfferBid",
            "label": "sender",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 4923,
            "contract": "contracts/peripheries/OfferBid.sol:OfferBid",
            "label": "price",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
