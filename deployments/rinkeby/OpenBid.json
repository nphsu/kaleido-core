{
  "address": "0x3fdE7f9A4b8C79d3D8EC89ef4ac98FD88957557b",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nameRegistry",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "adPoolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "proposal",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "bid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "bidding",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "content",
              "type": "string"
            }
          ],
          "internalType": "struct Sale.OpenBid",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "biddingList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "content",
              "type": "string"
            }
          ],
          "internalType": "struct Sale.OpenBid[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "englishAuctionAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eventEmitterAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mediaFactoryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mediaRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nameRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "offerBidAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openBidAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalReviewAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "selectProposal",
      "outputs": [
        {
          "internalType": "address",
          "name": "successfulBidder",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x00e42d1221d6156117896a90b13fe693a32c83c12d4c73e380528824a6205caa",
  "receipt": {
    "to": null,
    "from": "0xCdfc500F7f0FCe1278aECb0340b523cD55b3EBbb",
    "contractAddress": "0x3fdE7f9A4b8C79d3D8EC89ef4ac98FD88957557b",
    "transactionIndex": 1,
    "gasUsed": "1052050",
    "logsBloom": "0x
    "blockHash": "0xd9eac0ed6fe602ffeabc07ae340ae437aec51fcf8bd9c1d1b46cc23e8573360d",
    "transactionHash": "0x00e42d1221d6156117896a90b13fe693a32c83c12d4c73e380528824a6205caa",
    "logs": [],
    "blockNumber": 9760110,
    "cumulativeGasUsed": "1078045",
    "status": 1,
    "byzantium": true
  },
  "args": ["0x173E3862BaE7bD155a7a371Ee3b855de01aa63dd"],
  "solcInputHash": "289fa2710193a113c0b3ec7823c19cab",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nameRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"adPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"proposal\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"bid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"bidding\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"}],\"internalType\":\"struct Sale.OpenBid\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"biddingList\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"}],\"internalType\":\"struct Sale.OpenBid[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"englishAuctionAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eventEmitterAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mediaFactoryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mediaRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nameRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"offerBidAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openBidAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalReviewAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"selectProposal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"successfulBidder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"adPoolAddress()\":{\"details\":\"Gets the address of AdPool.\"},\"englishAuctionAddress()\":{\"details\":\"Gets the address of EnglishAuction.\"},\"eventEmitterAddress()\":{\"details\":\"Gets the address of EventEmitter.\"},\"mediaFactoryAddress()\":{\"details\":\"Gets the address of MediaFactory.\"},\"mediaRegistryAddress()\":{\"details\":\"Gets the address of MediaRegistry.\"},\"nameRegistryAddress()\":{\"details\":\"Gets the address of NameRegistry\"},\"offerBidAddress()\":{\"details\":\"Gets the address of OfferBid.\"},\"openBidAddress()\":{\"details\":\"Gets the address of OpenBid.\"},\"owner()\":{\"details\":\"Gets the owner address.\"},\"proposalReviewAddress()\":{\"details\":\"Gets the address of ProposalReview.\"},\"vaultAddress()\":{\"details\":\"Gets the address of Vault.\"}},\"stateVariables\":{\"_bidding\":{\"details\":\"Maps a tokenId with appeal info\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/peripheries/OpenBid.sol\":\"OpenBid\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/accessors/NameAccessor.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../interfaces/INameRegistry.sol\\\";\\n\\n/// @title NameAccessor - manages the endpoints.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ncontract NameAccessor {\\n\\tINameRegistry internal _nameRegistry;\\n\\n\\t/// @dev Sets the address of NameRegistry.\\n\\t/// @param nameRegistry address of the NameRegistry\\n\\tfunction initialize(address nameRegistry) internal {\\n\\t\\t_nameRegistry = INameRegistry(nameRegistry);\\n\\t}\\n\\n\\t/// @dev Prevents calling a function from anyone except the accepted contracts.\\n\\tmodifier onlyAllowedContract() {\\n\\t\\trequire(_nameRegistry.allowedContracts(msg.sender), \\\"KD013\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t/// @dev Throws if not called by MediaFactory.\\n\\tmodifier onlyFactory() {\\n\\t\\trequire(msg.sender == mediaFactoryAddress(), \\\"KD010\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t/// @dev Throws if called by any account other than the owner.\\n\\tmodifier onlyOwner() {\\n\\t\\trequire(owner() == msg.sender, \\\"KD012\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t/// @dev Gets the address of NameRegistry\\n\\tfunction nameRegistryAddress() public view returns (address) {\\n\\t\\treturn address(_nameRegistry);\\n\\t}\\n\\n\\t/// @dev Gets the address of AdPool.\\n\\tfunction adPoolAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"AdPool\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of MediaFactory.\\n\\tfunction mediaFactoryAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"MediaFactory\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of MediaRegistry.\\n\\tfunction mediaRegistryAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"MediaRegistry\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of Vault.\\n\\tfunction vaultAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"Vault\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of EventEmitter.\\n\\tfunction eventEmitterAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"EventEmitter\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of EnglishAuction.\\n\\tfunction englishAuctionAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"EnglishAuction\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of OpenBid.\\n\\tfunction openBidAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"OpenBid\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of OfferBid.\\n\\tfunction offerBidAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"OfferBid\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of ProposalReview.\\n\\tfunction proposalReviewAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"ProposalReview\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the owner address.\\n\\tfunction owner() public view returns (address) {\\n\\t\\treturn _nameRegistry.deployer();\\n\\t}\\n}\\n\",\"keccak256\":\"0x92a0809b892e7b89f6a5d845aca491a2eda6bd56a5cbe69db31809f9e7c15b2a\",\"license\":\"UNLICENSED\"},\"contracts/common/BlockTimestamp.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\n/// @title BlockTimestamp - gets a block timestamp.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\nabstract contract BlockTimestamp {\\n\\t/// @dev Method that exists purely to be overridden for tests\\n\\tfunction _blockTimestamp() internal view virtual returns (uint256) {\\n\\t\\treturn block.timestamp;\\n\\t}\\n}\\n\",\"keccak256\":\"0x417bf100ecc94b19a01559e899f68e19777eae593c783d8280d13bcabc8e43a2\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IAdPool.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../libraries/Ad.sol\\\";\\nimport \\\"../libraries/Sale.sol\\\";\\n\\n/// @title IAdPool - stores all ads accorss every space.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IAdPool {\\n\\tfunction allPeriods(uint256 tokenId) external view returns (Ad.Period memory);\\n\\n\\tfunction spaced(string memory spaceMetadata) external view returns (bool);\\n\\n\\tfunction addSpace(string memory spaceMetadata) external;\\n\\n\\tfunction addPeriod(\\n\\t\\taddress proxy,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tuint256 saleEndTimestamp,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\tAd.Pricing pricing,\\n\\t\\tuint256 minPrice\\n\\t) external returns (uint256);\\n\\n\\tfunction deletePeriod(uint256 tokenId) external;\\n\\n\\tfunction sold(uint256 tokenId) external;\\n\\n\\tfunction acceptOffer(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tSale.Offer memory offer\\n\\t) external;\\n\\n\\tfunction mediaProxyOf(uint256 tokenId) external view returns (address);\\n\\n\\tfunction displayStart(uint256 tokenId) external view returns (uint256);\\n\\n\\tfunction displayEnd(uint256 tokenId) external view returns (uint256);\\n\\n\\tfunction tokenIdsOf(string memory spaceMetadata)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (uint256[] memory);\\n}\\n\",\"keccak256\":\"0x9db94679b25b0afc4b4b94048dd2d040fd466be2024d8849d9d1d6b667dd9b1f\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IEventEmitter.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../libraries/Ad.sol\\\";\\n\\n/// @title IEventEmitter - emits events.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IEventEmitter {\\n\\tfunction emitNewSpace(string memory metadata) external;\\n\\n\\tfunction emitNewPeriod(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tuint256 saleStartTimestamp,\\n\\t\\tuint256 saleEndTimestamp,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\tAd.Pricing pricing,\\n\\t\\tuint256 minPrice\\n\\t) external;\\n\\n\\tfunction emitDeletePeriod(uint256 tokenId) external;\\n\\n\\tfunction emitBuy(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 msgValue,\\n\\t\\taddress msgSender,\\n\\t\\tuint256 blockTimestamp\\n\\t) external;\\n\\n\\tfunction emitBid(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 msgValue,\\n\\t\\taddress msgSender,\\n\\t\\tuint256 blockTimestamp\\n\\t) external;\\n\\n\\tfunction emitBidWithProposal(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 msgValue,\\n\\t\\taddress msgSender,\\n\\t\\tstring memory metadata,\\n\\t\\tuint256 blockTimestamp\\n\\t) external;\\n\\n\\tfunction emitSelectProposal(uint256 tokenId, address successfulBidder)\\n\\t\\texternal;\\n\\n\\tfunction emitReceiveToken(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 price,\\n\\t\\taddress buyer,\\n\\t\\tuint256 blockTimestamp\\n\\t) external;\\n\\n\\tfunction emitOfferPeriod(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\taddress sender,\\n\\t\\tuint256 price\\n\\t) external;\\n\\n\\tfunction emitCancelOffer(uint256 tokenId) external;\\n\\n\\tfunction emitAcceptOffer(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\tuint256 price\\n\\t) external;\\n\\n\\tfunction emitWithdraw(uint256 amount) external;\\n\\n\\tfunction emitPropose(uint256 tokenId, string memory metadata) external;\\n\\n\\tfunction emitAcceptProposal(uint256 tokenId, string memory metadata) external;\\n\\n\\tfunction emitDenyProposal(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory metadata,\\n\\t\\tstring memory reason,\\n\\t\\tbool offensive\\n\\t) external;\\n\\n\\tfunction emitTransferCustom(\\n\\t\\taddress from,\\n\\t\\taddress to,\\n\\t\\tuint256 tokenId\\n\\t) external;\\n\\n\\tfunction emitNewMedia(\\n\\t\\taddress proxy,\\n\\t\\taddress mediaEOA,\\n\\t\\tstring memory applicationMetadata,\\n\\t\\tstring memory updatableMetadata,\\n\\t\\tuint256 saltNonce\\n\\t) external;\\n\\n\\tfunction emitUpdateMedia(\\n\\t\\taddress proxy,\\n\\t\\taddress mediaEOA,\\n\\t\\tstring memory accountMetadata\\n\\t) external;\\n\\n\\tfunction emitPaymentFailure(address receiver, uint256 price) external;\\n\\n\\tfunction emitReceived(address receiver, uint256 price) external;\\n}\\n\",\"keccak256\":\"0xb8824b144c059b4b6ce8f7453a5f68fd420481e29b18a4d0e5f35fa163bc4e8a\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IMediaRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../libraries/Ad.sol\\\";\\n\\n/// @title MediaRegistry - registers a list of media accounts.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IMediaRegistry {\\n\\tstruct Account {\\n\\t\\taddress proxy;\\n\\t\\taddress mediaEOA;\\n\\t\\tstring applicationMetadata;\\n\\t\\tstring updatableMetadata;\\n\\t}\\n\\n\\tfunction allAccounts(address proxy)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (\\n\\t\\t\\taddress,\\n\\t\\t\\taddress,\\n\\t\\t\\tstring memory,\\n\\t\\t\\tstring memory\\n\\t\\t);\\n\\n\\t/// @dev Adds media account.\\n\\t/// @param proxy address of the proxy contract\\n\\t/// @param applicationMetadata string of constant metadata for the defailts of the account\\n\\t/// @param updatableMetadata string of constant metadata for the defailts of the account\\n\\t/// @param mediaEOA address of the media account\\n\\tfunction addMedia(\\n\\t\\taddress proxy,\\n\\t\\tstring memory applicationMetadata,\\n\\t\\tstring memory updatableMetadata,\\n\\t\\taddress mediaEOA\\n\\t) external;\\n\\n\\t/// @dev Updates media account.\\n\\t/// @param metadata string of the account metadata\\n\\t/// @param mediaEOA address of the media account\\n\\tfunction updateMedia(address mediaEOA, string memory metadata) external;\\n\\n\\tfunction updateApplicationMetadata(address proxy, string memory metadata)\\n\\t\\texternal;\\n\\n\\t/// @dev Returns whether the account has created or not.\\n\\t/// @param proxy address of the proxy contract that represents an account.\\n\\tfunction created(address proxy) external view returns (bool);\\n\\n\\t/// @dev Returns the owner of the account.\\n\\t/// @param proxy address of the proxy contract that represents an account.\\n\\tfunction ownerOf(address proxy) external view returns (address);\\n}\\n\",\"keccak256\":\"0x63655aa8531480b3da0c4b3f6cd63d72c3ca678661fa52dd90e5ab1a89b43131\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/INameRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\n/// @title INameRegistry - saves a set of addresses used in the system.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface INameRegistry {\\n\\t/// @dev Sets the address associated with the key name.\\n\\t///      If the address is the contract, not an EOA, it is\\n\\t///      saved as the allowed contract list.\\n\\t/// @param key bytes32 of the key\\n\\t/// @param value address of the value\\n\\tfunction set(bytes32 key, address value) external;\\n\\n\\t/// @dev Gets the address associated with the key name.\\n\\t/// @param key bytes32 of the key\\n\\tfunction get(bytes32 key) external view returns (address);\\n\\n\\t/// @dev Returns whether or not the address is the one that we deployed.\\n\\t/// @param caller address of the msg.sender\\n\\tfunction allowedContracts(address caller) external returns (bool);\\n\\n\\t/// @dev Gets the deployer of NameRegistry.\\n\\tfunction deployer() external view returns (address);\\n}\\n\",\"keccak256\":\"0xb4612b34aa95a45ed84877f60adc23f5f8eb941a00a2644dc29ecea26c1c032f\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IOpenBid.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../libraries/Sale.sol\\\";\\n\\n/// @title IOpenBid\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IOpenBid {\\n\\tfunction bid(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory proposal,\\n\\t\\taddress sender,\\n\\t\\tuint256 amount\\n\\t) external;\\n\\n\\tfunction biddingList(uint256 tokenId)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (Sale.OpenBid[] memory);\\n\\n\\tfunction bidding(uint256 tokenId, uint256 index)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (Sale.OpenBid memory);\\n\\n\\tfunction selectProposal(uint256 tokenId, uint256 index)\\n\\t\\texternal\\n\\t\\treturns (address successfulBidder);\\n}\\n\",\"keccak256\":\"0x31cdf36b1aa003150d3d4142f7cbb7cb1796300ea394534281d22cbf01ce4ecf\",\"license\":\"UNLICENSED\"},\"contracts/libraries/Ad.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nlibrary Ad {\\n\\tuint256 private constant _ID_LENGTH = 100000000000000000000000000000000;\\n\\t// 0.RRP     : Recommended Retail Price\\n\\t// 1.DUTCH   : Dutch Auction\\n\\t// 2.ENGLISH : English Acction\\n\\t// 3.OFFER   : Offered by Others\\n\\t// 4.OPEN    : Open Bid by revealing the content\\n\\tenum Pricing {\\n\\t\\tRRP,\\n\\t\\tDUTCH,\\n\\t\\tENGLISH,\\n\\t\\tOFFER,\\n\\t\\tOPEN\\n\\t}\\n\\tstruct Period {\\n\\t\\taddress mediaProxy;\\n\\t\\tstring spaceMetadata;\\n\\t\\tstring tokenMetadata;\\n\\t\\tuint256 saleStartTimestamp;\\n\\t\\tuint256 saleEndTimestamp;\\n\\t\\tuint256 displayStartTimestamp;\\n\\t\\tuint256 displayEndTimestamp;\\n\\t\\tPricing pricing;\\n\\t\\tuint256 minPrice;\\n\\t\\tuint256 startPrice;\\n\\t\\tbool sold;\\n\\t}\\n\\n\\tfunction id(\\n\\t\\tstring memory metadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp\\n\\t) public pure returns (uint256) {\\n\\t\\treturn\\n\\t\\t\\tuint256(\\n\\t\\t\\t\\tkeccak256(\\n\\t\\t\\t\\t\\tabi.encodePacked(metadata, displayStartTimestamp, displayEndTimestamp)\\n\\t\\t\\t\\t)\\n\\t\\t\\t) % _ID_LENGTH;\\n\\t}\\n}\\n\",\"keccak256\":\"0x98b8f7d36adbd4e0b75ef9c5a0ec7045e0661b9015a90beffa30004f35ff7039\",\"license\":\"UNLICENSED\"},\"contracts/libraries/Purchase.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"./Ad.sol\\\";\\n\\nlibrary Purchase {\\n\\tfunction checkBeforeBuy(Ad.Period memory period, uint256 msgValue)\\n\\t\\tpublic\\n\\t\\tpure\\n\\t{\\n\\t\\trequire(period.pricing == Ad.Pricing.RRP, \\\"KD120\\\");\\n\\t\\trequire(!period.sold, \\\"KD121\\\");\\n\\t\\trequire(period.minPrice == msgValue, \\\"KD122\\\");\\n\\t}\\n\\n\\tfunction checkBeforeBuyBasedOnTime(\\n\\t\\tAd.Period memory period,\\n\\t\\tuint256 currentPrice,\\n\\t\\tuint256 msgValue\\n\\t) public pure {\\n\\t\\trequire(period.pricing == Ad.Pricing.DUTCH, \\\"KD123\\\");\\n\\t\\trequire(!period.sold, \\\"KD121\\\");\\n\\t\\trequire(currentPrice <= msgValue, \\\"KD122\\\");\\n\\t}\\n\\n\\tfunction checkBeforeBid(\\n\\t\\tAd.Period memory period,\\n\\t\\tuint256 currentPrice,\\n\\t\\tuint256 blockTimestamp,\\n\\t\\tuint256 msgValue\\n\\t) public pure {\\n\\t\\trequire(period.pricing == Ad.Pricing.ENGLISH, \\\"KD124\\\");\\n\\t\\trequire(!period.sold, \\\"KD121\\\");\\n\\t\\trequire(currentPrice < msgValue, \\\"KD122\\\");\\n\\t\\trequire(period.saleEndTimestamp >= blockTimestamp, \\\"KD129\\\");\\n\\t}\\n\\n\\tfunction checkBeforeBidWithProposal(\\n\\t\\tAd.Period memory period,\\n\\t\\tuint256 blockTimestamp,\\n\\t\\tuint256 msgValue\\n\\t) public pure {\\n\\t\\trequire(period.pricing == Ad.Pricing.OPEN, \\\"KD127\\\");\\n\\t\\trequire(!period.sold, \\\"KD121\\\");\\n\\t\\trequire(period.minPrice <= msgValue, \\\"KD122\\\");\\n\\t\\trequire(period.saleEndTimestamp >= blockTimestamp, \\\"KD129\\\");\\n\\t}\\n}\\n\",\"keccak256\":\"0x633c0d134cd93c15076fab913e86ca4a1d2927bae73f4974bd684b15754779d4\",\"license\":\"UNLICENSED\"},\"contracts/libraries/Sale.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"./Ad.sol\\\";\\n\\nlibrary Sale {\\n\\tstruct Bidding {\\n\\t\\tuint256 tokenId;\\n\\t\\taddress bidder;\\n\\t\\tuint256 price;\\n\\t}\\n\\tstruct Offer {\\n\\t\\tstring spaceMetadata;\\n\\t\\tuint256 displayStartTimestamp;\\n\\t\\tuint256 displayEndTimestamp;\\n\\t\\taddress sender;\\n\\t\\tuint256 price;\\n\\t}\\n\\tstruct OpenBid {\\n\\t\\tuint256 tokenId;\\n\\t\\taddress sender;\\n\\t\\tuint256 price;\\n\\t\\tstring content;\\n\\t}\\n\\n\\tfunction startPrice(Ad.Period memory period) public pure returns (uint256) {\\n\\t\\tif (period.pricing == Ad.Pricing.RRP) {\\n\\t\\t\\treturn period.minPrice;\\n\\t\\t} else if (period.pricing == Ad.Pricing.DUTCH) {\\n\\t\\t\\treturn period.minPrice * 10;\\n\\t\\t} else if (period.pricing == Ad.Pricing.ENGLISH) {\\n\\t\\t\\treturn period.minPrice;\\n\\t\\t} else if (period.pricing == Ad.Pricing.OFFER) {\\n\\t\\t\\treturn period.minPrice;\\n\\t\\t} else if (period.pricing == Ad.Pricing.OPEN) {\\n\\t\\t\\treturn period.minPrice;\\n\\t\\t} else {\\n\\t\\t\\treturn 0;\\n\\t\\t}\\n\\t}\\n}\\n\",\"keccak256\":\"0x1a32666b69f927d29b818c643d9b31e10f08e5663ed2a8409ff13522ad38bd38\",\"license\":\"UNLICENSED\"},\"contracts/peripheries/OpenBid.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../libraries/Ad.sol\\\";\\nimport \\\"../libraries/Purchase.sol\\\";\\nimport \\\"../accessors/NameAccessor.sol\\\";\\nimport \\\"../common/BlockTimestamp.sol\\\";\\nimport \\\"../interfaces/IAdPool.sol\\\";\\nimport \\\"../interfaces/IEventEmitter.sol\\\";\\nimport \\\"../interfaces/IOpenBid.sol\\\";\\nimport \\\"../interfaces/IMediaRegistry.sol\\\";\\n\\ncontract OpenBid is IOpenBid, BlockTimestamp, NameAccessor {\\n\\t/// @dev Maps a tokenId with appeal info\\n\\tmapping(uint256 => Sale.OpenBid[]) internal _bidding;\\n\\n\\tmodifier onlyProxies() {\\n\\t\\trequire(_mediaRegistry().ownerOf(msg.sender) != address(0x0), \\\"KD011\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\tconstructor(address _nameRegistry) {\\n\\t\\tinitialize(_nameRegistry);\\n\\t}\\n\\n\\tfunction bid(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory proposal,\\n\\t\\taddress sender,\\n\\t\\tuint256 value\\n\\t) external virtual onlyProxies {\\n\\t\\t_bidding[tokenId].push(Sale.OpenBid(tokenId, sender, value, proposal));\\n\\t\\t_eventEmitter().emitBidWithProposal(\\n\\t\\t\\ttokenId,\\n\\t\\t\\tvalue,\\n\\t\\t\\tsender,\\n\\t\\t\\tproposal,\\n\\t\\t\\t_blockTimestamp()\\n\\t\\t);\\n\\t}\\n\\n\\tfunction biddingList(uint256 tokenId)\\n\\t\\tpublic\\n\\t\\tview\\n\\t\\treturns (Sale.OpenBid[] memory)\\n\\t{\\n\\t\\treturn _bidding[tokenId];\\n\\t}\\n\\n\\tfunction bidding(uint256 tokenId, uint256 index)\\n\\t\\tpublic\\n\\t\\tview\\n\\t\\treturns (Sale.OpenBid memory)\\n\\t{\\n\\t\\trequire(\\n\\t\\t\\t_bidding[tokenId].length >= index &&\\n\\t\\t\\t\\t_bidding[tokenId][index].sender != address(0),\\n\\t\\t\\t\\\"KD114\\\"\\n\\t\\t);\\n\\t\\treturn _bidding[tokenId][index];\\n\\t}\\n\\n\\tfunction selectProposal(uint256 tokenId, uint256 index)\\n\\t\\texternal\\n\\t\\tvirtual\\n\\t\\tonlyProxies\\n\\t\\treturns (address successfulBidder)\\n\\t{\\n\\t\\trequire(\\n\\t\\t\\t_adPool().allPeriods(tokenId).saleEndTimestamp < _blockTimestamp(),\\n\\t\\t\\t\\\"KD129\\\"\\n\\t\\t);\\n\\t\\tsuccessfulBidder = bidding(tokenId, index).sender;\\n\\t\\tdelete _bidding[tokenId];\\n\\t\\t_eventEmitter().emitSelectProposal(tokenId, successfulBidder);\\n\\t}\\n\\n\\t/**\\n\\t * Accessors\\n\\t */\\n\\tfunction _adPool() internal view returns (IAdPool) {\\n\\t\\treturn IAdPool(adPoolAddress());\\n\\t}\\n\\n\\tfunction _eventEmitter() internal view virtual returns (IEventEmitter) {\\n\\t\\treturn IEventEmitter(eventEmitterAddress());\\n\\t}\\n\\n\\tfunction _mediaRegistry() internal view returns (IMediaRegistry) {\\n\\t\\treturn IMediaRegistry(mediaRegistryAddress());\\n\\t}\\n}\\n\",\"keccak256\":\"0x9274e83b72d4e64e33f7ad8641451c006a199300220f175f399dc5e564c3aed3\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161123138038061123183398101604081905261002f91610050565b600080546001600160a01b0319166001600160a01b03831617905550610080565b60006020828403121561006257600080fd5b81516001600160a01b038116811461007957600080fd5b9392505050565b6111a28061008f6000396000f3fe608060405234801561001057600080fd5b50600436106100c55760003560e01c80630106d8eb146100ca5780632231c1eb146100e857806327b7a2f5146100f057806332b18f6d14610101578063389ad90e14610114578063430bf08a146101295780636a58767e14610131578063761ce95d146101395780637cf175fb1461015957806387fe412c146101615780638da5cb5b146101815780638f6059d614610189578063c9cd71b514610191578063e2f5fc7814610199578063f0726291146101a1575b600080fd5b6100d26101a9565b6040516100df9190610c6d565b60405180910390f35b6100d2610266565b6000546001600160a01b03166100d2565b6100d261010f366004610c81565b610297565b610127610122366004610d4e565b6104ac565b005b6100d261065b565b6100d261068a565b61014c610147366004610df1565b6106c1565b6040516100df9190610ea9565b6100d26107f0565b61017461016f366004610c81565b610822565b6040516100df9190610f0b565b6100d26109f9565b6100d2610a48565b6100d2610a7e565b6100d2610aae565b6100d2610ae6565b600080546040516d22b733b634b9b420bab1ba34b7b760911b60208201526001600160a01b0390911690638eaa6ac090602e015b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161021191815260200190565b60206040518083038186803b15801561022957600080fd5b505afa15801561023d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102619190610f35565b905090565b600080546040516613dc195b909a5960ca1b60208201526001600160a01b0390911690638eaa6ac0906027016101dd565b6000806102a2610b1c565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b81526004016102cd9190610c6d565b60206040518083038186803b1580156102e557600080fd5b505afa1580156102f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031d9190610f35565b6001600160a01b0316141561034d5760405162461bcd60e51b815260040161034490610f52565b60405180910390fd5b42610356610b26565b6001600160a01b031663b3a0ebc9856040518263ffffffff1660e01b815260040161038391815260200190565b60006040518083038186803b15801561039b57600080fd5b505afa1580156103af573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103d79190810190610fd5565b60800151106104105760405162461bcd60e51b81526020600482015260056024820152644b4431323960d81b6044820152606401610344565b61041a8383610822565b602090810151600085815260019092526040822090925061043a91610b3a565b610442610b30565b604051630249d31960e51b8152600481018590526001600160a01b038381166024830152919091169063493a632090604401600060405180830381600087803b15801561048e57600080fd5b505af11580156104a2573d6000803e3d6000fd5b5050505092915050565b60006104b6610b1c565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b81526004016104e19190610c6d565b60206040518083038186803b1580156104f957600080fd5b505afa15801561050d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105319190610f35565b6001600160a01b031614156105585760405162461bcd60e51b815260040161034490610f52565b600084815260016020818152604080842081516080810183528981526001600160a01b03888116828601908152938201888152606083018b815284548089018655948952978690208351600490950201938455935195830180546001600160a01b031916969091169590951790945590516002820155925180519293926105e59260038501920190610b5e565b5050506105f0610b30565b6001600160a01b0316630d2657bf85838587426040518663ffffffff1660e01b81526004016106239594939291906110dc565b600060405180830381600087803b15801561063d57600080fd5b505af1158015610651573d6000803e3d6000fd5b5050505050505050565b600080546040516415985d5b1d60da1b60208201526001600160a01b0390911690638eaa6ac0906025016101dd565b600080546040516c4d65646961526567697374727960981b60208201526001600160a01b0390911690638eaa6ac090602d016101dd565b606060016000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156107e557600084815260209081902060408051608081018252600486029092018054835260018101546001600160a01b0316938301939093526002830154908201526003820180549192916060840191906107549061111b565b80601f01602080910402602001604051908101604052809291908181526020018280546107809061111b565b80156107cd5780601f106107a2576101008083540402835291602001916107cd565b820191906000526020600020905b8154815290600101906020018083116107b057829003601f168201915b505050505081525050815260200190600101906106f6565b505050509050919050565b600080546040516713d999995c909a5960c21b60208201526001600160a01b0390911690638eaa6ac0906028016101dd565b61085660405180608001604052806000815260200160006001600160a01b0316815260200160008152602001606081525090565b60008381526001602052604090205482118015906108af5750600083815260016020526040812080548490811061088f5761088f611156565b60009182526020909120600160049092020101546001600160a01b031614155b6108e35760405162461bcd60e51b815260206004820152600560248201526412d10c4c4d60da1b6044820152606401610344565b600083815260016020526040902080548390811061090357610903611156565b9060005260206000209060040201604051806080016040529081600082015481526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016002820154815260200160038201805461096f9061111b565b80601f016020809104026020016040519081016040528092919081815260200182805461099b9061111b565b80156109e85780601f106109bd576101008083540402835291602001916109e8565b820191906000526020600020905b8154815290600101906020018083116109cb57829003601f168201915b505050505081525050905092915050565b60008060009054906101000a90046001600160a01b03166001600160a01b031663d5f394886040518163ffffffff1660e01b815260040160206040518083038186803b15801561022957600080fd5b600080546040516b4d65646961466163746f727960a01b60208201526001600160a01b0390911690638eaa6ac090602c016101dd565b60008054604051651059141bdbdb60d21b60208201526001600160a01b0390911690638eaa6ac0906026016101dd565b600080546040516d50726f706f73616c52657669657760901b60208201526001600160a01b0390911690638eaa6ac090602e016101dd565b600080546040516b22bb32b73a22b6b4ba3a32b960a11b60208201526001600160a01b0390911690638eaa6ac090602c016101dd565b600061026161068a565b6000610261610a7e565b6000610261610ae6565b5080546000825560040290600052602060002090810190610b5b9190610be2565b50565b828054610b6a9061111b565b90600052602060002090601f016020900481019282610b8c5760008555610bd2565b82601f10610ba557805160ff1916838001178555610bd2565b82800160010185558215610bd2579182015b82811115610bd2578251825591602001919060010190610bb7565b50610bde929150610c1e565b5090565b80821115610bde5760008082556001820180546001600160a01b031916905560028201819055610c156003830182610c33565b50600401610be2565b5b80821115610bde5760008155600101610c1f565b508054610c3f9061111b565b6000825580601f10610c4f575050565b601f016020900490600052602060002090810190610b5b9190610c1e565b6001600160a01b0391909116815260200190565b60008060408385031215610c9457600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b60405161016081016001600160401b0381118282101715610cdc57610cdc610ca3565b60405290565b604051601f8201601f191681016001600160401b0381118282101715610d0a57610d0a610ca3565b604052919050565b60006001600160401b03821115610d2b57610d2b610ca3565b50601f01601f191660200190565b6001600160a01b0381168114610b5b57600080fd5b60008060008060808587031215610d6457600080fd5b8435935060208501356001600160401b03811115610d8157600080fd5b8501601f81018713610d9257600080fd5b8035610da5610da082610d12565b610ce2565b818152886020838501011115610dba57600080fd5b816020840160208301376000602083830101528095505050506040850135610de181610d39565b9396929550929360600135925050565b600060208284031215610e0357600080fd5b5035919050565b60005b83811015610e25578181015183820152602001610e0d565b83811115610e34576000848401525b50505050565b60008151808452610e52816020860160208601610e0a565b601f01601f19169290920160200192915050565b8051825260018060a01b036020820151166020830152604081015160408301526000606082015160806060850152610ea16080850182610e3a565b949350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610efe57603f19888603018452610eec858351610e66565b94509285019290850190600101610ed0565b5092979650505050505050565b602081526000610f1e6020830184610e66565b9392505050565b8051610f3081610d39565b919050565b600060208284031215610f4757600080fd5b8151610f1e81610d39565b6020808252600590820152644b4430313160d81b604082015260600190565b600082601f830112610f8257600080fd5b8151610f90610da082610d12565b818152846020838601011115610fa557600080fd5b610ea1826020830160208701610e0a565b805160058110610f3057600080fd5b80518015158114610f3057600080fd5b600060208284031215610fe757600080fd5b81516001600160401b0380821115610ffe57600080fd5b90830190610160828603121561101357600080fd5b61101b610cb9565b61102483610f25565b815260208301518281111561103857600080fd5b61104487828601610f71565b60208301525060408301518281111561105c57600080fd5b61106887828601610f71565b604083015250606083015160608201526080830151608082015260a083015160a082015260c083015160c08201526110a260e08401610fb6565b60e08201526101008381015190820152610120808401519082015261014091506110cd828401610fc5565b91810191909152949350505050565b85815284602082015260018060a01b038416604082015260a06060820152600061110960a0830185610e3a565b90508260808301529695505050505050565b600181811c9082168061112f57607f821691505b6020821081141561115057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fdfea26469706673582212208d3fad4853756ec17862d2db1d7489ca32e93a4139854605f60448dfe3fb48b664736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100c55760003560e01c80630106d8eb146100ca5780632231c1eb146100e857806327b7a2f5146100f057806332b18f6d14610101578063389ad90e14610114578063430bf08a146101295780636a58767e14610131578063761ce95d146101395780637cf175fb1461015957806387fe412c146101615780638da5cb5b146101815780638f6059d614610189578063c9cd71b514610191578063e2f5fc7814610199578063f0726291146101a1575b600080fd5b6100d26101a9565b6040516100df9190610c6d565b60405180910390f35b6100d2610266565b6000546001600160a01b03166100d2565b6100d261010f366004610c81565b610297565b610127610122366004610d4e565b6104ac565b005b6100d261065b565b6100d261068a565b61014c610147366004610df1565b6106c1565b6040516100df9190610ea9565b6100d26107f0565b61017461016f366004610c81565b610822565b6040516100df9190610f0b565b6100d26109f9565b6100d2610a48565b6100d2610a7e565b6100d2610aae565b6100d2610ae6565b600080546040516d22b733b634b9b420bab1ba34b7b760911b60208201526001600160a01b0390911690638eaa6ac090602e015b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161021191815260200190565b60206040518083038186803b15801561022957600080fd5b505afa15801561023d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102619190610f35565b905090565b600080546040516613dc195b909a5960ca1b60208201526001600160a01b0390911690638eaa6ac0906027016101dd565b6000806102a2610b1c565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b81526004016102cd9190610c6d565b60206040518083038186803b1580156102e557600080fd5b505afa1580156102f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031d9190610f35565b6001600160a01b0316141561034d5760405162461bcd60e51b815260040161034490610f52565b60405180910390fd5b42610356610b26565b6001600160a01b031663b3a0ebc9856040518263ffffffff1660e01b815260040161038391815260200190565b60006040518083038186803b15801561039b57600080fd5b505afa1580156103af573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103d79190810190610fd5565b60800151106104105760405162461bcd60e51b81526020600482015260056024820152644b4431323960d81b6044820152606401610344565b61041a8383610822565b602090810151600085815260019092526040822090925061043a91610b3a565b610442610b30565b604051630249d31960e51b8152600481018590526001600160a01b038381166024830152919091169063493a632090604401600060405180830381600087803b15801561048e57600080fd5b505af11580156104a2573d6000803e3d6000fd5b5050505092915050565b60006104b6610b1c565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b81526004016104e19190610c6d565b60206040518083038186803b1580156104f957600080fd5b505afa15801561050d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105319190610f35565b6001600160a01b031614156105585760405162461bcd60e51b815260040161034490610f52565b600084815260016020818152604080842081516080810183528981526001600160a01b03888116828601908152938201888152606083018b815284548089018655948952978690208351600490950201938455935195830180546001600160a01b031916969091169590951790945590516002820155925180519293926105e59260038501920190610b5e565b5050506105f0610b30565b6001600160a01b0316630d2657bf85838587426040518663ffffffff1660e01b81526004016106239594939291906110dc565b600060405180830381600087803b15801561063d57600080fd5b505af1158015610651573d6000803e3d6000fd5b5050505050505050565b600080546040516415985d5b1d60da1b60208201526001600160a01b0390911690638eaa6ac0906025016101dd565b600080546040516c4d65646961526567697374727960981b60208201526001600160a01b0390911690638eaa6ac090602d016101dd565b606060016000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156107e557600084815260209081902060408051608081018252600486029092018054835260018101546001600160a01b0316938301939093526002830154908201526003820180549192916060840191906107549061111b565b80601f01602080910402602001604051908101604052809291908181526020018280546107809061111b565b80156107cd5780601f106107a2576101008083540402835291602001916107cd565b820191906000526020600020905b8154815290600101906020018083116107b057829003601f168201915b505050505081525050815260200190600101906106f6565b505050509050919050565b600080546040516713d999995c909a5960c21b60208201526001600160a01b0390911690638eaa6ac0906028016101dd565b61085660405180608001604052806000815260200160006001600160a01b0316815260200160008152602001606081525090565b60008381526001602052604090205482118015906108af5750600083815260016020526040812080548490811061088f5761088f611156565b60009182526020909120600160049092020101546001600160a01b031614155b6108e35760405162461bcd60e51b815260206004820152600560248201526412d10c4c4d60da1b6044820152606401610344565b600083815260016020526040902080548390811061090357610903611156565b9060005260206000209060040201604051806080016040529081600082015481526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016002820154815260200160038201805461096f9061111b565b80601f016020809104026020016040519081016040528092919081815260200182805461099b9061111b565b80156109e85780601f106109bd576101008083540402835291602001916109e8565b820191906000526020600020905b8154815290600101906020018083116109cb57829003601f168201915b505050505081525050905092915050565b60008060009054906101000a90046001600160a01b03166001600160a01b031663d5f394886040518163ffffffff1660e01b815260040160206040518083038186803b15801561022957600080fd5b600080546040516b4d65646961466163746f727960a01b60208201526001600160a01b0390911690638eaa6ac090602c016101dd565b60008054604051651059141bdbdb60d21b60208201526001600160a01b0390911690638eaa6ac0906026016101dd565b600080546040516d50726f706f73616c52657669657760901b60208201526001600160a01b0390911690638eaa6ac090602e016101dd565b600080546040516b22bb32b73a22b6b4ba3a32b960a11b60208201526001600160a01b0390911690638eaa6ac090602c016101dd565b600061026161068a565b6000610261610a7e565b6000610261610ae6565b5080546000825560040290600052602060002090810190610b5b9190610be2565b50565b828054610b6a9061111b565b90600052602060002090601f016020900481019282610b8c5760008555610bd2565b82601f10610ba557805160ff1916838001178555610bd2565b82800160010185558215610bd2579182015b82811115610bd2578251825591602001919060010190610bb7565b50610bde929150610c1e565b5090565b80821115610bde5760008082556001820180546001600160a01b031916905560028201819055610c156003830182610c33565b50600401610be2565b5b80821115610bde5760008155600101610c1f565b508054610c3f9061111b565b6000825580601f10610c4f575050565b601f016020900490600052602060002090810190610b5b9190610c1e565b6001600160a01b0391909116815260200190565b60008060408385031215610c9457600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b60405161016081016001600160401b0381118282101715610cdc57610cdc610ca3565b60405290565b604051601f8201601f191681016001600160401b0381118282101715610d0a57610d0a610ca3565b604052919050565b60006001600160401b03821115610d2b57610d2b610ca3565b50601f01601f191660200190565b6001600160a01b0381168114610b5b57600080fd5b60008060008060808587031215610d6457600080fd5b8435935060208501356001600160401b03811115610d8157600080fd5b8501601f81018713610d9257600080fd5b8035610da5610da082610d12565b610ce2565b818152886020838501011115610dba57600080fd5b816020840160208301376000602083830101528095505050506040850135610de181610d39565b9396929550929360600135925050565b600060208284031215610e0357600080fd5b5035919050565b60005b83811015610e25578181015183820152602001610e0d565b83811115610e34576000848401525b50505050565b60008151808452610e52816020860160208601610e0a565b601f01601f19169290920160200192915050565b8051825260018060a01b036020820151166020830152604081015160408301526000606082015160806060850152610ea16080850182610e3a565b949350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610efe57603f19888603018452610eec858351610e66565b94509285019290850190600101610ed0565b5092979650505050505050565b602081526000610f1e6020830184610e66565b9392505050565b8051610f3081610d39565b919050565b600060208284031215610f4757600080fd5b8151610f1e81610d39565b6020808252600590820152644b4430313160d81b604082015260600190565b600082601f830112610f8257600080fd5b8151610f90610da082610d12565b818152846020838601011115610fa557600080fd5b610ea1826020830160208701610e0a565b805160058110610f3057600080fd5b80518015158114610f3057600080fd5b600060208284031215610fe757600080fd5b81516001600160401b0380821115610ffe57600080fd5b90830190610160828603121561101357600080fd5b61101b610cb9565b61102483610f25565b815260208301518281111561103857600080fd5b61104487828601610f71565b60208301525060408301518281111561105c57600080fd5b61106887828601610f71565b604083015250606083015160608201526080830151608082015260a083015160a082015260c083015160c08201526110a260e08401610fb6565b60e08201526101008381015190820152610120808401519082015261014091506110cd828401610fc5565b91810191909152949350505050565b85815284602082015260018060a01b038416604082015260a06060820152600061110960a0830185610e3a565b90508260808301529695505050505050565b600181811c9082168061112f57607f821691505b6020821081141561115057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fdfea26469706673582212208d3fad4853756ec17862d2db1d7489ca32e93a4139854605f60448dfe3fb48b664736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "adPoolAddress()": {
        "details": "Gets the address of AdPool."
      },
      "englishAuctionAddress()": {
        "details": "Gets the address of EnglishAuction."
      },
      "eventEmitterAddress()": {
        "details": "Gets the address of EventEmitter."
      },
      "mediaFactoryAddress()": {
        "details": "Gets the address of MediaFactory."
      },
      "mediaRegistryAddress()": {
        "details": "Gets the address of MediaRegistry."
      },
      "nameRegistryAddress()": {
        "details": "Gets the address of NameRegistry"
      },
      "offerBidAddress()": {
        "details": "Gets the address of OfferBid."
      },
      "openBidAddress()": {
        "details": "Gets the address of OpenBid."
      },
      "owner()": {
        "details": "Gets the owner address."
      },
      "proposalReviewAddress()": {
        "details": "Gets the address of ProposalReview."
      },
      "vaultAddress()": {
        "details": "Gets the address of Vault."
      }
    },
    "stateVariables": {
      "_bidding": {
        "details": "Maps a tokenId with appeal info"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2345,
        "contract": "contracts/peripheries/OpenBid.sol:OpenBid",
        "label": "_nameRegistry",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(INameRegistry)4466"
      },
      {
        "astId": 7241,
        "contract": "contracts/peripheries/OpenBid.sol:OpenBid",
        "label": "_bidding",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_array(t_struct(OpenBid)4933_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(OpenBid)4933_storage)dyn_storage": {
        "base": "t_struct(OpenBid)4933_storage",
        "encoding": "dynamic_array",
        "label": "struct Sale.OpenBid[]",
        "numberOfBytes": "32"
      },
      "t_contract(INameRegistry)4466": {
        "encoding": "inplace",
        "label": "contract INameRegistry",
        "numberOfBytes": "20"
      },
      "t_mapping(t_uint256,t_array(t_struct(OpenBid)4933_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Sale.OpenBid[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(OpenBid)4933_storage)dyn_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(OpenBid)4933_storage": {
        "encoding": "inplace",
        "label": "struct Sale.OpenBid",
        "members": [
          {
            "astId": 4926,
            "contract": "contracts/peripheries/OpenBid.sol:OpenBid",
            "label": "tokenId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 4928,
            "contract": "contracts/peripheries/OpenBid.sol:OpenBid",
            "label": "sender",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 4930,
            "contract": "contracts/peripheries/OpenBid.sol:OpenBid",
            "label": "price",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 4932,
            "contract": "contracts/peripheries/OpenBid.sol:OpenBid",
            "label": "content",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
