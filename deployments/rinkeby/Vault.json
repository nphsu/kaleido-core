{
  "address": "0x1f843D52296Ab9d047C403968ABF3B3344D2D247",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "PaymentFailure",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Received",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xe71db47330d490f3e011fb68782488f924a88939af130b50d5326e1f0f593659",
  "receipt": {
    "to": null,
    "from": "0xCdfc500F7f0FCe1278aECb0340b523cD55b3EBbb",
    "contractAddress": "0x1f843D52296Ab9d047C403968ABF3B3344D2D247",
    "transactionIndex": 1,
    "gasUsed": "324210",
    "logsBloom": "0x
    "blockHash": "0xd2ad755db2b5d6ea96f16937b9bd1b9716826e0a96279985b15687d550cde331",
    "transactionHash": "0xe71db47330d490f3e011fb68782488f924a88939af130b50d5326e1f0f593659",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 9753471,
        "transactionHash": "0xe71db47330d490f3e011fb68782488f924a88939af130b50d5326e1f0f593659",
        "address": "0x1f843D52296Ab9d047C403968ABF3B3344D2D247",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000cdfc500f7f0fce1278aecb0340b523cd55b3ebbb"
        ],
        "data": "0x",
        "logIndex": 2,
        "blockHash": "0xd2ad755db2b5d6ea96f16937b9bd1b9716826e0a96279985b15687d550cde331"
      }
    ],
    "blockNumber": 9753471,
    "cumulativeGasUsed": "453303",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "d3d38aa74a09225e7603340a0e8b265f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"PaymentFailure\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Shumpei Koike - <shumpei.koike@bridges.inc>\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256)\":{\"details\":\"Withdraws the fund from the vault contract.\",\"params\":{\"amount\":\"uint256 of the amount the owner wants to withdraw\"}}},\"title\":\"Vault - collects fees as the system usage.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/peripheries/Vault.sol\":\"Vault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/common/EtherPaymentFallback.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\n/// @title EtherPaymentFallback - A contract that has a fallback to accept ether payments.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ncontract EtherPaymentFallback {\\n\\tevent Received(address, uint256);\\n\\n\\t/// @dev Fallback function accepts Ether transactions.\\n\\treceive() external payable virtual {\\n\\t\\temit Received(msg.sender, msg.value);\\n\\t}\\n}\\n\",\"keccak256\":\"0x1686e7e4964a88f7cdd7bbf36639a53f165cd693a2f2791b30ffc8547e584e93\",\"license\":\"UNLICENSED\"},\"contracts/peripheries/Vault.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"../common/EtherPaymentFallback.sol\\\";\\n\\n/// @title Vault - collects fees as the system usage.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ncontract Vault is Ownable, EtherPaymentFallback {\\n\\tevent Withdraw(address sender, uint256 value);\\n\\tevent PaymentFailure(address receiver, uint256 price);\\n\\n\\tfunction balance() public view returns (uint256) {\\n\\t\\treturn address(this).balance;\\n\\t}\\n\\n\\t/// @dev Withdraws the fund from the vault contract.\\n\\t/// @param amount uint256 of the amount the owner wants to withdraw\\n\\tfunction withdraw(uint256 amount) external onlyOwner {\\n\\t\\trequire(amount <= balance(), \\\"KD140\\\");\\n\\t\\t(bool success, ) = payable(msg.sender).call{ value: amount, gas: 10000 }(\\n\\t\\t\\t\\\"\\\"\\n\\t\\t);\\n\\t\\tif (success) {\\n\\t\\t\\temit Withdraw(msg.sender, amount);\\n\\t\\t} else {\\n\\t\\t\\temit PaymentFailure(msg.sender, amount);\\n\\t\\t}\\n\\t}\\n}\\n\",\"keccak256\":\"0xd70f245a5df6d24405222c1da849c25fde9f383d31c6baa419ab311031bf451d\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104728061007e6000396000f3fe60806040526004361061004e5760003560e01c80632e1a7d4d14610093578063715018a6146100b55780638da5cb5b146100ca578063b69ef8a8146100fc578063f2fde38b1461011757600080fd5b3661008e577f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f8852587433346040516100849291906103a5565b60405180910390a1005b600080fd5b34801561009f57600080fd5b506100b36100ae3660046103be565b610137565b005b3480156100c157600080fd5b506100b361026b565b3480156100d657600080fd5b506100df6102a6565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561010857600080fd5b506040514781526020016100f3565b34801561012357600080fd5b506100b36101323660046103d7565b6102b5565b336101406102a6565b6001600160a01b03161461016f5760405162461bcd60e51b815260040161016690610407565b60405180910390fd5b478111156101a75760405162461bcd60e51b815260206004820152600560248201526404b443134360dc1b6044820152606401610166565b604051600090339061271090849084818181858888f193505050503d80600081146101ee576040519150601f19603f3d011682016040523d82523d6000602084013e6101f3565b606091505b50509050801561023a577f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364338360405161022e9291906103a5565b60405180910390a15050565b7fade428889ac75005bd70004e1b1e262be6bf4f97bad5827315a7d58261a6dac7338360405161022e9291906103a5565b336102746102a6565b6001600160a01b03161461029a5760405162461bcd60e51b815260040161016690610407565b6102a46000610355565b565b6000546001600160a01b031690565b336102be6102a6565b6001600160a01b0316146102e45760405162461bcd60e51b815260040161016690610407565b6001600160a01b0381166103495760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610166565b61035281610355565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03929092168252602082015260400190565b6000602082840312156103d057600080fd5b5035919050565b6000602082840312156103e957600080fd5b81356001600160a01b038116811461040057600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220a0002eeb43bb4a98c8345187a9ff7fc0c035cd385a00ec68919813dab05e45a764736f6c63430008090033",
  "deployedBytecode": "0x60806040526004361061004e5760003560e01c80632e1a7d4d14610093578063715018a6146100b55780638da5cb5b146100ca578063b69ef8a8146100fc578063f2fde38b1461011757600080fd5b3661008e577f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f8852587433346040516100849291906103a5565b60405180910390a1005b600080fd5b34801561009f57600080fd5b506100b36100ae3660046103be565b610137565b005b3480156100c157600080fd5b506100b361026b565b3480156100d657600080fd5b506100df6102a6565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561010857600080fd5b506040514781526020016100f3565b34801561012357600080fd5b506100b36101323660046103d7565b6102b5565b336101406102a6565b6001600160a01b03161461016f5760405162461bcd60e51b815260040161016690610407565b60405180910390fd5b478111156101a75760405162461bcd60e51b815260206004820152600560248201526404b443134360dc1b6044820152606401610166565b604051600090339061271090849084818181858888f193505050503d80600081146101ee576040519150601f19603f3d011682016040523d82523d6000602084013e6101f3565b606091505b50509050801561023a577f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364338360405161022e9291906103a5565b60405180910390a15050565b7fade428889ac75005bd70004e1b1e262be6bf4f97bad5827315a7d58261a6dac7338360405161022e9291906103a5565b336102746102a6565b6001600160a01b03161461029a5760405162461bcd60e51b815260040161016690610407565b6102a46000610355565b565b6000546001600160a01b031690565b336102be6102a6565b6001600160a01b0316146102e45760405162461bcd60e51b815260040161016690610407565b6001600160a01b0381166103495760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610166565b61035281610355565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03929092168252602082015260400190565b6000602082840312156103d057600080fd5b5035919050565b6000602082840312156103e957600080fd5b81356001600160a01b038116811461040057600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220a0002eeb43bb4a98c8345187a9ff7fc0c035cd385a00ec68919813dab05e45a764736f6c63430008090033",
  "devdoc": {
    "author": "Shumpei Koike - <shumpei.koike@bridges.inc>",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(uint256)": {
        "details": "Withdraws the fund from the vault contract.",
        "params": {
          "amount": "uint256 of the amount the owner wants to withdraw"
        }
      }
    },
    "title": "Vault - collects fees as the system usage.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/peripheries/Vault.sol:Vault",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}
