{
  "address": "0x66cd1C3a8577EB2e978698fe561b36ff151506F0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nameRegistry",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tokenMetadata",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "spaceMetadata",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "displayStartTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "displayEndTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct Sale.Offer",
          "name": "offer",
          "type": "tuple"
        }
      ],
      "name": "acceptOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "adPoolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "proxy",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "spaceMetadata",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenMetadata",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "saleEndTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "displayStartTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "displayEndTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "enum Ad.Pricing",
          "name": "pricing",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "minPrice",
          "type": "uint256"
        }
      ],
      "name": "addPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "metadata",
          "type": "string"
        }
      ],
      "name": "addSpace",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "allPeriods",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "mediaProxy",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "spaceMetadata",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "tokenMetadata",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "saleStartTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "saleEndTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "displayStartTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "displayEndTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "enum Ad.Pricing",
              "name": "pricing",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "minPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startPrice",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "sold",
              "type": "bool"
            }
          ],
          "internalType": "struct Ad.Period",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "deletePeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "displayEnd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "displayStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "englishAuctionAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eventEmitterAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mediaFactoryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mediaProxyOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mediaRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nameRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "offerBidAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openBidAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "periods",
      "outputs": [
        {
          "internalType": "address",
          "name": "mediaProxy",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "spaceMetadata",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenMetadata",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "saleStartTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "saleEndTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "displayStartTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "displayEndTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "enum Ad.Pricing",
          "name": "pricing",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "minPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startPrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "sold",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalReviewAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "sold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "spaced",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "spaceMetadata",
          "type": "string"
        }
      ],
      "name": "tokenIdsOf",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xf0a943d303c5cd321acde9133cee8430f9b62f54e8f1a12b56f9641d1637d415",
  "receipt": {
    "to": null,
    "from": "0xCdfc500F7f0FCe1278aECb0340b523cD55b3EBbb",
    "contractAddress": "0x66cd1C3a8577EB2e978698fe561b36ff151506F0",
    "transactionIndex": 0,
    "gasUsed": "1924359",
    "logsBloom": "0x
    "blockHash": "0x17e22e27b85a84500804a6346e6c135e2d7af44c557729a6fca2074c33678bf9",
    "transactionHash": "0xf0a943d303c5cd321acde9133cee8430f9b62f54e8f1a12b56f9641d1637d415",
    "logs": [],
    "blockNumber": 9760098,
    "cumulativeGasUsed": "1924359",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x173E3862BaE7bD155a7a371Ee3b855de01aa63dd"
  ],
  "solcInputHash": "289fa2710193a113c0b3ec7823c19cab",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nameRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenMetadata\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"spaceMetadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"displayStartTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"displayEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Sale.Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"name\":\"acceptOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"spaceMetadata\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenMetadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"saleEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"displayStartTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"displayEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"enum Ad.Pricing\",\"name\":\"pricing\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"}],\"name\":\"addPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"name\":\"addSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"allPeriods\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"mediaProxy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"spaceMetadata\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenMetadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"saleStartTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"displayStartTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"displayEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"enum Ad.Pricing\",\"name\":\"pricing\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"}],\"internalType\":\"struct Ad.Period\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"deletePeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"displayEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"displayStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"englishAuctionAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eventEmitterAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mediaFactoryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mediaProxyOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mediaRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nameRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"offerBidAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openBidAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"periods\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"mediaProxy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"spaceMetadata\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenMetadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"saleStartTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"displayStartTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"displayEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"enum Ad.Pricing\",\"name\":\"pricing\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalReviewAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"sold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"spaced\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"spaceMetadata\",\"type\":\"string\"}],\"name\":\"tokenIdsOf\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Shumpei Koike - <shumpei.koike@bridges.inc>\",\"kind\":\"dev\",\"methods\":{\"adPoolAddress()\":{\"details\":\"Gets the address of AdPool.\"},\"englishAuctionAddress()\":{\"details\":\"Gets the address of EnglishAuction.\"},\"eventEmitterAddress()\":{\"details\":\"Gets the address of EventEmitter.\"},\"mediaFactoryAddress()\":{\"details\":\"Gets the address of MediaFactory.\"},\"mediaRegistryAddress()\":{\"details\":\"Gets the address of MediaRegistry.\"},\"nameRegistryAddress()\":{\"details\":\"Gets the address of NameRegistry\"},\"offerBidAddress()\":{\"details\":\"Gets the address of OfferBid.\"},\"openBidAddress()\":{\"details\":\"Gets the address of OpenBid.\"},\"owner()\":{\"details\":\"Gets the owner address.\"},\"proposalReviewAddress()\":{\"details\":\"Gets the address of ProposalReview.\"},\"tokenIdsOf(string)\":{\"details\":\"Returns tokenIds tied with the space metadata\",\"params\":{\"spaceMetadata\":\"string of the space metadata\"}},\"vaultAddress()\":{\"details\":\"Gets the address of Vault.\"}},\"stateVariables\":{\"_periodKeys\":{\"details\":\"Maps the space metadata with tokenIds of ad periods.\"},\"periods\":{\"details\":\"tokenId <- metadata * displayStartTimestamp * displayEndTimestamp\"},\"spaced\":{\"details\":\"Returns spaceId that is tied with space metadata.\"}},\"title\":\"AdPool - stores all ads accorss every space.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/peripheries/AdPool.sol\":\"AdPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/accessors/NameAccessor.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\nimport \\\"../interfaces/INameRegistry.sol\\\";\\n\\n/// @title NameAccessor - manages the endpoints.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ncontract NameAccessor {\\n\\tINameRegistry internal _nameRegistry;\\n\\n\\t/// @dev Sets the address of NameRegistry.\\n\\t/// @param nameRegistry address of the NameRegistry\\n\\tfunction initialize(address nameRegistry) internal {\\n\\t\\t_nameRegistry = INameRegistry(nameRegistry);\\n\\t}\\n\\n\\t/// @dev Prevents calling a function from anyone except the accepted contracts.\\n\\tmodifier onlyAllowedContract() {\\n\\t\\trequire(_nameRegistry.allowedContracts(msg.sender), \\\"KD013\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t/// @dev Throws if not called by MediaFactory.\\n\\tmodifier onlyFactory() {\\n\\t\\trequire(msg.sender == mediaFactoryAddress(), \\\"KD010\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t/// @dev Throws if called by any account other than the owner.\\n\\tmodifier onlyOwner() {\\n\\t\\trequire(owner() == msg.sender, \\\"KD012\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t/// @dev Gets the address of NameRegistry\\n\\tfunction nameRegistryAddress() public view returns (address) {\\n\\t\\treturn address(_nameRegistry);\\n\\t}\\n\\n\\t/// @dev Gets the address of AdPool.\\n\\tfunction adPoolAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"AdPool\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of MediaFactory.\\n\\tfunction mediaFactoryAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"MediaFactory\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of MediaRegistry.\\n\\tfunction mediaRegistryAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"MediaRegistry\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of Vault.\\n\\tfunction vaultAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"Vault\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of EventEmitter.\\n\\tfunction eventEmitterAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"EventEmitter\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of EnglishAuction.\\n\\tfunction englishAuctionAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"EnglishAuction\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of OpenBid.\\n\\tfunction openBidAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"OpenBid\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of OfferBid.\\n\\tfunction offerBidAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"OfferBid\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of ProposalReview.\\n\\tfunction proposalReviewAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"ProposalReview\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the owner address.\\n\\tfunction owner() public view returns (address) {\\n\\t\\treturn _nameRegistry.deployer();\\n\\t}\\n}\\n\",\"keccak256\":\"0x92a0809b892e7b89f6a5d845aca491a2eda6bd56a5cbe69db31809f9e7c15b2a\",\"license\":\"UNLICENSED\"},\"contracts/common/BlockTimestamp.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\n/// @title BlockTimestamp - gets a block timestamp.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\nabstract contract BlockTimestamp {\\n\\t/// @dev Method that exists purely to be overridden for tests\\n\\tfunction _blockTimestamp() internal view virtual returns (uint256) {\\n\\t\\treturn block.timestamp;\\n\\t}\\n}\\n\",\"keccak256\":\"0x417bf100ecc94b19a01559e899f68e19777eae593c783d8280d13bcabc8e43a2\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IAdPool.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\nimport \\\"../libraries/Ad.sol\\\";\\nimport \\\"../libraries/Sale.sol\\\";\\n\\n/// @title IAdPool - stores all ads accorss every space.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IAdPool {\\n\\tfunction allPeriods(uint256 tokenId) external view returns (Ad.Period memory);\\n\\n\\tfunction spaced(string memory spaceMetadata) external view returns (bool);\\n\\n\\tfunction addSpace(string memory spaceMetadata) external;\\n\\n\\tfunction addPeriod(\\n\\t\\taddress proxy,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tuint256 saleEndTimestamp,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\tAd.Pricing pricing,\\n\\t\\tuint256 minPrice\\n\\t) external returns (uint256);\\n\\n\\tfunction deletePeriod(uint256 tokenId) external;\\n\\n\\tfunction sold(uint256 tokenId) external;\\n\\n\\tfunction acceptOffer(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tSale.Offer memory offer\\n\\t) external;\\n\\n\\tfunction mediaProxyOf(uint256 tokenId) external view returns (address);\\n\\n\\tfunction displayStart(uint256 tokenId) external view returns (uint256);\\n\\n\\tfunction displayEnd(uint256 tokenId) external view returns (uint256);\\n\\n\\tfunction tokenIdsOf(string memory spaceMetadata)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (uint256[] memory);\\n}\\n\",\"keccak256\":\"0x9db94679b25b0afc4b4b94048dd2d040fd466be2024d8849d9d1d6b667dd9b1f\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IEventEmitter.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\nimport \\\"../libraries/Ad.sol\\\";\\n\\n/// @title IEventEmitter - emits events.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IEventEmitter {\\n\\tfunction emitNewSpace(string memory metadata) external;\\n\\n\\tfunction emitNewPeriod(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tuint256 saleStartTimestamp,\\n\\t\\tuint256 saleEndTimestamp,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\tAd.Pricing pricing,\\n\\t\\tuint256 minPrice\\n\\t) external;\\n\\n\\tfunction emitDeletePeriod(uint256 tokenId) external;\\n\\n\\tfunction emitBuy(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 msgValue,\\n\\t\\taddress msgSender,\\n\\t\\tuint256 blockTimestamp\\n\\t) external;\\n\\n\\tfunction emitBid(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 msgValue,\\n\\t\\taddress msgSender,\\n\\t\\tuint256 blockTimestamp\\n\\t) external;\\n\\n\\tfunction emitBidWithProposal(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 msgValue,\\n\\t\\taddress msgSender,\\n\\t\\tstring memory metadata,\\n\\t\\tuint256 blockTimestamp\\n\\t) external;\\n\\n\\tfunction emitSelectProposal(uint256 tokenId, address successfulBidder)\\n\\t\\texternal;\\n\\n\\tfunction emitReceiveToken(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 price,\\n\\t\\taddress buyer,\\n\\t\\tuint256 blockTimestamp\\n\\t) external;\\n\\n\\tfunction emitOfferPeriod(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\taddress sender,\\n\\t\\tuint256 price\\n\\t) external;\\n\\n\\tfunction emitCancelOffer(uint256 tokenId) external;\\n\\n\\tfunction emitAcceptOffer(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\tuint256 price\\n\\t) external;\\n\\n\\tfunction emitWithdraw(uint256 amount) external;\\n\\n\\tfunction emitPropose(uint256 tokenId, string memory metadata) external;\\n\\n\\tfunction emitAcceptProposal(uint256 tokenId, string memory metadata) external;\\n\\n\\tfunction emitDenyProposal(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory metadata,\\n\\t\\tstring memory reason,\\n\\t\\tbool offensive\\n\\t) external;\\n\\n\\tfunction emitTransferCustom(\\n\\t\\taddress from,\\n\\t\\taddress to,\\n\\t\\tuint256 tokenId\\n\\t) external;\\n\\n\\tfunction emitNewMedia(\\n\\t\\taddress proxy,\\n\\t\\taddress mediaEOA,\\n\\t\\tstring memory applicationMetadata,\\n\\t\\tstring memory updatableMetadata,\\n\\t\\tuint256 saltNonce\\n\\t) external;\\n\\n\\tfunction emitUpdateMedia(\\n\\t\\taddress proxy,\\n\\t\\taddress mediaEOA,\\n\\t\\tstring memory accountMetadata\\n\\t) external;\\n\\n\\tfunction emitPaymentFailure(address receiver, uint256 price) external;\\n\\n\\tfunction emitReceived(address receiver, uint256 price) external;\\n}\\n\",\"keccak256\":\"0xb8824b144c059b4b6ce8f7453a5f68fd420481e29b18a4d0e5f35fa163bc4e8a\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IMediaRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\nimport \\\"../libraries/Ad.sol\\\";\\n\\n/// @title MediaRegistry - registers a list of media accounts.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IMediaRegistry {\\n\\tstruct Account {\\n\\t\\taddress proxy;\\n\\t\\taddress mediaEOA;\\n\\t\\tstring applicationMetadata;\\n\\t\\tstring updatableMetadata;\\n\\t}\\n\\n\\tfunction allAccounts(address proxy)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (\\n\\t\\t\\taddress,\\n\\t\\t\\taddress,\\n\\t\\t\\tstring memory,\\n\\t\\t\\tstring memory\\n\\t\\t);\\n\\n\\t/// @dev Adds media account.\\n\\t/// @param proxy address of the proxy contract\\n\\t/// @param applicationMetadata string of constant metadata for the defailts of the account\\n\\t/// @param updatableMetadata string of constant metadata for the defailts of the account\\n\\t/// @param mediaEOA address of the media account\\n\\tfunction addMedia(\\n\\t\\taddress proxy,\\n\\t\\tstring memory applicationMetadata,\\n\\t\\tstring memory updatableMetadata,\\n\\t\\taddress mediaEOA\\n\\t) external;\\n\\n\\t/// @dev Updates media account.\\n\\t/// @param metadata string of the account metadata\\n\\t/// @param mediaEOA address of the media account\\n\\tfunction updateMedia(address mediaEOA, string memory metadata) external;\\n\\n\\tfunction updateApplicationMetadata(address proxy, string memory metadata)\\n\\t\\texternal;\\n\\n\\t/// @dev Returns whether the account has created or not.\\n\\t/// @param proxy address of the proxy contract that represents an account.\\n\\tfunction created(address proxy) external view returns (bool);\\n\\n\\t/// @dev Returns the owner of the account.\\n\\t/// @param proxy address of the proxy contract that represents an account.\\n\\tfunction ownerOf(address proxy) external view returns (address);\\n}\\n\",\"keccak256\":\"0x63655aa8531480b3da0c4b3f6cd63d72c3ca678661fa52dd90e5ab1a89b43131\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/INameRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\n/// @title INameRegistry - saves a set of addresses used in the system.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface INameRegistry {\\n\\t/// @dev Sets the address associated with the key name.\\n\\t///      If the address is the contract, not an EOA, it is\\n\\t///      saved as the allowed contract list.\\n\\t/// @param key bytes32 of the key\\n\\t/// @param value address of the value\\n\\tfunction set(bytes32 key, address value) external;\\n\\n\\t/// @dev Gets the address associated with the key name.\\n\\t/// @param key bytes32 of the key\\n\\tfunction get(bytes32 key) external view returns (address);\\n\\n\\t/// @dev Returns whether or not the address is the one that we deployed.\\n\\t/// @param caller address of the msg.sender\\n\\tfunction allowedContracts(address caller) external returns (bool);\\n\\n\\t/// @dev Gets the deployer of NameRegistry.\\n\\tfunction deployer() external view returns (address);\\n}\\n\",\"keccak256\":\"0xb4612b34aa95a45ed84877f60adc23f5f8eb941a00a2644dc29ecea26c1c032f\",\"license\":\"UNLICENSED\"},\"contracts/libraries/Ad.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\nlibrary Ad {\\n\\tuint256 private constant _ID_LENGTH = 100000000000000000000000000000000;\\n\\t// 0.RRP     : Recommended Retail Price\\n\\t// 1.DUTCH   : Dutch Auction\\n\\t// 2.ENGLISH : English Acction\\n\\t// 3.OFFER   : Offered by Others\\n\\t// 4.OPEN    : Open Bid by revealing the content\\n\\tenum Pricing {\\n\\t\\tRRP,\\n\\t\\tDUTCH,\\n\\t\\tENGLISH,\\n\\t\\tOFFER,\\n\\t\\tOPEN\\n\\t}\\n\\tstruct Period {\\n\\t\\taddress mediaProxy;\\n\\t\\tstring spaceMetadata;\\n\\t\\tstring tokenMetadata;\\n\\t\\tuint256 saleStartTimestamp;\\n\\t\\tuint256 saleEndTimestamp;\\n\\t\\tuint256 displayStartTimestamp;\\n\\t\\tuint256 displayEndTimestamp;\\n\\t\\tPricing pricing;\\n\\t\\tuint256 minPrice;\\n\\t\\tuint256 startPrice;\\n\\t\\tbool sold;\\n\\t}\\n\\n\\tfunction id(\\n\\t\\tstring memory metadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp\\n\\t) public pure returns (uint256) {\\n\\t\\treturn\\n\\t\\t\\tuint256(\\n\\t\\t\\t\\tkeccak256(\\n\\t\\t\\t\\t\\tabi.encodePacked(metadata, displayStartTimestamp, displayEndTimestamp)\\n\\t\\t\\t\\t)\\n\\t\\t\\t) % _ID_LENGTH;\\n\\t}\\n}\\n\",\"keccak256\":\"0x98b8f7d36adbd4e0b75ef9c5a0ec7045e0661b9015a90beffa30004f35ff7039\",\"license\":\"UNLICENSED\"},\"contracts/libraries/Sale.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\nimport \\\"./Ad.sol\\\";\\n\\nlibrary Sale {\\n\\tstruct Bidding {\\n\\t\\tuint256 tokenId;\\n\\t\\taddress bidder;\\n\\t\\tuint256 price;\\n\\t}\\n\\tstruct Offer {\\n\\t\\tstring spaceMetadata;\\n\\t\\tuint256 displayStartTimestamp;\\n\\t\\tuint256 displayEndTimestamp;\\n\\t\\taddress sender;\\n\\t\\tuint256 price;\\n\\t}\\n\\tstruct OpenBid {\\n\\t\\tuint256 tokenId;\\n\\t\\taddress sender;\\n\\t\\tuint256 price;\\n\\t\\tstring content;\\n\\t}\\n\\n\\tfunction startPrice(Ad.Period memory period) public pure returns (uint256) {\\n\\t\\tif (period.pricing == Ad.Pricing.RRP) {\\n\\t\\t\\treturn period.minPrice;\\n\\t\\t} else if (period.pricing == Ad.Pricing.DUTCH) {\\n\\t\\t\\treturn period.minPrice * 10;\\n\\t\\t} else if (period.pricing == Ad.Pricing.ENGLISH) {\\n\\t\\t\\treturn period.minPrice;\\n\\t\\t} else if (period.pricing == Ad.Pricing.OFFER) {\\n\\t\\t\\treturn period.minPrice;\\n\\t\\t} else if (period.pricing == Ad.Pricing.OPEN) {\\n\\t\\t\\treturn period.minPrice;\\n\\t\\t} else {\\n\\t\\t\\treturn 0;\\n\\t\\t}\\n\\t}\\n}\\n\",\"keccak256\":\"0x1a32666b69f927d29b818c643d9b31e10f08e5663ed2a8409ff13522ad38bd38\",\"license\":\"UNLICENSED\"},\"contracts/libraries/Schedule.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\nlibrary Schedule {\\n\\tfunction isOverlapped(\\n\\t\\tuint256 newFromTimestamp,\\n\\t\\tuint256 newToTimestamp,\\n\\t\\tuint256 currentFromTimestamp,\\n\\t\\tuint256 currentToTimestamp\\n\\t) public pure returns (bool) {\\n\\t\\treturn\\n\\t\\t\\t!(isPast(newToTimestamp, currentFromTimestamp) ||\\n\\t\\t\\t\\tisFuture(newFromTimestamp, currentToTimestamp));\\n\\t}\\n\\n\\tfunction isPast(uint256 newToTimestamp, uint256 currentFromTimestamp)\\n\\t\\tpublic\\n\\t\\tpure\\n\\t\\treturns (bool)\\n\\t{\\n\\t\\treturn newToTimestamp < currentFromTimestamp;\\n\\t}\\n\\n\\tfunction isFuture(uint256 newFromTimestamp, uint256 currentToTimestamp)\\n\\t\\tpublic\\n\\t\\tpure\\n\\t\\treturns (bool)\\n\\t{\\n\\t\\treturn currentToTimestamp < newFromTimestamp;\\n\\t}\\n}\\n\",\"keccak256\":\"0x0b0267bc68a3db4e1b5ee08ee7dffe4b1b1fd294eceb4b2e525a25fc81af51d5\",\"license\":\"UNLICENSED\"},\"contracts/peripheries/AdPool.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\nimport \\\"../accessors/NameAccessor.sol\\\";\\nimport \\\"../common/BlockTimestamp.sol\\\";\\nimport \\\"../interfaces/IAdPool.sol\\\";\\nimport \\\"../interfaces/IMediaRegistry.sol\\\";\\nimport \\\"../interfaces/IEventEmitter.sol\\\";\\nimport \\\"../libraries/Schedule.sol\\\";\\n\\n/// @title AdPool - stores all ads accorss every space.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ncontract AdPool is IAdPool, BlockTimestamp, NameAccessor {\\n\\t/// @dev tokenId <- metadata * displayStartTimestamp * displayEndTimestamp\\n\\tmapping(uint256 => Ad.Period) public periods;\\n\\t/// @dev Returns spaceId that is tied with space metadata.\\n\\tmapping(string => bool) public spaced;\\n\\n\\t/// @dev Maps the space metadata with tokenIds of ad periods.\\n\\tmapping(string => uint256[]) internal _periodKeys;\\n\\n\\tmodifier onlyProxies() {\\n\\t\\trequire(_mediaRegistry().ownerOf(msg.sender) != address(0x0), \\\"KD011\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\tconstructor(address _nameRegistry) {\\n\\t\\tinitialize(_nameRegistry);\\n\\t}\\n\\n\\t/// @inheritdoc IAdPool\\n\\tfunction addSpace(string memory metadata) external virtual onlyProxies {\\n\\t\\trequire(!spaced[metadata], \\\"KD100\\\");\\n\\t\\tspaced[metadata] = true;\\n\\t\\t_eventEmitter().emitNewSpace(metadata);\\n\\t}\\n\\n\\t/// @inheritdoc IAdPool\\n\\tfunction addPeriod(\\n\\t\\taddress proxy,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tuint256 saleEndTimestamp,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\tAd.Pricing pricing,\\n\\t\\tuint256 minPrice\\n\\t) external virtual onlyProxies returns (uint256 tokenId) {\\n\\t\\trequire(saleEndTimestamp > _blockTimestamp(), \\\"KD111\\\");\\n\\t\\trequire(saleEndTimestamp < displayStartTimestamp, \\\"KD112\\\");\\n\\t\\trequire(displayStartTimestamp < displayEndTimestamp, \\\"KD113\\\");\\n\\n\\t\\t_addSpaceIfNot(spaceMetadata);\\n\\t\\t_checkOverlapping(\\n\\t\\t\\tspaceMetadata,\\n\\t\\t\\tdisplayStartTimestamp,\\n\\t\\t\\tdisplayEndTimestamp\\n\\t\\t);\\n\\t\\ttokenId = Ad.id(spaceMetadata, displayStartTimestamp, displayEndTimestamp);\\n\\t\\tAd.Period memory period = Ad.Period(\\n\\t\\t\\tproxy,\\n\\t\\t\\tspaceMetadata,\\n\\t\\t\\ttokenMetadata,\\n\\t\\t\\t_blockTimestamp(),\\n\\t\\t\\tsaleEndTimestamp,\\n\\t\\t\\tdisplayStartTimestamp,\\n\\t\\t\\tdisplayEndTimestamp,\\n\\t\\t\\tpricing,\\n\\t\\t\\tminPrice,\\n\\t\\t\\t0,\\n\\t\\t\\tfalse\\n\\t\\t);\\n\\t\\tperiod.startPrice = Sale.startPrice(period);\\n\\t\\tperiods[tokenId] = period;\\n\\t\\t_periodKeys[spaceMetadata].push(tokenId);\\n\\t\\t_eventEmitter().emitNewPeriod(\\n\\t\\t\\ttokenId,\\n\\t\\t\\tspaceMetadata,\\n\\t\\t\\ttokenMetadata,\\n\\t\\t\\t_blockTimestamp(),\\n\\t\\t\\tsaleEndTimestamp,\\n\\t\\t\\tdisplayStartTimestamp,\\n\\t\\t\\tdisplayEndTimestamp,\\n\\t\\t\\tpricing,\\n\\t\\t\\tminPrice\\n\\t\\t);\\n\\t}\\n\\n\\t/// @inheritdoc IAdPool\\n\\tfunction deletePeriod(uint256 tokenId) external virtual onlyProxies {\\n\\t\\tstring memory spaceMetadata = periods[tokenId].spaceMetadata;\\n\\t\\tuint256 index = 0;\\n\\t\\tfor (uint256 i = 1; i < _periodKeys[spaceMetadata].length + 1; i++) {\\n\\t\\t\\tif (_periodKeys[spaceMetadata][i - 1] == tokenId) {\\n\\t\\t\\t\\tindex = i;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\trequire(index != 0, \\\"No deletable keys\\\");\\n\\t\\tdelete _periodKeys[spaceMetadata][index - 1];\\n\\t\\tdelete periods[tokenId];\\n\\t\\t_eventEmitter().emitDeletePeriod(tokenId);\\n\\t}\\n\\n\\tfunction acceptOffer(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tSale.Offer memory offer\\n\\t) external virtual onlyProxies {\\n\\t\\t_checkOverlapping(\\n\\t\\t\\toffer.spaceMetadata,\\n\\t\\t\\toffer.displayStartTimestamp,\\n\\t\\t\\toffer.displayEndTimestamp\\n\\t\\t);\\n\\t\\tAd.Period memory period = Ad.Period(\\n\\t\\t\\toffer.sender,\\n\\t\\t\\toffer.spaceMetadata,\\n\\t\\t\\ttokenMetadata,\\n\\t\\t\\t_blockTimestamp(),\\n\\t\\t\\t_blockTimestamp(),\\n\\t\\t\\toffer.displayStartTimestamp,\\n\\t\\t\\toffer.displayEndTimestamp,\\n\\t\\t\\tAd.Pricing.OFFER,\\n\\t\\t\\toffer.price,\\n\\t\\t\\toffer.price,\\n\\t\\t\\ttrue\\n\\t\\t);\\n\\t\\tperiods[tokenId] = period;\\n\\t\\t_periodKeys[offer.spaceMetadata].push(tokenId);\\n\\t\\t_eventEmitter().emitAcceptOffer(\\n\\t\\t\\ttokenId,\\n\\t\\t\\toffer.spaceMetadata,\\n\\t\\t\\ttokenMetadata,\\n\\t\\t\\toffer.displayStartTimestamp,\\n\\t\\t\\toffer.displayEndTimestamp,\\n\\t\\t\\toffer.price\\n\\t\\t);\\n\\t}\\n\\n\\tfunction sold(uint256 tokenId) external onlyProxies {\\n\\t\\tperiods[tokenId].sold = true;\\n\\t}\\n\\n\\tfunction allPeriods(uint256 tokenId)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (Ad.Period memory)\\n\\t{\\n\\t\\treturn periods[tokenId];\\n\\t}\\n\\n\\t/// @inheritdoc IAdPool\\n\\tfunction mediaProxyOf(uint256 tokenId) external view returns (address) {\\n\\t\\treturn periods[tokenId].mediaProxy;\\n\\t}\\n\\n\\tfunction displayStart(uint256 tokenId) public view returns (uint256) {\\n\\t\\treturn periods[tokenId].displayStartTimestamp;\\n\\t}\\n\\n\\tfunction displayEnd(uint256 tokenId) public view returns (uint256) {\\n\\t\\treturn periods[tokenId].displayEndTimestamp;\\n\\t}\\n\\n\\t/// @dev Returns tokenIds tied with the space metadata\\n\\t/// @param spaceMetadata string of the space metadata\\n\\tfunction tokenIdsOf(string memory spaceMetadata)\\n\\t\\tpublic\\n\\t\\tview\\n\\t\\tvirtual\\n\\t\\treturns (uint256[] memory)\\n\\t{\\n\\t\\treturn _periodKeys[spaceMetadata];\\n\\t}\\n\\n\\tfunction _checkOverlapping(\\n\\t\\tstring memory metadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp\\n\\t) internal view virtual {\\n\\t\\tfor (uint256 i = 0; i < _periodKeys[metadata].length; i++) {\\n\\t\\t\\t// Ad.Period memory existing = _adPool().allPeriods(\\n\\t\\t\\t// \\t_periodKeys[metadata][i]\\n\\t\\t\\t// );\\n\\t\\t\\tuint256 existDisplayStart = displayStart(_periodKeys[metadata][i]);\\n\\t\\t\\tuint256 existDisplayEnd = displayEnd(_periodKeys[metadata][i]);\\n\\n\\t\\t\\tif (\\n\\t\\t\\t\\tSchedule.isOverlapped(\\n\\t\\t\\t\\t\\tdisplayStartTimestamp,\\n\\t\\t\\t\\t\\tdisplayEndTimestamp,\\n\\t\\t\\t\\t\\texistDisplayStart,\\n\\t\\t\\t\\t\\texistDisplayEnd\\n\\t\\t\\t\\t)\\n\\t\\t\\t) {\\n\\t\\t\\t\\trevert(\\\"KD110\\\");\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tfunction _addSpaceIfNot(string memory metadata) internal {\\n\\t\\tif (!spaced[metadata]) {\\n\\t\\t\\tspaced[metadata] = true;\\n\\t\\t\\t_eventEmitter().emitNewSpace(metadata);\\n\\t\\t}\\n\\t}\\n\\n\\t/**\\n\\t * Accessors\\n\\t */\\n\\tfunction _mediaRegistry() internal view returns (IMediaRegistry) {\\n\\t\\treturn IMediaRegistry(mediaRegistryAddress());\\n\\t}\\n\\n\\tfunction _eventEmitter() internal view virtual returns (IEventEmitter) {\\n\\t\\treturn IEventEmitter(eventEmitterAddress());\\n\\t}\\n}\\n\",\"keccak256\":\"0x42859720e7647685249f157f94245d6ea776dce34ec49b2085ce32616a2acbd6\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061011d5760003560e01c80630106d8eb1461012257806310335241146101405780632231c1eb1461016957806327b7a2f5146101715780632874d8f314610182578063430bf08a146101a35780634b455a51146101ab57806365045a65146101c05780636a58767e146101fe5780637cf175fb146102065780638da5cb5b1461020e5780638f6059d6146102165780639c03facb1461021e578063a9ad60f314610231578063b3a0ebc914610244578063b8926f2c14610264578063c9cd71b514610277578063d028bd661461027f578063d3c1277e1461029f578063e2f5fc78146102b2578063e6851b98146102ba578063ea4a1104146102cd578063f0726291146102f7575b600080fd5b61012a6102ff565b6040516101379190611a11565b60405180910390f35b61012a61014e366004611a25565b6000908152600160205260409020546001600160a01b031690565b61012a6103bc565b6000546001600160a01b031661012a565b610195610190366004611a25565b6103ed565b604051908152602001610137565b61012a610402565b6101be6101b9366004611a25565b610431565b005b6101ee6101ce366004611b08565b805160208183018101805160028252928201919093012091525460ff1681565b6040519015158152602001610137565b61012a610796565b61012a6107cd565b61012a6107ff565b61012a61084e565b6101be61022c366004611a25565b610884565b6101be61023f366004611b59565b610951565b610257610252366004611a25565b610c30565b6040516101379190611cb9565b6101be610272366004611b08565b610e0b565b61012a610fa9565b61029261028d366004611b08565b610fd9565b6040516101379190611d79565b6101956102ad366004611a25565b611049565b61012a61105e565b6101956102c8366004611dbd565b611096565b6102e06102db366004611a25565b61152b565b6040516101379b9a99989796959493929190611e72565b61012a6116a3565b600080546040516d22b733b634b9b420bab1ba34b7b760911b60208201526001600160a01b0390911690638eaa6ac090602e015b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161036791815260200190565b60206040518083038186803b15801561037f57600080fd5b505afa158015610393573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b79190611efa565b905090565b600080546040516613dc195b909a5960ca1b60208201526001600160a01b0390911690638eaa6ac090602701610333565b60009081526001602052604090206006015490565b600080546040516415985d5b1d60da1b60208201526001600160a01b0390911690638eaa6ac090602501610333565b600061043b6116d9565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b81526004016104669190611a11565b60206040518083038186803b15801561047e57600080fd5b505afa158015610492573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b69190611efa565b6001600160a01b031614156104e65760405162461bcd60e51b81526004016104dd90611f1e565b60405180910390fd5b6000818152600160208190526040822001805461050290611f3d565b80601f016020809104026020016040519081016040528092919081815260200182805461052e90611f3d565b801561057b5780601f106105505761010080835404028352916020019161057b565b820191906000526020600020905b81548152906001019060200180831161055e57829003601f168201915b50505050509050600080600190505b60038360405161059a9190611f78565b908152604051908190036020019020546105b5906001611faa565b81101561061e57836003846040516105cd9190611f78565b9081526040519081900360200190206105e7600184611fc2565b815481106105f7576105f7611fd9565b9060005260206000200154141561060c578091505b8061061681611fef565b91505061058a565b50806106605760405162461bcd60e51b81526020600482015260116024820152704e6f2064656c657461626c65206b65797360781b60448201526064016104dd565b6003826040516106709190611f78565b90815260405190819003602001902061068a600183611fc2565b8154811061069a5761069a611fd9565b600091825260208083209091018290558482526001908190526040822080546001600160a01b031916815591906106d3908301826118c8565b6106e16002830160006118c8565b5060006003820181905560048201819055600582018190556006820181905560078201805460ff19908116909155600883018290556009830191909155600a909101805490911690556107326116e3565b6001600160a01b031663ccb55a98846040518263ffffffff1660e01b815260040161075f91815260200190565b600060405180830381600087803b15801561077957600080fd5b505af115801561078d573d6000803e3d6000fd5b50505050505050565b600080546040516c4d65646961526567697374727960981b60208201526001600160a01b0390911690638eaa6ac090602d01610333565b600080546040516713d999995c909a5960c21b60208201526001600160a01b0390911690638eaa6ac090602801610333565b60008060009054906101000a90046001600160a01b03166001600160a01b031663d5f394886040518163ffffffff1660e01b815260040160206040518083038186803b15801561037f57600080fd5b600080546040516b4d65646961466163746f727960a01b60208201526001600160a01b0390911690638eaa6ac090602c01610333565b600061088e6116d9565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b81526004016108b99190611a11565b60206040518083038186803b1580156108d157600080fd5b505afa1580156108e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109099190611efa565b6001600160a01b031614156109305760405162461bcd60e51b81526004016104dd90611f1e565b6000908152600160208190526040909120600a01805460ff19169091179055565b600061095b6116d9565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b81526004016109869190611a11565b60206040518083038186803b15801561099e57600080fd5b505afa1580156109b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d69190611efa565b6001600160a01b031614156109fd5760405162461bcd60e51b81526004016104dd90611f1e565b610a148160000151826020015183604001516116ed565b600060405180610160016040528083606001516001600160a01b0316815260200183600001518152602001848152602001610a4c4290565b815260200142815260208481015181830152604080860151818401526003606084015260808087018051918501919091525160a0840152600160c0909301839052600088815283835220835181546001600160a01b039091166001600160a01b031990911617815583820151805194955085949193610ad19390850192910190611902565b5060408201518051610aed916002840191602090910190611902565b50606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070160006101000a81548160ff02191690836004811115610b4057610b40611c81565b02179055506101008201516008820155610120820151600982015561014090910151600a909101805460ff19169115159190911790558151604051600391610b8791611f78565b908152604051602091819003820190208054600181018255600091825291902001849055610bb36116e3565b6001600160a01b0316630ca82afb858460000151868660200151876040015188608001516040518763ffffffff1660e01b8152600401610bf89695949392919061200a565b600060405180830381600087803b158015610c1257600080fd5b505af1158015610c26573d6000803e3d6000fd5b5050505050505050565b610c38611986565b6000828152600160208181526040928390208351610160810190945280546001600160a01b03168452918201805491840191610c7390611f3d565b80601f0160208091040260200160405190810160405280929190818152602001828054610c9f90611f3d565b8015610cec5780601f10610cc157610100808354040283529160200191610cec565b820191906000526020600020905b815481529060010190602001808311610ccf57829003601f168201915b50505050508152602001600282018054610d0590611f3d565b80601f0160208091040260200160405190810160405280929190818152602001828054610d3190611f3d565b8015610d7e5780601f10610d5357610100808354040283529160200191610d7e565b820191906000526020600020905b815481529060010190602001808311610d6157829003601f168201915b50505091835250506003820154602082015260048083015460408301526005830154606083015260068301546080830152600783015460a09092019160ff1690811115610dcd57610dcd611c81565b6004811115610dde57610dde611c81565b81526008820154602082015260098201546040820152600a9091015460ff16151560609091015292915050565b6000610e156116d9565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b8152600401610e409190611a11565b60206040518083038186803b158015610e5857600080fd5b505afa158015610e6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e909190611efa565b6001600160a01b03161415610eb75760405162461bcd60e51b81526004016104dd90611f1e565b600281604051610ec79190611f78565b9081526040519081900360200190205460ff1615610f0f5760405162461bcd60e51b815260206004820152600560248201526404b443130360dc1b60448201526064016104dd565b6001600282604051610f219190611f78565b908152604051908190036020019020805491151560ff19909216919091179055610f496116e3565b6001600160a01b03166378689c64826040518263ffffffff1660e01b8152600401610f749190612054565b600060405180830381600087803b158015610f8e57600080fd5b505af1158015610fa2573d6000803e3d6000fd5b5050505050565b60008054604051651059141bdbdb60d21b60208201526001600160a01b0390911690638eaa6ac090602601610333565b6060600382604051610feb9190611f78565b908152604080519182900360209081018320805480830285018301909352828452919083018282801561103d57602002820191906000526020600020905b815481526020019060010190808311611029575b50505050509050919050565b60009081526001602052604090206005015490565b600080546040516d50726f706f73616c52657669657760901b60208201526001600160a01b0390911690638eaa6ac090602e01610333565b6000806110a16116d9565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b81526004016110cc9190611a11565b60206040518083038186803b1580156110e457600080fd5b505afa1580156110f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111c9190611efa565b6001600160a01b031614156111435760405162461bcd60e51b81526004016104dd90611f1e565b42861161117a5760405162461bcd60e51b81526020600482015260056024820152644b4431313160d81b60448201526064016104dd565b8486106111b15760405162461bcd60e51b815260206004820152600560248201526425a218989960d91b60448201526064016104dd565b8385106111e85760405162461bcd60e51b81526020600482015260056024820152644b4431313360d81b60448201526064016104dd565b6111f18861188c565b6111fc8886866116ed565b6040516303fb4aab60e41b815273__$a79fa16630ef50be54c6520a39abca49df$__90633fb4aab090611237908b9089908990600401612067565b60206040518083038186803b15801561124f57600080fd5b505af4158015611263573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611287919061208c565b905060006040518061016001604052808b6001600160a01b031681526020018a81526020018981526020016112b94290565b81526020018881526020018781526020018681526020018560048111156112e2576112e2611c81565b8152602081018590526000604080830182905260609092015251634a8f3f1960e01b815290915073__$388ad09e564d78c8f313b1396af8a4a6a6$__90634a8f3f1990611333908490600401611cb9565b60206040518083038186803b15801561134b57600080fd5b505af415801561135f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611383919061208c565b6101208201526000828152600160208181526040909220835181546001600160a01b0319166001600160a01b03909116178155828401518051859492936113cf93908501920190611902565b50604082015180516113eb916002840191602090910190611902565b50606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070160006101000a81548160ff0219169083600481111561143e5761143e611c81565b02179055506101008201516008820155610120820151600982015561014090910151600a909101805460ff1916911515919091179055604051600390611485908b90611f78565b9081526040516020918190038201902080546001810182556000918252919020018290556114b16116e3565b6001600160a01b0316637bab635a838b8b428c8c8c8c8c6040518a63ffffffff1660e01b81526004016114ec999897969594939291906120a5565b600060405180830381600087803b15801561150657600080fd5b505af115801561151a573d6000803e3d6000fd5b505050505098975050505050505050565b6001602081905260009182526040909120805491810180546001600160a01b039093169261155890611f3d565b80601f016020809104026020016040519081016040528092919081815260200182805461158490611f3d565b80156115d15780601f106115a6576101008083540402835291602001916115d1565b820191906000526020600020905b8154815290600101906020018083116115b457829003601f168201915b5050505050908060020180546115e690611f3d565b80601f016020809104026020016040519081016040528092919081815260200182805461161290611f3d565b801561165f5780601f106116345761010080835404028352916020019161165f565b820191906000526020600020905b81548152906001019060200180831161164257829003601f168201915b50505060038401546004850154600586015460068701546007880154600889015460098a0154600a909a015498999598949750929550909360ff918216939091168b565b600080546040516b22bb32b73a22b6b4ba3a32b960a11b60208201526001600160a01b0390911690638eaa6ac090602c01610333565b60006103b7610796565b60006103b76116a3565b60005b6003846040516117009190611f78565b9081526040519081900360200190205481101561188657600061175b60038660405161172c9190611f78565b9081526020016040518091039020838154811061174b5761174b611fd9565b9060005260206000200154611049565b905060006117a16003876040516117729190611f78565b9081526020016040518091039020848154811061179157611791611fd9565b90600052602060002001546103ed565b60405163465a269f60e11b81526004810187905260248101869052604481018490526064810182905290915073__$07208da1966d569b755f74076ac36b126b$__90638cb44d3e9060840160206040518083038186803b15801561180457600080fd5b505af4158015611818573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061183c9190612110565b156118715760405162461bcd60e51b815260206004820152600560248201526404b443131360dc1b60448201526064016104dd565b5050808061187e90611fef565b9150506116f0565b50505050565b60028160405161189c9190611f78565b9081526040519081900360200190205460ff166118c5576001600282604051610f219190611f78565b50565b5080546118d490611f3d565b6000825580601f106118e4575050565b601f0160209004906000526020600020908101906118c591906119fc565b82805461190e90611f3d565b90600052602060002090601f0160209004810192826119305760008555611976565b82601f1061194957805160ff1916838001178555611976565b82800160010185558215611976579182015b8281111561197657825182559160200191906001019061195b565b506119829291506119fc565b5090565b60405180610160016040528060006001600160a01b03168152602001606081526020016060815260200160008152602001600081526020016000815260200160008152602001600060048111156119df576119df611c81565b815260200160008152602001600081526020016000151581525090565b5b8082111561198257600081556001016119fd565b6001600160a01b0391909116815260200190565b600060208284031215611a3757600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b0381118282101715611a7657611a76611a3e565b60405290565b600082601f830112611a8d57600080fd5b81356001600160401b0380821115611aa757611aa7611a3e565b604051601f8301601f19908116603f01168101908282118183101715611acf57611acf611a3e565b81604052838152866020858801011115611ae857600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215611b1a57600080fd5b81356001600160401b03811115611b3057600080fd5b611b3c84828501611a7c565b949350505050565b6001600160a01b03811681146118c557600080fd5b600080600060608486031215611b6e57600080fd5b8335925060208401356001600160401b0380821115611b8c57600080fd5b611b9887838801611a7c565b93506040860135915080821115611bae57600080fd5b9085019060a08288031215611bc257600080fd5b611bca611a54565b823582811115611bd957600080fd5b611be589828601611a7c565b825250602083013560208201526040830135604082015260608301359150611c0c82611b44565b816060820152608083013560808201528093505050509250925092565b60005b83811015611c44578181015183820152602001611c2c565b838111156118865750506000910152565b60008151808452611c6d816020860160208601611c29565b601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b60058110611cb557634e487b7160e01b600052602160045260246000fd5b9052565b60208152611cd36020820183516001600160a01b03169052565b60006020830151610160806040850152611cf1610180850183611c55565b91506040850151601f19858403016060860152611d0e8382611c55565b92505060608501516080850152608085015160a085015260a085015160c085015260c085015160e085015260e0850151610100611d4d81870183611c97565b860151610120868101919091528601516101408087019190915290950151151593019290925250919050565b6020808252825182820181905260009190848201906040850190845b81811015611db157835183529284019291840191600101611d95565b50909695505050505050565b600080600080600080600080610100898b031215611dda57600080fd5b8835611de581611b44565b975060208901356001600160401b0380821115611e0157600080fd5b611e0d8c838d01611a7c565b985060408b0135915080821115611e2357600080fd5b50611e308b828c01611a7c565b965050606089013594506080890135935060a0890135925060c089013560058110611e5a57600080fd5b8092505060e089013590509295985092959890939650565b6001600160a01b038c16815261016060208201819052600090611e978382018e611c55565b90508281036040840152611eab818d611c55565b9150508960608301528860808301528760a08301528660c0830152611ed360e0830187611c97565b84610100830152836101208301528215156101408301529c9b505050505050505050505050565b600060208284031215611f0c57600080fd5b8151611f1781611b44565b9392505050565b6020808252600590820152644b4430313160d81b604082015260600190565b600181811c90821680611f5157607f821691505b60208210811415611f7257634e487b7160e01b600052602260045260246000fd5b50919050565b60008251611f8a818460208701611c29565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611fbd57611fbd611f94565b500190565b600082821015611fd457611fd4611f94565b500390565b634e487b7160e01b600052603260045260246000fd5b600060001982141561200357612003611f94565b5060010190565b86815260c06020820152600061202360c0830188611c55565b82810360408401526120358188611c55565b60608401969096525050608081019290925260a0909101529392505050565b602081526000611f176020830184611c55565b60608152600061207a6060830186611c55565b60208301949094525060400152919050565b60006020828403121561209e57600080fd5b5051919050565b60006101208b83528060208401526120bf8184018c611c55565b905082810360408401526120d3818b611c55565b9150508760608301528660808301528560a08301528460c08301526120fb60e0830185611c97565b826101008301529a9950505050505050505050565b60006020828403121561212257600080fd5b81518015158114611f1757600080fdfea2646970667358221220f8683f97de06356b58508a7c7a66bb95eba4960f414dc5cbed8d0a56b08c6bd964736f6c63430008090033",
  "libraries": {
    "Ad": "0x9F397D94EC32D43EeC60dCF9A38a44322D54d42A",
    "Schedule": "0x582aB363e3E34d563B537CD247E48e772EE6bb82",
    "Sale": "0xAa613b8D5DCb0071C52C336adb9F99154421039a"
  },
  "devdoc": {
    "author": "Shumpei Koike - <shumpei.koike@bridges.inc>",
    "kind": "dev",
    "methods": {
      "adPoolAddress()": {
        "details": "Gets the address of AdPool."
      },
      "englishAuctionAddress()": {
        "details": "Gets the address of EnglishAuction."
      },
      "eventEmitterAddress()": {
        "details": "Gets the address of EventEmitter."
      },
      "mediaFactoryAddress()": {
        "details": "Gets the address of MediaFactory."
      },
      "mediaRegistryAddress()": {
        "details": "Gets the address of MediaRegistry."
      },
      "nameRegistryAddress()": {
        "details": "Gets the address of NameRegistry"
      },
      "offerBidAddress()": {
        "details": "Gets the address of OfferBid."
      },
      "openBidAddress()": {
        "details": "Gets the address of OpenBid."
      },
      "owner()": {
        "details": "Gets the owner address."
      },
      "proposalReviewAddress()": {
        "details": "Gets the address of ProposalReview."
      },
      "tokenIdsOf(string)": {
        "details": "Returns tokenIds tied with the space metadata",
        "params": {
          "spaceMetadata": "string of the space metadata"
        }
      },
      "vaultAddress()": {
        "details": "Gets the address of Vault."
      }
    },
    "stateVariables": {
      "_periodKeys": {
        "details": "Maps the space metadata with tokenIds of ad periods."
      },
      "periods": {
        "details": "tokenId <- metadata * displayStartTimestamp * displayEndTimestamp"
      },
      "spaced": {
        "details": "Returns spaceId that is tied with space metadata."
      }
    },
    "title": "AdPool - stores all ads accorss every space.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2345,
        "contract": "contracts/peripheries/AdPool.sol:AdPool",
        "label": "_nameRegistry",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(INameRegistry)4466"
      },
      {
        "astId": 5189,
        "contract": "contracts/peripheries/AdPool.sol:AdPool",
        "label": "periods",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Period)4646_storage)"
      },
      {
        "astId": 5194,
        "contract": "contracts/peripheries/AdPool.sol:AdPool",
        "label": "spaced",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_bool)"
      },
      {
        "astId": 5200,
        "contract": "contracts/peripheries/AdPool.sol:AdPool",
        "label": "_periodKeys",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(INameRegistry)4466": {
        "encoding": "inplace",
        "label": "contract INameRegistry",
        "numberOfBytes": "20"
      },
      "t_enum(Pricing)4622": {
        "encoding": "inplace",
        "label": "enum Ad.Pricing",
        "numberOfBytes": "1"
      },
      "t_mapping(t_string_memory_ptr,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_string_memory_ptr,t_bool)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Period)4646_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Ad.Period)",
        "numberOfBytes": "32",
        "value": "t_struct(Period)4646_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Period)4646_storage": {
        "encoding": "inplace",
        "label": "struct Ad.Period",
        "members": [
          {
            "astId": 4624,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "mediaProxy",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 4626,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "spaceMetadata",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 4628,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "tokenMetadata",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 4630,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "saleStartTimestamp",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 4632,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "saleEndTimestamp",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 4634,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "displayStartTimestamp",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 4636,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "displayEndTimestamp",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 4639,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "pricing",
            "offset": 0,
            "slot": "7",
            "type": "t_enum(Pricing)4622"
          },
          {
            "astId": 4641,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "minPrice",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 4643,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "startPrice",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 4645,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "sold",
            "offset": 0,
            "slot": "10",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "352"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}