{
  "address": "0x6c5cE24157D9558A6E08b5d46F74766ed71502DC",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nameRegistry",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tokenMetadata",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "spaceMetadata",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "displayStartTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "displayEndTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct Sale.Offer",
          "name": "offer",
          "type": "tuple"
        }
      ],
      "name": "acceptOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "adPoolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "proxy",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "spaceMetadata",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenMetadata",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "saleEndTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "displayStartTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "displayEndTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "enum Ad.Pricing",
          "name": "pricing",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "minPrice",
          "type": "uint256"
        }
      ],
      "name": "addPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "metadata",
          "type": "string"
        }
      ],
      "name": "addSpace",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "allPeriods",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "mediaProxy",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "spaceMetadata",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "tokenMetadata",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "saleStartTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "saleEndTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "displayStartTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "displayEndTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "enum Ad.Pricing",
              "name": "pricing",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "minPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startPrice",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "sold",
              "type": "bool"
            }
          ],
          "internalType": "struct Ad.Period",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "deletePeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "displayEnd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "displayStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "englishAuctionAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eventEmitterAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mediaFactoryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mediaProxyOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mediaRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nameRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "offerBidAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openBidAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "periods",
      "outputs": [
        {
          "internalType": "address",
          "name": "mediaProxy",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "spaceMetadata",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenMetadata",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "saleStartTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "saleEndTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "displayStartTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "displayEndTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "enum Ad.Pricing",
          "name": "pricing",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "minPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startPrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "sold",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "sold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "spaced",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "spaceMetadata",
          "type": "string"
        }
      ],
      "name": "tokenIdsOf",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x71d01a02462de0eb3b14313276d434431da55bb3e0c193ef442f9aaa1e5164c0",
  "receipt": {
    "to": null,
    "from": "0xCdfc500F7f0FCe1278aECb0340b523cD55b3EBbb",
    "contractAddress": "0x6c5cE24157D9558A6E08b5d46F74766ed71502DC",
    "transactionIndex": 0,
    "gasUsed": "1865364",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x20be5ff482336bfb8578433d1f4c2f67bba21758b66c1d2a394e80469778a64c",
    "transactionHash": "0x71d01a02462de0eb3b14313276d434431da55bb3e0c193ef442f9aaa1e5164c0",
    "logs": [],
    "blockNumber": 9755548,
    "cumulativeGasUsed": "1865364",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x173E3862BaE7bD155a7a371Ee3b855de01aa63dd"
  ],
  "solcInputHash": "c223bd9c030b84fabf96ddb6a85aba33",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nameRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenMetadata\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"spaceMetadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"displayStartTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"displayEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Sale.Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"name\":\"acceptOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"spaceMetadata\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenMetadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"saleEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"displayStartTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"displayEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"enum Ad.Pricing\",\"name\":\"pricing\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"}],\"name\":\"addPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"name\":\"addSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"allPeriods\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"mediaProxy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"spaceMetadata\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenMetadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"saleStartTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"displayStartTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"displayEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"enum Ad.Pricing\",\"name\":\"pricing\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"}],\"internalType\":\"struct Ad.Period\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"deletePeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"displayEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"displayStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"englishAuctionAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eventEmitterAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mediaFactoryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mediaProxyOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mediaRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nameRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"offerBidAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openBidAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"periods\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"mediaProxy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"spaceMetadata\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenMetadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"saleStartTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"displayStartTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"displayEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"enum Ad.Pricing\",\"name\":\"pricing\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"sold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"spaced\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"spaceMetadata\",\"type\":\"string\"}],\"name\":\"tokenIdsOf\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Shumpei Koike - <shumpei.koike@bridges.inc>\",\"kind\":\"dev\",\"methods\":{\"adPoolAddress()\":{\"details\":\"Gets the address of AdPool.\"},\"englishAuctionAddress()\":{\"details\":\"Gets the address of EnglishAuction.\"},\"eventEmitterAddress()\":{\"details\":\"Gets the address of EventEmitter.\"},\"mediaFactoryAddress()\":{\"details\":\"Gets the address of MediaFactory.\"},\"mediaRegistryAddress()\":{\"details\":\"Gets the address of MediaRegistry.\"},\"nameRegistryAddress()\":{\"details\":\"Gets the address of NameRegistry\"},\"offerBidAddress()\":{\"details\":\"Gets the address of OfferBid.\"},\"openBidAddress()\":{\"details\":\"Gets the address of OpenBid.\"},\"owner()\":{\"details\":\"Gets the owner address.\"},\"tokenIdsOf(string)\":{\"details\":\"Returns tokenIds tied with the space metadata\",\"params\":{\"spaceMetadata\":\"string of the space metadata\"}},\"vaultAddress()\":{\"details\":\"Gets the address of Vault.\"}},\"stateVariables\":{\"_periodKeys\":{\"details\":\"Maps the space metadata with tokenIds of ad periods.\"},\"periods\":{\"details\":\"tokenId <- metadata * displayStartTimestamp * displayEndTimestamp\"},\"spaced\":{\"details\":\"Returns spaceId that is tied with space metadata.\"}},\"title\":\"AdPool - stores all ads accorss every space.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/peripheries/AdPool.sol\":\"AdPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/accessors/NameAccessor.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\nimport \\\"../interfaces/INameRegistry.sol\\\";\\n\\n/// @title NameAccessor - manages the endpoints.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ncontract NameAccessor {\\n\\tINameRegistry internal _nameRegistry;\\n\\n\\t/// @dev Sets the address of NameRegistry.\\n\\t/// @param nameRegistry address of the NameRegistry\\n\\tfunction initialize(address nameRegistry) internal {\\n\\t\\t_nameRegistry = INameRegistry(nameRegistry);\\n\\t}\\n\\n\\t/// @dev Prevents calling a function from anyone except the accepted contracts.\\n\\tmodifier onlyAllowedContract() {\\n\\t\\trequire(_nameRegistry.allowedContracts(msg.sender), \\\"KD013\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t/// @dev Throws if not called by MediaFactory.\\n\\tmodifier onlyFactory() {\\n\\t\\trequire(msg.sender == mediaFactoryAddress(), \\\"KD010\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t/// @dev Throws if called by any account other than the owner.\\n\\tmodifier onlyOwner() {\\n\\t\\trequire(owner() == msg.sender, \\\"KD012\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t/// @dev Gets the address of NameRegistry\\n\\tfunction nameRegistryAddress() public view returns (address) {\\n\\t\\treturn address(_nameRegistry);\\n\\t}\\n\\n\\t/// @dev Gets the address of AdPool.\\n\\tfunction adPoolAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"AdPool\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of MediaFactory.\\n\\tfunction mediaFactoryAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"MediaFactory\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of MediaRegistry.\\n\\tfunction mediaRegistryAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"MediaRegistry\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of Vault.\\n\\tfunction vaultAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"Vault\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of EventEmitter.\\n\\tfunction eventEmitterAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"EventEmitter\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of EnglishAuction.\\n\\tfunction englishAuctionAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"EnglishAuction\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of OpenBid.\\n\\tfunction openBidAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"OpenBid\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of OfferBid.\\n\\tfunction offerBidAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"OfferBid\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the owner address.\\n\\tfunction owner() public view returns (address) {\\n\\t\\treturn _nameRegistry.deployer();\\n\\t}\\n}\\n\",\"keccak256\":\"0x554bc36ca0974276664c094cab125837bde10ea06b2f3c28416679f9b5aa8804\",\"license\":\"UNLICENSED\"},\"contracts/common/BlockTimestamp.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\n/// @title BlockTimestamp - gets a block timestamp.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\nabstract contract BlockTimestamp {\\n\\t/// @dev Method that exists purely to be overridden for tests\\n\\tfunction _blockTimestamp() internal view virtual returns (uint256) {\\n\\t\\treturn block.timestamp;\\n\\t}\\n}\\n\",\"keccak256\":\"0x417bf100ecc94b19a01559e899f68e19777eae593c783d8280d13bcabc8e43a2\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IAdPool.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\nimport \\\"../libraries/Ad.sol\\\";\\nimport \\\"../libraries/Sale.sol\\\";\\n\\n/// @title IAdPool - stores all ads accorss every space.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IAdPool {\\n\\tfunction allPeriods(uint256 tokenId) external view returns (Ad.Period memory);\\n\\n\\tfunction spaced(string memory spaceMetadata) external view returns (bool);\\n\\n\\tfunction addSpace(string memory spaceMetadata) external;\\n\\n\\tfunction addPeriod(\\n\\t\\taddress proxy,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tuint256 saleEndTimestamp,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\tAd.Pricing pricing,\\n\\t\\tuint256 minPrice\\n\\t) external returns (uint256);\\n\\n\\tfunction deletePeriod(uint256 tokenId) external;\\n\\n\\tfunction sold(uint256 tokenId) external;\\n\\n\\tfunction acceptOffer(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tSale.Offer memory offer\\n\\t) external;\\n\\n\\tfunction mediaProxyOf(uint256 tokenId) external view returns (address);\\n\\n\\tfunction displayStart(uint256 tokenId) external view returns (uint256);\\n\\n\\tfunction displayEnd(uint256 tokenId) external view returns (uint256);\\n\\n\\tfunction tokenIdsOf(string memory spaceMetadata)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (uint256[] memory);\\n}\\n\",\"keccak256\":\"0x9db94679b25b0afc4b4b94048dd2d040fd466be2024d8849d9d1d6b667dd9b1f\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IEventEmitter.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\nimport \\\"../libraries/Ad.sol\\\";\\n\\n/// @title IEventEmitter - emits events.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IEventEmitter {\\n\\tfunction emitNewSpace(string memory metadata) external;\\n\\n\\tfunction emitNewPeriod(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tuint256 saleStartTimestamp,\\n\\t\\tuint256 saleEndTimestamp,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\tAd.Pricing pricing,\\n\\t\\tuint256 minPrice\\n\\t) external;\\n\\n\\tfunction emitDeletePeriod(uint256 tokenId) external;\\n\\n\\tfunction emitBuy(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 msgValue,\\n\\t\\taddress msgSender,\\n\\t\\tuint256 blockTimestamp\\n\\t) external;\\n\\n\\tfunction emitBid(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 msgValue,\\n\\t\\taddress msgSender,\\n\\t\\tuint256 blockTimestamp\\n\\t) external;\\n\\n\\tfunction emitBidWithProposal(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 msgValue,\\n\\t\\taddress msgSender,\\n\\t\\tstring memory metadata,\\n\\t\\tuint256 blockTimestamp\\n\\t) external;\\n\\n\\tfunction emitSelectProposal(uint256 tokenId, address successfulBidder)\\n\\t\\texternal;\\n\\n\\tfunction emitReceiveToken(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 price,\\n\\t\\taddress buyer,\\n\\t\\tuint256 blockTimestamp\\n\\t) external;\\n\\n\\tfunction emitOfferPeriod(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\taddress sender,\\n\\t\\tuint256 price\\n\\t) external;\\n\\n\\tfunction emitCancelOffer(uint256 tokenId) external;\\n\\n\\tfunction emitAcceptOffer(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\tuint256 price\\n\\t) external;\\n\\n\\tfunction emitWithdraw(uint256 amount) external;\\n\\n\\tfunction emitPropose(uint256 tokenId, string memory metadata) external;\\n\\n\\tfunction emitAcceptProposal(uint256 tokenId, string memory metadata) external;\\n\\n\\tfunction emitDenyProposal(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory metadata,\\n\\t\\tstring memory reason,\\n\\t\\tbool offensive\\n\\t) external;\\n\\n\\tfunction emitTransferCustom(\\n\\t\\taddress from,\\n\\t\\taddress to,\\n\\t\\tuint256 tokenId\\n\\t) external;\\n\\n\\tfunction emitNewMedia(\\n\\t\\taddress proxy,\\n\\t\\taddress mediaEOA,\\n\\t\\tstring memory applicationMetadata,\\n\\t\\tstring memory updatableMetadata,\\n\\t\\tuint256 saltNonce\\n\\t) external;\\n\\n\\tfunction emitUpdateMedia(\\n\\t\\taddress proxy,\\n\\t\\taddress mediaEOA,\\n\\t\\tstring memory accountMetadata\\n\\t) external;\\n\\n\\tfunction emitPaymentFailure(address receiver, uint256 price) external;\\n\\n\\tfunction emitReceived(address receiver, uint256 price) external;\\n}\\n\",\"keccak256\":\"0xb8824b144c059b4b6ce8f7453a5f68fd420481e29b18a4d0e5f35fa163bc4e8a\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IMediaRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\nimport \\\"../libraries/Ad.sol\\\";\\n\\n/// @title MediaRegistry - registers a list of media accounts.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IMediaRegistry {\\n\\tstruct Account {\\n\\t\\taddress proxy;\\n\\t\\taddress mediaEOA;\\n\\t\\tstring applicationMetadata;\\n\\t\\tstring updatableMetadata;\\n\\t}\\n\\n\\tfunction allAccounts(address proxy)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (\\n\\t\\t\\taddress,\\n\\t\\t\\taddress,\\n\\t\\t\\tstring memory,\\n\\t\\t\\tstring memory\\n\\t\\t);\\n\\n\\t/// @dev Adds media account.\\n\\t/// @param proxy address of the proxy contract\\n\\t/// @param applicationMetadata string of constant metadata for the defailts of the account\\n\\t/// @param updatableMetadata string of constant metadata for the defailts of the account\\n\\t/// @param mediaEOA address of the media account\\n\\tfunction addMedia(\\n\\t\\taddress proxy,\\n\\t\\tstring memory applicationMetadata,\\n\\t\\tstring memory updatableMetadata,\\n\\t\\taddress mediaEOA\\n\\t) external;\\n\\n\\t/// @dev Updates media account.\\n\\t/// @param metadata string of the account metadata\\n\\t/// @param mediaEOA address of the media account\\n\\tfunction updateMedia(address mediaEOA, string memory metadata) external;\\n\\n\\tfunction updateApplicationMetadata(address proxy, string memory metadata)\\n\\t\\texternal;\\n\\n\\t/// @dev Returns whether the account has created or not.\\n\\t/// @param proxy address of the proxy contract that represents an account.\\n\\tfunction created(address proxy) external view returns (bool);\\n\\n\\t/// @dev Returns the owner of the account.\\n\\t/// @param proxy address of the proxy contract that represents an account.\\n\\tfunction ownerOf(address proxy) external view returns (address);\\n}\\n\",\"keccak256\":\"0x63655aa8531480b3da0c4b3f6cd63d72c3ca678661fa52dd90e5ab1a89b43131\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/INameRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\n/// @title INameRegistry - saves a set of addresses used in the system.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface INameRegistry {\\n\\t/// @dev Sets the address associated with the key name.\\n\\t///      If the address is the contract, not an EOA, it is\\n\\t///      saved as the allowed contract list.\\n\\t/// @param key bytes32 of the key\\n\\t/// @param value address of the value\\n\\tfunction set(bytes32 key, address value) external;\\n\\n\\t/// @dev Gets the address associated with the key name.\\n\\t/// @param key bytes32 of the key\\n\\tfunction get(bytes32 key) external view returns (address);\\n\\n\\t/// @dev Returns whether or not the address is the one that we deployed.\\n\\t/// @param caller address of the msg.sender\\n\\tfunction allowedContracts(address caller) external returns (bool);\\n\\n\\t/// @dev Gets the deployer of NameRegistry.\\n\\tfunction deployer() external view returns (address);\\n}\\n\",\"keccak256\":\"0xb4612b34aa95a45ed84877f60adc23f5f8eb941a00a2644dc29ecea26c1c032f\",\"license\":\"UNLICENSED\"},\"contracts/libraries/Ad.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\nlibrary Ad {\\n\\tuint256 private constant _ID_LENGTH = 100000000000000000000000000000000;\\n\\t// 0.RRP     : Recommended Retail Price\\n\\t// 1.DUTCH   : Dutch Auction\\n\\t// 2.ENGLISH : English Acction\\n\\t// 3.OFFER   : Offered by Others\\n\\t// 4.OPEN    : Open Bid by revealing the content\\n\\tenum Pricing {\\n\\t\\tRRP,\\n\\t\\tDUTCH,\\n\\t\\tENGLISH,\\n\\t\\tOFFER,\\n\\t\\tOPEN\\n\\t}\\n\\tstruct Period {\\n\\t\\taddress mediaProxy;\\n\\t\\tstring spaceMetadata;\\n\\t\\tstring tokenMetadata;\\n\\t\\tuint256 saleStartTimestamp;\\n\\t\\tuint256 saleEndTimestamp;\\n\\t\\tuint256 displayStartTimestamp;\\n\\t\\tuint256 displayEndTimestamp;\\n\\t\\tPricing pricing;\\n\\t\\tuint256 minPrice;\\n\\t\\tuint256 startPrice;\\n\\t\\tbool sold;\\n\\t}\\n\\n\\tfunction id(\\n\\t\\tstring memory metadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp\\n\\t) public pure returns (uint256) {\\n\\t\\treturn\\n\\t\\t\\tuint256(\\n\\t\\t\\t\\tkeccak256(\\n\\t\\t\\t\\t\\tabi.encodePacked(metadata, displayStartTimestamp, displayEndTimestamp)\\n\\t\\t\\t\\t)\\n\\t\\t\\t) % _ID_LENGTH;\\n\\t}\\n}\\n\",\"keccak256\":\"0x98b8f7d36adbd4e0b75ef9c5a0ec7045e0661b9015a90beffa30004f35ff7039\",\"license\":\"UNLICENSED\"},\"contracts/libraries/Sale.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\nimport \\\"./Ad.sol\\\";\\n\\nlibrary Sale {\\n\\tstruct Bidding {\\n\\t\\tuint256 tokenId;\\n\\t\\taddress bidder;\\n\\t\\tuint256 price;\\n\\t}\\n\\tstruct Offer {\\n\\t\\tstring spaceMetadata;\\n\\t\\tuint256 displayStartTimestamp;\\n\\t\\tuint256 displayEndTimestamp;\\n\\t\\taddress sender;\\n\\t\\tuint256 price;\\n\\t}\\n\\tstruct OpenBid {\\n\\t\\tuint256 tokenId;\\n\\t\\taddress sender;\\n\\t\\tuint256 price;\\n\\t\\tstring content;\\n\\t}\\n\\n\\tfunction startPrice(Ad.Period memory period) internal pure returns (uint256) {\\n\\t\\tif (period.pricing == Ad.Pricing.RRP) {\\n\\t\\t\\treturn period.minPrice;\\n\\t\\t} else if (period.pricing == Ad.Pricing.DUTCH) {\\n\\t\\t\\treturn period.minPrice * 10;\\n\\t\\t} else if (period.pricing == Ad.Pricing.ENGLISH) {\\n\\t\\t\\treturn period.minPrice;\\n\\t\\t} else if (period.pricing == Ad.Pricing.OFFER) {\\n\\t\\t\\treturn period.minPrice;\\n\\t\\t} else if (period.pricing == Ad.Pricing.OPEN) {\\n\\t\\t\\treturn period.minPrice;\\n\\t\\t} else {\\n\\t\\t\\treturn 0;\\n\\t\\t}\\n\\t}\\n}\\n\",\"keccak256\":\"0xca0cdc93d02c3a99fecd2c6166f58afd44a84fd03e0821737f2a36181706fc08\",\"license\":\"UNLICENSED\"},\"contracts/libraries/Schedule.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\nlibrary Schedule {\\n\\tfunction _isOverlapped(\\n\\t\\tuint256 newFromTimestamp,\\n\\t\\tuint256 newToTimestamp,\\n\\t\\tuint256 currentFromTimestamp,\\n\\t\\tuint256 currentToTimestamp\\n\\t) internal pure returns (bool) {\\n\\t\\treturn\\n\\t\\t\\t!(_isPast(newToTimestamp, currentFromTimestamp) ||\\n\\t\\t\\t\\t_isFuture(newFromTimestamp, currentToTimestamp));\\n\\t}\\n\\n\\tfunction _isPast(uint256 newToTimestamp, uint256 currentFromTimestamp)\\n\\t\\tinternal\\n\\t\\tpure\\n\\t\\treturns (bool)\\n\\t{\\n\\t\\treturn newToTimestamp < currentFromTimestamp;\\n\\t}\\n\\n\\tfunction _isFuture(uint256 newFromTimestamp, uint256 currentToTimestamp)\\n\\t\\tinternal\\n\\t\\tpure\\n\\t\\treturns (bool)\\n\\t{\\n\\t\\treturn currentToTimestamp < newFromTimestamp;\\n\\t}\\n}\\n\",\"keccak256\":\"0x0073afdac9f47643e4a0db2b3600f5274dfc1e8c511ca20e44965c7ce67ec881\",\"license\":\"UNLICENSED\"},\"contracts/peripheries/AdPool.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\nimport \\\"../accessors/NameAccessor.sol\\\";\\nimport \\\"../common/BlockTimestamp.sol\\\";\\nimport \\\"../interfaces/IAdPool.sol\\\";\\nimport \\\"../interfaces/IMediaRegistry.sol\\\";\\nimport \\\"../interfaces/IEventEmitter.sol\\\";\\nimport \\\"../libraries/Schedule.sol\\\";\\n\\n/// @title AdPool - stores all ads accorss every space.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ncontract AdPool is IAdPool, BlockTimestamp, NameAccessor {\\n\\t/// @dev tokenId <- metadata * displayStartTimestamp * displayEndTimestamp\\n\\tmapping(uint256 => Ad.Period) public periods;\\n\\t/// @dev Returns spaceId that is tied with space metadata.\\n\\tmapping(string => bool) public spaced;\\n\\n\\t/// @dev Maps the space metadata with tokenIds of ad periods.\\n\\tmapping(string => uint256[]) internal _periodKeys;\\n\\n\\tmodifier onlyProxies() {\\n\\t\\trequire(_mediaRegistry().ownerOf(msg.sender) != address(0x0), \\\"KD011\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\tconstructor(address _nameRegistry) {\\n\\t\\tinitialize(_nameRegistry);\\n\\t}\\n\\n\\t/// @inheritdoc IAdPool\\n\\tfunction addSpace(string memory metadata) external onlyProxies {\\n\\t\\trequire(!spaced[metadata], \\\"KD100\\\");\\n\\t\\tspaced[metadata] = true;\\n\\t\\t_eventEmitter().emitNewSpace(metadata);\\n\\t}\\n\\n\\t/// @inheritdoc IAdPool\\n\\tfunction addPeriod(\\n\\t\\taddress proxy,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tuint256 saleEndTimestamp,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\tAd.Pricing pricing,\\n\\t\\tuint256 minPrice\\n\\t) external onlyProxies returns (uint256 tokenId) {\\n\\t\\trequire(saleEndTimestamp > _blockTimestamp(), \\\"KD111\\\");\\n\\t\\trequire(saleEndTimestamp < displayStartTimestamp, \\\"KD112\\\");\\n\\t\\trequire(displayStartTimestamp < displayEndTimestamp, \\\"KD113\\\");\\n\\n\\t\\t_addSpaceIfNot(spaceMetadata);\\n\\t\\t_checkOverlapping(\\n\\t\\t\\tspaceMetadata,\\n\\t\\t\\tdisplayStartTimestamp,\\n\\t\\t\\tdisplayEndTimestamp\\n\\t\\t);\\n\\t\\ttokenId = Ad.id(spaceMetadata, displayStartTimestamp, displayEndTimestamp);\\n\\t\\tAd.Period memory period = Ad.Period(\\n\\t\\t\\tproxy,\\n\\t\\t\\tspaceMetadata,\\n\\t\\t\\ttokenMetadata,\\n\\t\\t\\t_blockTimestamp(),\\n\\t\\t\\tsaleEndTimestamp,\\n\\t\\t\\tdisplayStartTimestamp,\\n\\t\\t\\tdisplayEndTimestamp,\\n\\t\\t\\tpricing,\\n\\t\\t\\tminPrice,\\n\\t\\t\\t0,\\n\\t\\t\\tfalse\\n\\t\\t);\\n\\t\\tperiod.startPrice = Sale.startPrice(period);\\n\\t\\tperiods[tokenId] = period;\\n\\t\\t_periodKeys[spaceMetadata].push(tokenId);\\n\\t\\t_eventEmitter().emitNewPeriod(\\n\\t\\t\\ttokenId,\\n\\t\\t\\tspaceMetadata,\\n\\t\\t\\ttokenMetadata,\\n\\t\\t\\t_blockTimestamp(),\\n\\t\\t\\tsaleEndTimestamp,\\n\\t\\t\\tdisplayStartTimestamp,\\n\\t\\t\\tdisplayEndTimestamp,\\n\\t\\t\\tpricing,\\n\\t\\t\\tminPrice\\n\\t\\t);\\n\\t}\\n\\n\\t/// @inheritdoc IAdPool\\n\\tfunction deletePeriod(uint256 tokenId) external onlyProxies {\\n\\t\\tstring memory spaceMetadata = periods[tokenId].spaceMetadata;\\n\\t\\tuint256 index = 0;\\n\\t\\tfor (uint256 i = 1; i < _periodKeys[spaceMetadata].length + 1; i++) {\\n\\t\\t\\tif (_periodKeys[spaceMetadata][i - 1] == tokenId) {\\n\\t\\t\\t\\tindex = i;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\trequire(index != 0, \\\"No deletable keys\\\");\\n\\t\\tdelete _periodKeys[spaceMetadata][index - 1];\\n\\t\\tdelete periods[tokenId];\\n\\t\\t_eventEmitter().emitDeletePeriod(tokenId);\\n\\t}\\n\\n\\tfunction acceptOffer(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tSale.Offer memory offer\\n\\t) external {\\n\\t\\t_checkOverlapping(\\n\\t\\t\\toffer.spaceMetadata,\\n\\t\\t\\toffer.displayStartTimestamp,\\n\\t\\t\\toffer.displayEndTimestamp\\n\\t\\t);\\n\\t\\tAd.Period memory period = Ad.Period(\\n\\t\\t\\toffer.sender,\\n\\t\\t\\toffer.spaceMetadata,\\n\\t\\t\\ttokenMetadata,\\n\\t\\t\\t_blockTimestamp(),\\n\\t\\t\\t_blockTimestamp(),\\n\\t\\t\\toffer.displayStartTimestamp,\\n\\t\\t\\toffer.displayEndTimestamp,\\n\\t\\t\\tAd.Pricing.OFFER,\\n\\t\\t\\toffer.price,\\n\\t\\t\\toffer.price,\\n\\t\\t\\ttrue\\n\\t\\t);\\n\\t\\tperiods[tokenId] = period;\\n\\t\\t_periodKeys[offer.spaceMetadata].push(tokenId);\\n\\t\\t_eventEmitter().emitAcceptOffer(\\n\\t\\t\\ttokenId,\\n\\t\\t\\toffer.spaceMetadata,\\n\\t\\t\\ttokenMetadata,\\n\\t\\t\\toffer.displayStartTimestamp,\\n\\t\\t\\toffer.displayEndTimestamp,\\n\\t\\t\\toffer.price\\n\\t\\t);\\n\\t}\\n\\n\\tfunction sold(uint256 tokenId) external onlyProxies {\\n\\t\\tperiods[tokenId].sold = true;\\n\\t}\\n\\n\\tfunction allPeriods(uint256 tokenId)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (Ad.Period memory)\\n\\t{\\n\\t\\treturn periods[tokenId];\\n\\t}\\n\\n\\t/// @inheritdoc IAdPool\\n\\tfunction mediaProxyOf(uint256 tokenId) external view returns (address) {\\n\\t\\treturn periods[tokenId].mediaProxy;\\n\\t}\\n\\n\\tfunction displayStart(uint256 tokenId) public view returns (uint256) {\\n\\t\\treturn periods[tokenId].displayStartTimestamp;\\n\\t}\\n\\n\\tfunction displayEnd(uint256 tokenId) public view returns (uint256) {\\n\\t\\treturn periods[tokenId].displayEndTimestamp;\\n\\t}\\n\\n\\t/// @dev Returns tokenIds tied with the space metadata\\n\\t/// @param spaceMetadata string of the space metadata\\n\\tfunction tokenIdsOf(string memory spaceMetadata)\\n\\t\\tpublic\\n\\t\\tview\\n\\t\\tvirtual\\n\\t\\treturns (uint256[] memory)\\n\\t{\\n\\t\\treturn _periodKeys[spaceMetadata];\\n\\t}\\n\\n\\tfunction _checkOverlapping(\\n\\t\\tstring memory metadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp\\n\\t) internal view virtual {\\n\\t\\tfor (uint256 i = 0; i < _periodKeys[metadata].length; i++) {\\n\\t\\t\\t// Ad.Period memory existing = _adPool().allPeriods(\\n\\t\\t\\t// \\t_periodKeys[metadata][i]\\n\\t\\t\\t// );\\n\\t\\t\\tuint256 existDisplayStart = displayStart(_periodKeys[metadata][i]);\\n\\t\\t\\tuint256 existDisplayEnd = displayEnd(_periodKeys[metadata][i]);\\n\\n\\t\\t\\tif (\\n\\t\\t\\t\\tSchedule._isOverlapped(\\n\\t\\t\\t\\t\\tdisplayStartTimestamp,\\n\\t\\t\\t\\t\\tdisplayEndTimestamp,\\n\\t\\t\\t\\t\\texistDisplayStart,\\n\\t\\t\\t\\t\\texistDisplayEnd\\n\\t\\t\\t\\t)\\n\\t\\t\\t) {\\n\\t\\t\\t\\trevert(\\\"KD110\\\");\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tfunction _addSpaceIfNot(string memory metadata) internal {\\n\\t\\tif (!spaced[metadata]) {\\n\\t\\t\\tspaced[metadata] = true;\\n\\t\\t\\t_eventEmitter().emitNewSpace(metadata);\\n\\t\\t}\\n\\t}\\n\\n\\t/**\\n\\t * Accessors\\n\\t */\\n\\tfunction _mediaRegistry() internal view returns (IMediaRegistry) {\\n\\t\\treturn IMediaRegistry(mediaRegistryAddress());\\n\\t}\\n\\n\\tfunction _eventEmitter() internal view virtual returns (IEventEmitter) {\\n\\t\\treturn IEventEmitter(eventEmitterAddress());\\n\\t}\\n}\\n\",\"keccak256\":\"0x4acdd4a1ea4ca44670c74e552f37b3dd6ca0f8c52c9e1312f2a21e9d72f062f7\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101125760003560e01c80630106d8eb1461011757806310335241146101355780632231c1eb1461015e57806327b7a2f5146101665780632874d8f314610177578063430bf08a146101985780634b455a51146101a057806365045a65146101b55780636a58767e146101f35780637cf175fb146101fb5780638da5cb5b146102035780638f6059d61461020b5780639c03facb14610213578063a9ad60f314610226578063b3a0ebc914610239578063b8926f2c14610259578063c9cd71b51461026c578063d028bd6614610274578063d3c1277e14610294578063e6851b98146102a7578063ea4a1104146102ba578063f0726291146102e4575b600080fd5b61011f6102ec565b60405161012c9190611903565b60405180910390f35b61011f610143366004611917565b6000908152600160205260409020546001600160a01b031690565b61011f6103a9565b6000546001600160a01b031661011f565b61018a610185366004611917565b6103da565b60405190815260200161012c565b61011f6103ef565b6101b36101ae366004611917565b61041e565b005b6101e36101c33660046119fa565b805160208183018101805160028252928201919093012091525460ff1681565b604051901515815260200161012c565b61011f610783565b61011f6107ba565b61011f6107ec565b61011f61083b565b6101b3610221366004611917565b610871565b6101b3610234366004611a4b565b61093e565b61024c610247366004611917565b610b71565b60405161012c9190611bab565b6101b36102673660046119fa565b610d4c565b61011f610eea565b6102876102823660046119fa565b610f1a565b60405161012c9190611c6b565b61018a6102a2366004611917565b610f8a565b61018a6102b5366004611caf565b610f9f565b6102cd6102c8366004611917565b6113b7565b60405161012c9b9a99989796959493929190611d64565b61011f61152f565b600080546040516d22b733b634b9b420bab1ba34b7b760911b60208201526001600160a01b0390911690638eaa6ac090602e015b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161035491815260200190565b60206040518083038186803b15801561036c57600080fd5b505afa158015610380573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a49190611dec565b905090565b600080546040516613dc195b909a5960ca1b60208201526001600160a01b0390911690638eaa6ac090602701610320565b60009081526001602052604090206006015490565b600080546040516415985d5b1d60da1b60208201526001600160a01b0390911690638eaa6ac090602501610320565b6000610428611565565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b81526004016104539190611903565b60206040518083038186803b15801561046b57600080fd5b505afa15801561047f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a39190611dec565b6001600160a01b031614156104d35760405162461bcd60e51b81526004016104ca90611e10565b60405180910390fd5b600081815260016020819052604082200180546104ef90611e2f565b80601f016020809104026020016040519081016040528092919081815260200182805461051b90611e2f565b80156105685780601f1061053d57610100808354040283529160200191610568565b820191906000526020600020905b81548152906001019060200180831161054b57829003601f168201915b50505050509050600080600190505b6003836040516105879190611e6a565b908152604051908190036020019020546105a2906001611e9c565b81101561060b57836003846040516105ba9190611e6a565b9081526040519081900360200190206105d4600184611eb4565b815481106105e4576105e4611ecb565b906000526020600020015414156105f9578091505b8061060381611ee1565b915050610577565b508061064d5760405162461bcd60e51b81526020600482015260116024820152704e6f2064656c657461626c65206b65797360781b60448201526064016104ca565b60038260405161065d9190611e6a565b908152604051908190036020019020610677600183611eb4565b8154811061068757610687611ecb565b600091825260208083209091018290558482526001908190526040822080546001600160a01b031916815591906106c0908301826117ba565b6106ce6002830160006117ba565b5060006003820181905560048201819055600582018190556006820181905560078201805460ff19908116909155600883018290556009830191909155600a9091018054909116905561071f61156f565b6001600160a01b031663ccb55a98846040518263ffffffff1660e01b815260040161074c91815260200190565b600060405180830381600087803b15801561076657600080fd5b505af115801561077a573d6000803e3d6000fd5b50505050505050565b600080546040516c4d65646961526567697374727960981b60208201526001600160a01b0390911690638eaa6ac090602d01610320565b600080546040516713d999995c909a5960c21b60208201526001600160a01b0390911690638eaa6ac090602801610320565b60008060009054906101000a90046001600160a01b03166001600160a01b031663d5f394886040518163ffffffff1660e01b815260040160206040518083038186803b15801561036c57600080fd5b600080546040516b4d65646961466163746f727960a01b60208201526001600160a01b0390911690638eaa6ac090602c01610320565b600061087b611565565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b81526004016108a69190611903565b60206040518083038186803b1580156108be57600080fd5b505afa1580156108d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f69190611dec565b6001600160a01b0316141561091d5760405162461bcd60e51b81526004016104ca90611e10565b6000908152600160208190526040909120600a01805460ff19169091179055565b610955816000015182602001518360400151611579565b600060405180610160016040528083606001516001600160a01b031681526020018360000151815260200184815260200161098d4290565b815260200142815260208481015181830152604080860151818401526003606084015260808087018051918501919091525160a0840152600160c0909301839052600088815283835220835181546001600160a01b039091166001600160a01b031990911617815583820151805194955085949193610a1293908501929101906117f4565b5060408201518051610a2e9160028401916020909101906117f4565b50606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070160006101000a81548160ff02191690836004811115610a8157610a81611b73565b02179055506101008201516008820155610120820151600982015561014090910151600a909101805460ff19169115159190911790558151604051600391610ac891611e6a565b908152604051602091819003820190208054600181018255600091825291902001849055610af461156f565b6001600160a01b0316630ca82afb858460000151868660200151876040015188608001516040518763ffffffff1660e01b8152600401610b3996959493929190611efc565b600060405180830381600087803b158015610b5357600080fd5b505af1158015610b67573d6000803e3d6000fd5b5050505050505050565b610b79611878565b6000828152600160208181526040928390208351610160810190945280546001600160a01b03168452918201805491840191610bb490611e2f565b80601f0160208091040260200160405190810160405280929190818152602001828054610be090611e2f565b8015610c2d5780601f10610c0257610100808354040283529160200191610c2d565b820191906000526020600020905b815481529060010190602001808311610c1057829003601f168201915b50505050508152602001600282018054610c4690611e2f565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7290611e2f565b8015610cbf5780601f10610c9457610100808354040283529160200191610cbf565b820191906000526020600020905b815481529060010190602001808311610ca257829003601f168201915b50505091835250506003820154602082015260048083015460408301526005830154606083015260068301546080830152600783015460a09092019160ff1690811115610d0e57610d0e611b73565b6004811115610d1f57610d1f611b73565b81526008820154602082015260098201546040820152600a9091015460ff16151560609091015292915050565b6000610d56611565565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b8152600401610d819190611903565b60206040518083038186803b158015610d9957600080fd5b505afa158015610dad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd19190611dec565b6001600160a01b03161415610df85760405162461bcd60e51b81526004016104ca90611e10565b600281604051610e089190611e6a565b9081526040519081900360200190205460ff1615610e505760405162461bcd60e51b815260206004820152600560248201526404b443130360dc1b60448201526064016104ca565b6001600282604051610e629190611e6a565b908152604051908190036020019020805491151560ff19909216919091179055610e8a61156f565b6001600160a01b03166378689c64826040518263ffffffff1660e01b8152600401610eb59190611f46565b600060405180830381600087803b158015610ecf57600080fd5b505af1158015610ee3573d6000803e3d6000fd5b5050505050565b60008054604051651059141bdbdb60d21b60208201526001600160a01b0390911690638eaa6ac090602601610320565b6060600382604051610f2c9190611e6a565b9081526040805191829003602090810183208054808302850183019093528284529190830182828015610f7e57602002820191906000526020600020905b815481526020019060010190808311610f6a575b50505050509050919050565b60009081526001602052604090206005015490565b600080610faa611565565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b8152600401610fd59190611903565b60206040518083038186803b158015610fed57600080fd5b505afa158015611001573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110259190611dec565b6001600160a01b0316141561104c5760405162461bcd60e51b81526004016104ca90611e10565b4286116110835760405162461bcd60e51b81526020600482015260056024820152644b4431313160d81b60448201526064016104ca565b8486106110ba5760405162461bcd60e51b815260206004820152600560248201526425a218989960d91b60448201526064016104ca565b8385106110f15760405162461bcd60e51b81526020600482015260056024820152644b4431313360d81b60448201526064016104ca565b6110fa8861168b565b611105888686611579565b6040516303fb4aab60e41b815273__$a79fa16630ef50be54c6520a39abca49df$__90633fb4aab090611140908b9089908990600401611f59565b60206040518083038186803b15801561115857600080fd5b505af415801561116c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111909190611f7e565b905060006040518061016001604052808b6001600160a01b031681526020018a81526020018981526020016111c24290565b81526020018881526020018781526020018681526020018560048111156111eb576111eb611b73565b81526020018481526020016000815260200160001515815250905061120f816116c7565b6101208201526000828152600160208181526040909220835181546001600160a01b0319166001600160a01b039091161781558284015180518594929361125b939085019201906117f4565b50604082015180516112779160028401916020909101906117f4565b50606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070160006101000a81548160ff021916908360048111156112ca576112ca611b73565b02179055506101008201516008820155610120820151600982015561014090910151600a909101805460ff1916911515919091179055604051600390611311908b90611e6a565b90815260405160209181900382019020805460018101825560009182529190200182905561133d61156f565b6001600160a01b0316637bab635a838b8b428c8c8c8c8c6040518a63ffffffff1660e01b815260040161137899989796959493929190611f97565b600060405180830381600087803b15801561139257600080fd5b505af11580156113a6573d6000803e3d6000fd5b505050505098975050505050505050565b6001602081905260009182526040909120805491810180546001600160a01b03909316926113e490611e2f565b80601f016020809104026020016040519081016040528092919081815260200182805461141090611e2f565b801561145d5780601f106114325761010080835404028352916020019161145d565b820191906000526020600020905b81548152906001019060200180831161144057829003601f168201915b50505050509080600201805461147290611e2f565b80601f016020809104026020016040519081016040528092919081815260200182805461149e90611e2f565b80156114eb5780601f106114c0576101008083540402835291602001916114eb565b820191906000526020600020905b8154815290600101906020018083116114ce57829003601f168201915b50505060038401546004850154600586015460068701546007880154600889015460098a0154600a909a015498999598949750929550909360ff918216939091168b565b600080546040516b22bb32b73a22b6b4ba3a32b960a11b60208201526001600160a01b0390911690638eaa6ac090602c01610320565b60006103a4610783565b60006103a461152f565b60005b60038460405161158c9190611e6a565b908152604051908190036020019020548110156116855760006115e76003866040516115b89190611e6a565b908152602001604051809103902083815481106115d7576115d7611ecb565b9060005260206000200154610f8a565b9050600061162d6003876040516115fe9190611e6a565b9081526020016040518091039020848154811061161d5761161d611ecb565b90600052602060002001546103da565b905061163b858584846117a1565b156116705760405162461bcd60e51b815260206004820152600560248201526404b443131360dc1b60448201526064016104ca565b5050808061167d90611ee1565b91505061157c565b50505050565b60028160405161169b9190611e6a565b9081526040519081900360200190205460ff166116c4576001600282604051610e629190611e6a565b50565b6000808260e0015160048111156116e0576116e0611b73565b14156116ef5750610100015190565b60018260e00151600481111561170757611707611b73565b14156117245761010082015161171e90600a612002565b92915050565b60028260e00151600481111561173c5761173c611b73565b141561174b5750610100015190565b60038260e00151600481111561176357611763611b73565b14156117725750610100015190565b60048260e00151600481111561178a5761178a611b73565b14156117995750610100015190565b506000919050565b6000838311806117b057508482105b1595945050505050565b5080546117c690611e2f565b6000825580601f106117d6575050565b601f0160209004906000526020600020908101906116c491906118ee565b82805461180090611e2f565b90600052602060002090601f0160209004810192826118225760008555611868565b82601f1061183b57805160ff1916838001178555611868565b82800160010185558215611868579182015b8281111561186857825182559160200191906001019061184d565b506118749291506118ee565b5090565b60405180610160016040528060006001600160a01b03168152602001606081526020016060815260200160008152602001600081526020016000815260200160008152602001600060048111156118d1576118d1611b73565b815260200160008152602001600081526020016000151581525090565b5b8082111561187457600081556001016118ef565b6001600160a01b0391909116815260200190565b60006020828403121561192957600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b038111828210171561196857611968611930565b60405290565b600082601f83011261197f57600080fd5b81356001600160401b038082111561199957611999611930565b604051601f8301601f19908116603f011681019082821181831017156119c1576119c1611930565b816040528381528660208588010111156119da57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215611a0c57600080fd5b81356001600160401b03811115611a2257600080fd5b611a2e8482850161196e565b949350505050565b6001600160a01b03811681146116c457600080fd5b600080600060608486031215611a6057600080fd5b8335925060208401356001600160401b0380821115611a7e57600080fd5b611a8a8783880161196e565b93506040860135915080821115611aa057600080fd5b9085019060a08288031215611ab457600080fd5b611abc611946565b823582811115611acb57600080fd5b611ad78982860161196e565b825250602083013560208201526040830135604082015260608301359150611afe82611a36565b816060820152608083013560808201528093505050509250925092565b60005b83811015611b36578181015183820152602001611b1e565b838111156116855750506000910152565b60008151808452611b5f816020860160208601611b1b565b601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b60058110611ba757634e487b7160e01b600052602160045260246000fd5b9052565b60208152611bc56020820183516001600160a01b03169052565b60006020830151610160806040850152611be3610180850183611b47565b91506040850151601f19858403016060860152611c008382611b47565b92505060608501516080850152608085015160a085015260a085015160c085015260c085015160e085015260e0850151610100611c3f81870183611b89565b860151610120868101919091528601516101408087019190915290950151151593019290925250919050565b6020808252825182820181905260009190848201906040850190845b81811015611ca357835183529284019291840191600101611c87565b50909695505050505050565b600080600080600080600080610100898b031215611ccc57600080fd5b8835611cd781611a36565b975060208901356001600160401b0380821115611cf357600080fd5b611cff8c838d0161196e565b985060408b0135915080821115611d1557600080fd5b50611d228b828c0161196e565b965050606089013594506080890135935060a0890135925060c089013560058110611d4c57600080fd5b8092505060e089013590509295985092959890939650565b6001600160a01b038c16815261016060208201819052600090611d898382018e611b47565b90508281036040840152611d9d818d611b47565b9150508960608301528860808301528760a08301528660c0830152611dc560e0830187611b89565b84610100830152836101208301528215156101408301529c9b505050505050505050505050565b600060208284031215611dfe57600080fd5b8151611e0981611a36565b9392505050565b6020808252600590820152644b4430313160d81b604082015260600190565b600181811c90821680611e4357607f821691505b60208210811415611e6457634e487b7160e01b600052602260045260246000fd5b50919050565b60008251611e7c818460208701611b1b565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611eaf57611eaf611e86565b500190565b600082821015611ec657611ec6611e86565b500390565b634e487b7160e01b600052603260045260246000fd5b6000600019821415611ef557611ef5611e86565b5060010190565b86815260c060208201526000611f1560c0830188611b47565b8281036040840152611f278188611b47565b60608401969096525050608081019290925260a0909101529392505050565b602081526000611e096020830184611b47565b606081526000611f6c6060830186611b47565b60208301949094525060400152919050565b600060208284031215611f9057600080fd5b5051919050565b60006101208b8352806020840152611fb18184018c611b47565b90508281036040840152611fc5818b611b47565b9150508760608301528660808301528560a08301528460c0830152611fed60e0830185611b89565b826101008301529a9950505050505050505050565b600081600019048311821515161561201c5761201c611e86565b50029056fea26469706673582212209d0361a8918adfd5a660d8014b6d049db754a3ddcd5d0dc866ce8446d378de4a64736f6c63430008090033",
  "libraries": {
    "Ad": "0x9F397D94EC32D43EeC60dCF9A38a44322D54d42A"
  },
  "devdoc": {
    "author": "Shumpei Koike - <shumpei.koike@bridges.inc>",
    "kind": "dev",
    "methods": {
      "adPoolAddress()": {
        "details": "Gets the address of AdPool."
      },
      "englishAuctionAddress()": {
        "details": "Gets the address of EnglishAuction."
      },
      "eventEmitterAddress()": {
        "details": "Gets the address of EventEmitter."
      },
      "mediaFactoryAddress()": {
        "details": "Gets the address of MediaFactory."
      },
      "mediaRegistryAddress()": {
        "details": "Gets the address of MediaRegistry."
      },
      "nameRegistryAddress()": {
        "details": "Gets the address of NameRegistry"
      },
      "offerBidAddress()": {
        "details": "Gets the address of OfferBid."
      },
      "openBidAddress()": {
        "details": "Gets the address of OpenBid."
      },
      "owner()": {
        "details": "Gets the owner address."
      },
      "tokenIdsOf(string)": {
        "details": "Returns tokenIds tied with the space metadata",
        "params": {
          "spaceMetadata": "string of the space metadata"
        }
      },
      "vaultAddress()": {
        "details": "Gets the address of Vault."
      }
    },
    "stateVariables": {
      "_periodKeys": {
        "details": "Maps the space metadata with tokenIds of ad periods."
      },
      "periods": {
        "details": "tokenId <- metadata * displayStartTimestamp * displayEndTimestamp"
      },
      "spaced": {
        "details": "Returns spaceId that is tied with space metadata."
      }
    },
    "title": "AdPool - stores all ads accorss every space.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2131,
        "contract": "contracts/peripheries/AdPool.sol:AdPool",
        "label": "_nameRegistry",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(INameRegistry)4553"
      },
      {
        "astId": 5237,
        "contract": "contracts/peripheries/AdPool.sol:AdPool",
        "label": "periods",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Period)4685_storage)"
      },
      {
        "astId": 5242,
        "contract": "contracts/peripheries/AdPool.sol:AdPool",
        "label": "spaced",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_bool)"
      },
      {
        "astId": 5248,
        "contract": "contracts/peripheries/AdPool.sol:AdPool",
        "label": "_periodKeys",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(INameRegistry)4553": {
        "encoding": "inplace",
        "label": "contract INameRegistry",
        "numberOfBytes": "20"
      },
      "t_enum(Pricing)4661": {
        "encoding": "inplace",
        "label": "enum Ad.Pricing",
        "numberOfBytes": "1"
      },
      "t_mapping(t_string_memory_ptr,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_string_memory_ptr,t_bool)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Period)4685_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Ad.Period)",
        "numberOfBytes": "32",
        "value": "t_struct(Period)4685_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Period)4685_storage": {
        "encoding": "inplace",
        "label": "struct Ad.Period",
        "members": [
          {
            "astId": 4663,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "mediaProxy",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 4665,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "spaceMetadata",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 4667,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "tokenMetadata",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 4669,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "saleStartTimestamp",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 4671,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "saleEndTimestamp",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 4673,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "displayStartTimestamp",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 4675,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "displayEndTimestamp",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 4678,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "pricing",
            "offset": 0,
            "slot": "7",
            "type": "t_enum(Pricing)4661"
          },
          {
            "astId": 4680,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "minPrice",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 4682,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "startPrice",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 4684,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "sold",
            "offset": 0,
            "slot": "10",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "352"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}