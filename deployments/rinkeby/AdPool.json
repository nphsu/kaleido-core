{
  "address": "0xe126AdB333d667BABD7C66554290627D0F012d8a",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nameRegistry",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "adPoolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "mediaProxy",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "spaceMetadata",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "tokenMetadata",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "saleStartTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "saleEndTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "displayStartTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "displayEndTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "enum Ad.Pricing",
              "name": "pricing",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "minPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startPrice",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "sold",
              "type": "bool"
            }
          ],
          "internalType": "struct Ad.Period",
          "name": "period",
          "type": "tuple"
        }
      ],
      "name": "addPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "spaceMetadata",
          "type": "string"
        }
      ],
      "name": "addSpace",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allPeriods",
      "outputs": [
        {
          "internalType": "address",
          "name": "mediaProxy",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "spaceMetadata",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenMetadata",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "saleStartTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "saleEndTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "displayStartTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "displayEndTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "enum Ad.Pricing",
          "name": "pricing",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "minPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startPrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "sold",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "deletePeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eventEmitterAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mediaFactoryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mediaProxyOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mediaRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nameRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "spaced",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x591cf25e9e63133c49eead11d1514ee2b1426499ee98c2e1df25f58803ab0bde",
  "receipt": {
    "to": null,
    "from": "0xCdfc500F7f0FCe1278aECb0340b523cD55b3EBbb",
    "contractAddress": "0xe126AdB333d667BABD7C66554290627D0F012d8a",
    "transactionIndex": 0,
    "gasUsed": "860960",
    "logsBloom": "0x
    "blockHash": "0x1ffcc8460e424a1b7d9c95dbed2bb784259c6c82e6a384de65c2a32a5b5da213",
    "transactionHash": "0x591cf25e9e63133c49eead11d1514ee2b1426499ee98c2e1df25f58803ab0bde",
    "logs": [],
    "blockNumber": 9753476,
    "cumulativeGasUsed": "860960",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x173E3862BaE7bD155a7a371Ee3b855de01aa63dd"
  ],
  "solcInputHash": "d3d38aa74a09225e7603340a0e8b265f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nameRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"adPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"mediaProxy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"spaceMetadata\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenMetadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"saleStartTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"displayStartTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"displayEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"enum Ad.Pricing\",\"name\":\"pricing\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"}],\"internalType\":\"struct Ad.Period\",\"name\":\"period\",\"type\":\"tuple\"}],\"name\":\"addPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"spaceMetadata\",\"type\":\"string\"}],\"name\":\"addSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPeriods\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"mediaProxy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"spaceMetadata\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenMetadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"saleStartTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"displayStartTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"displayEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"enum Ad.Pricing\",\"name\":\"pricing\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"deletePeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eventEmitterAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mediaFactoryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mediaProxyOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mediaRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nameRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"spaced\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Shumpei Koike - <shumpei.koike@bridges.inc>\",\"kind\":\"dev\",\"methods\":{\"adPoolAddress()\":{\"details\":\"Gets the address of AdPool.\"},\"eventEmitterAddress()\":{\"details\":\"Gets the address of EventEmitter.\"},\"mediaFactoryAddress()\":{\"details\":\"Gets the address of MediaFactory.\"},\"mediaRegistryAddress()\":{\"details\":\"Gets the address of MediaRegistry.\"},\"nameRegistryAddress()\":{\"details\":\"Gets the address of NameRegistry\"},\"owner()\":{\"details\":\"Gets the owner address.\"},\"vaultAddress()\":{\"details\":\"Gets the address of Vault.\"}},\"stateVariables\":{\"allPeriods\":{\"details\":\"tokenId <- metadata * displayStartTimestamp * displayEndTimestamp\"},\"spaced\":{\"details\":\"Returns spaceId that is tied with space metadata.\"}},\"title\":\"AdPool - stores all ads accorss every space.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/peripheries/AdPool.sol\":\"AdPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/accessors/NameAccessor.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\nimport \\\"../interfaces/INameRegistry.sol\\\";\\n\\n/// @title NameAccessor - manages the endpoints.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ncontract NameAccessor {\\n\\tINameRegistry internal _nameRegistry;\\n\\n\\t/// @dev Sets the address of NameRegistry.\\n\\t/// @param nameRegistry address of the NameRegistry\\n\\tfunction initialize(address nameRegistry) internal {\\n\\t\\t_nameRegistry = INameRegistry(nameRegistry);\\n\\t}\\n\\n\\t/// @dev Prevents calling a function from anyone except the accepted contracts.\\n\\tmodifier onlyAllowedContract() {\\n\\t\\trequire(_nameRegistry.allowedContracts(msg.sender), \\\"KD013\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t/// @dev Throws if not called by MediaFactory.\\n\\tmodifier onlyFactory() {\\n\\t\\trequire(msg.sender == mediaFactoryAddress(), \\\"KD010\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t/// @dev Throws if called by any account other than the owner.\\n\\tmodifier onlyOwner() {\\n\\t\\trequire(owner() == msg.sender, \\\"KD012\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t/// @dev Gets the address of NameRegistry\\n\\tfunction nameRegistryAddress() public view returns (address) {\\n\\t\\treturn address(_nameRegistry);\\n\\t}\\n\\n\\t/// @dev Gets the address of AdPool.\\n\\tfunction adPoolAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"AdPool\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of MediaFactory.\\n\\tfunction mediaFactoryAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"MediaFactory\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of MediaRegistry.\\n\\tfunction mediaRegistryAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"MediaRegistry\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of Vault.\\n\\tfunction vaultAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"Vault\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of EventEmitter.\\n\\tfunction eventEmitterAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"EventEmitter\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the owner address.\\n\\tfunction owner() public view returns (address) {\\n\\t\\treturn _nameRegistry.deployer();\\n\\t}\\n}\\n\",\"keccak256\":\"0x85d5e23e17c1039c5caa13452838ccdb57c5530e78353b5162dda1c5242376f0\",\"license\":\"UNLICENSED\"},\"contracts/common/BlockTimestamp.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\n/// @title BlockTimestamp - gets a block timestamp.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\nabstract contract BlockTimestamp {\\n\\t/// @dev Method that exists purely to be overridden for tests\\n\\tfunction _blockTimestamp() internal view virtual returns (uint256) {\\n\\t\\treturn block.timestamp;\\n\\t}\\n}\\n\",\"keccak256\":\"0x417bf100ecc94b19a01559e899f68e19777eae593c783d8280d13bcabc8e43a2\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IAdPool.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\nimport \\\"../libraries/Ad.sol\\\";\\n\\n/// @title IAdPool - stores all ads accorss every space.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IAdPool {\\n\\tfunction spaced(string memory spaceMetadata) external view returns (bool);\\n\\n\\tfunction addSpace(string memory spaceMetadata) external;\\n\\n\\tfunction addPeriod(uint256 tokenId, Ad.Period memory period) external;\\n\\n\\tfunction deletePeriod(uint256 tokenId) external;\\n\\n\\tfunction mediaProxyOf(uint256 tokenId) external view returns (address);\\n}\\n\",\"keccak256\":\"0xd9956cbe2f2d5ba08343229d69b8a7729aac3cca4a1e66d4daa3f27394979f0c\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IMediaRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\nimport \\\"../libraries/Ad.sol\\\";\\n\\n/// @title MediaRegistry - registers a list of media accounts.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IMediaRegistry {\\n\\tstruct Account {\\n\\t\\taddress proxy;\\n\\t\\taddress mediaEOA;\\n\\t\\tstring applicationMetadata;\\n\\t\\tstring updatableMetadata;\\n\\t}\\n\\n\\tfunction allAccounts(address proxy)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (\\n\\t\\t\\taddress,\\n\\t\\t\\taddress,\\n\\t\\t\\tstring memory,\\n\\t\\t\\tstring memory\\n\\t\\t);\\n\\n\\t/// @dev Adds media account.\\n\\t/// @param proxy address of the proxy contract\\n\\t/// @param applicationMetadata string of constant metadata for the defailts of the account\\n\\t/// @param updatableMetadata string of constant metadata for the defailts of the account\\n\\t/// @param mediaEOA address of the media account\\n\\tfunction addMedia(\\n\\t\\taddress proxy,\\n\\t\\tstring memory applicationMetadata,\\n\\t\\tstring memory updatableMetadata,\\n\\t\\taddress mediaEOA\\n\\t) external;\\n\\n\\t/// @dev Updates media account.\\n\\t/// @param metadata string of the account metadata\\n\\t/// @param mediaEOA address of the media account\\n\\tfunction updateMedia(address mediaEOA, string memory metadata) external;\\n\\n\\tfunction updateApplicationMetadata(address proxy, string memory metadata)\\n\\t\\texternal;\\n\\n\\t/// @dev Returns whether the account has created or not.\\n\\t/// @param proxy address of the proxy contract that represents an account.\\n\\tfunction created(address proxy) external view returns (bool);\\n\\n\\t/// @dev Returns the owner of the account.\\n\\t/// @param proxy address of the proxy contract that represents an account.\\n\\tfunction ownerOf(address proxy) external view returns (address);\\n}\\n\",\"keccak256\":\"0x63655aa8531480b3da0c4b3f6cd63d72c3ca678661fa52dd90e5ab1a89b43131\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/INameRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\n/// @title INameRegistry - saves a set of addresses used in the system.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface INameRegistry {\\n\\t/// @dev Sets the address associated with the key name.\\n\\t///      If the address is the contract, not an EOA, it is\\n\\t///      saved as the allowed contract list.\\n\\t/// @param key bytes32 of the key\\n\\t/// @param value address of the value\\n\\tfunction set(bytes32 key, address value) external;\\n\\n\\t/// @dev Gets the address associated with the key name.\\n\\t/// @param key bytes32 of the key\\n\\tfunction get(bytes32 key) external view returns (address);\\n\\n\\t/// @dev Returns whether or not the address is the one that we deployed.\\n\\t/// @param caller address of the msg.sender\\n\\tfunction allowedContracts(address caller) external returns (bool);\\n\\n\\t/// @dev Gets the deployer of NameRegistry.\\n\\tfunction deployer() external view returns (address);\\n}\\n\",\"keccak256\":\"0xb4612b34aa95a45ed84877f60adc23f5f8eb941a00a2644dc29ecea26c1c032f\",\"license\":\"UNLICENSED\"},\"contracts/libraries/Ad.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\nlibrary Ad {\\n\\tuint256 private constant _ID_LENGTH = 100000000000000000000000000000000;\\n\\t// 0.RRP     : Recommended Retail Price\\n\\t// 1.DUTCH   : Dutch Auction\\n\\t// 2.ENGLISH : English Acction\\n\\t// 3.OFFER   : Offered by Others\\n\\t// 4.OPEN    : Open Bid by revealing the content\\n\\tenum Pricing {\\n\\t\\tRRP,\\n\\t\\tDUTCH,\\n\\t\\tENGLISH,\\n\\t\\tOFFER,\\n\\t\\tOPEN\\n\\t}\\n\\tstruct Period {\\n\\t\\taddress mediaProxy;\\n\\t\\tstring spaceMetadata;\\n\\t\\tstring tokenMetadata;\\n\\t\\tuint256 saleStartTimestamp;\\n\\t\\tuint256 saleEndTimestamp;\\n\\t\\tuint256 displayStartTimestamp;\\n\\t\\tuint256 displayEndTimestamp;\\n\\t\\tPricing pricing;\\n\\t\\tuint256 minPrice;\\n\\t\\tuint256 startPrice;\\n\\t\\tbool sold;\\n\\t}\\n\\n\\tfunction id(\\n\\t\\tstring memory metadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp\\n\\t) public pure returns (uint256) {\\n\\t\\treturn\\n\\t\\t\\tuint256(\\n\\t\\t\\t\\tkeccak256(\\n\\t\\t\\t\\t\\tabi.encodePacked(metadata, displayStartTimestamp, displayEndTimestamp)\\n\\t\\t\\t\\t)\\n\\t\\t\\t) % _ID_LENGTH;\\n\\t}\\n}\\n\",\"keccak256\":\"0x98b8f7d36adbd4e0b75ef9c5a0ec7045e0661b9015a90beffa30004f35ff7039\",\"license\":\"UNLICENSED\"},\"contracts/peripheries/AdPool.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\nimport \\\"../accessors/NameAccessor.sol\\\";\\nimport \\\"../common/BlockTimestamp.sol\\\";\\nimport \\\"../interfaces/IAdPool.sol\\\";\\nimport \\\"../interfaces/IMediaRegistry.sol\\\";\\n\\n/// @title AdPool - stores all ads accorss every space.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ncontract AdPool is IAdPool, BlockTimestamp, NameAccessor {\\n\\t/// @dev tokenId <- metadata * displayStartTimestamp * displayEndTimestamp\\n\\tmapping(uint256 => Ad.Period) public allPeriods;\\n\\t/// @dev Returns spaceId that is tied with space metadata.\\n\\tmapping(string => bool) public spaced;\\n\\n\\tmodifier onlyProxies() {\\n\\t\\trequire(_mediaRegistry().ownerOf(msg.sender) != address(0x0), \\\"KD011\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\tconstructor(address _nameRegistry) {\\n\\t\\tinitialize(_nameRegistry);\\n\\t}\\n\\n\\t/// @inheritdoc IAdPool\\n\\tfunction addSpace(string memory spaceMetadata) external onlyProxies {\\n\\t\\tspaced[spaceMetadata] = true;\\n\\t}\\n\\n\\t/// @inheritdoc IAdPool\\n\\tfunction addPeriod(uint256 tokenId, Ad.Period memory period)\\n\\t\\texternal\\n\\t\\tonlyProxies\\n\\t{\\n\\t\\tallPeriods[tokenId] = period;\\n\\t}\\n\\n\\t/// @inheritdoc IAdPool\\n\\tfunction deletePeriod(uint256 tokenId) external onlyProxies {\\n\\t\\tdelete allPeriods[tokenId];\\n\\t}\\n\\n\\t/// @inheritdoc IAdPool\\n\\tfunction mediaProxyOf(uint256 tokenId) external view returns (address) {\\n\\t\\treturn allPeriods[tokenId].mediaProxy;\\n\\t}\\n\\n\\t/**\\n\\t * Accessors\\n\\t */\\n\\tfunction _mediaRegistry() internal view returns (IMediaRegistry) {\\n\\t\\treturn IMediaRegistry(mediaRegistryAddress());\\n\\t}\\n}\\n\",\"keccak256\":\"0x77766d8a879d626305955c3752843d13b9bd23263d2e6a0aa65e188f40512417\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610ebb380380610ebb83398101604081905261002f91610050565b600080546001600160a01b0319166001600160a01b03831617905550610080565b60006020828403121561006257600080fd5b81516001600160a01b038116811461007957600080fd5b9392505050565b610e2c8061008f6000396000f3fe608060405234801561001057600080fd5b50600436106100af5760003560e01c806310335241146100b457806327b7a2f5146100f3578063430bf08a146101045780634b455a511461010c57806365045a65146101215780636a58767e1461015f5780638da5cb5b146101675780638f6059d61461016f578063979c249114610177578063b3a0ebc91461018a578063b8926f2c146101b4578063c9cd71b5146101c7578063f0726291146101cf575b600080fd5b6100dd6100c23660046109bc565b6000908152600160205260409020546001600160a01b031690565b6040516100ea91906109d5565b60405180910390f35b6000546001600160a01b03166100dd565b6100dd6101d7565b61011f61011a3660046109bc565b61028b565b005b61014f61012f366004610ab4565b805160208183018101805160028252928201919093012091525460ff1681565b60405190151581526020016100ea565b6100dd6103c6565b6100dd6103fd565b6100dd61044c565b61011f610185366004610b34565b610482565b61019d6101983660046109bc565b61061d565b6040516100ea9b9a99989796959493929190610cb7565b61011f6101c2366004610ab4565b610795565b6100dd610876565b6100dd6108a6565b600080546040516415985d5b1d60da1b60208201526001600160a01b0390911690638eaa6ac0906025015b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161023691815260200190565b60206040518083038186803b15801561024e57600080fd5b505afa158015610262573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102869190610d5c565b905090565b60006102956108dc565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b81526004016102c091906109d5565b60206040518083038186803b1580156102d857600080fd5b505afa1580156102ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103109190610d5c565b6001600160a01b031614156103405760405162461bcd60e51b815260040161033790610d80565b60405180910390fd5b6000818152600160208190526040822080546001600160a01b0319168155919061036c908301826108e6565b61037a6002830160006108e6565b5060006003820181905560048201819055600582018190556006820181905560078201805460ff19908116909155600883018290556009830191909155600a9091018054909116905550565b600080546040516c4d65646961526567697374727960981b60208201526001600160a01b0390911690638eaa6ac090602d01610202565b60008060009054906101000a90046001600160a01b03166001600160a01b031663d5f394886040518163ffffffff1660e01b815260040160206040518083038186803b15801561024e57600080fd5b600080546040516b4d65646961466163746f727960a01b60208201526001600160a01b0390911690638eaa6ac090602c01610202565b600061048c6108dc565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b81526004016104b791906109d5565b60206040518083038186803b1580156104cf57600080fd5b505afa1580156104e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105079190610d5c565b6001600160a01b0316141561052e5760405162461bcd60e51b815260040161033790610d80565b6000828152600160208181526040909220835181546001600160a01b0319166001600160a01b039091161781558383015180518594929361057493908501920190610923565b5060408201518051610590916002840191602090910190610923565b50606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070160006101000a81548160ff021916908360048111156105e3576105e3610ca1565b02179055506101008201516008820155610120820151600982015561014090910151600a909101805460ff19169115159190911790555050565b6001602081905260009182526040909120805491810180546001600160a01b039093169261064a90610d9f565b80601f016020809104026020016040519081016040528092919081815260200182805461067690610d9f565b80156106c35780601f10610698576101008083540402835291602001916106c3565b820191906000526020600020905b8154815290600101906020018083116106a657829003601f168201915b5050505050908060020180546106d890610d9f565b80601f016020809104026020016040519081016040528092919081815260200182805461070490610d9f565b80156107515780601f1061072657610100808354040283529160200191610751565b820191906000526020600020905b81548152906001019060200180831161073457829003601f168201915b50505060038401546004850154600586015460068701546007880154600889015460098a0154600a909a015498999598949750929550909360ff918216939091168b565b600061079f6108dc565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b81526004016107ca91906109d5565b60206040518083038186803b1580156107e257600080fd5b505afa1580156107f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081a9190610d5c565b6001600160a01b031614156108415760405162461bcd60e51b815260040161033790610d80565b60016002826040516108539190610dda565b908152604051908190036020019020805491151560ff1990921691909117905550565b60008054604051651059141bdbdb60d21b60208201526001600160a01b0390911690638eaa6ac090602601610202565b600080546040516b22bb32b73a22b6b4ba3a32b960a11b60208201526001600160a01b0390911690638eaa6ac090602c01610202565b60006102866103c6565b5080546108f290610d9f565b6000825580601f10610902575050565b601f01602090049060005260206000209081019061092091906109a7565b50565b82805461092f90610d9f565b90600052602060002090601f0160209004810192826109515760008555610997565b82601f1061096a57805160ff1916838001178555610997565b82800160010185558215610997579182015b8281111561099757825182559160200191906001019061097c565b506109a39291506109a7565b5090565b5b808211156109a357600081556001016109a8565b6000602082840312156109ce57600080fd5b5035919050565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052604160045260246000fd5b60405161016081016001600160401b0381118282101715610a2257610a226109e9565b60405290565b600082601f830112610a3957600080fd5b81356001600160401b0380821115610a5357610a536109e9565b604051601f8301601f19908116603f01168101908282118183101715610a7b57610a7b6109e9565b81604052838152866020858801011115610a9457600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215610ac657600080fd5b81356001600160401b03811115610adc57600080fd5b610ae884828501610a28565b949350505050565b6001600160a01b038116811461092057600080fd5b8035610b1081610af0565b919050565b803560058110610b1057600080fd5b80358015158114610b1057600080fd5b60008060408385031215610b4757600080fd5b8235915060208301356001600160401b0380821115610b6557600080fd5b908401906101608287031215610b7a57600080fd5b610b826109ff565b610b8b83610b05565b8152602083013582811115610b9f57600080fd5b610bab88828601610a28565b602083015250604083013582811115610bc357600080fd5b610bcf88828601610a28565b604083015250606083013560608201526080830135608082015260a083013560a082015260c083013560c0820152610c0960e08401610b15565b60e0820152610100838101359082015261012080840135908201526101409150610c34828401610b24565b828201528093505050509250929050565b60005b83811015610c60578181015183820152602001610c48565b83811115610c6f576000848401525b50505050565b60008151808452610c8d816020860160208601610c45565b601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b038c16815261016060208201819052600090610cdc8382018e610c75565b90508281036040840152610cf0818d610c75565b9150508960608301528860808301528760a08301528660c083015260058610610d2957634e487b7160e01b600052602160045260246000fd5b8560e08301528461010083015283610120830152610d4c61014083018415159052565b9c9b505050505050505050505050565b600060208284031215610d6e57600080fd5b8151610d7981610af0565b9392505050565b6020808252600590820152644b4430313160d81b604082015260600190565b600181811c90821680610db357607f821691505b60208210811415610dd457634e487b7160e01b600052602260045260246000fd5b50919050565b60008251610dec818460208701610c45565b919091019291505056fea26469706673582212209d28dca746d18a61acc6fdf6c0b80c5758cbb20096241855e8a1788f02bb2ff564736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100af5760003560e01c806310335241146100b457806327b7a2f5146100f3578063430bf08a146101045780634b455a511461010c57806365045a65146101215780636a58767e1461015f5780638da5cb5b146101675780638f6059d61461016f578063979c249114610177578063b3a0ebc91461018a578063b8926f2c146101b4578063c9cd71b5146101c7578063f0726291146101cf575b600080fd5b6100dd6100c23660046109bc565b6000908152600160205260409020546001600160a01b031690565b6040516100ea91906109d5565b60405180910390f35b6000546001600160a01b03166100dd565b6100dd6101d7565b61011f61011a3660046109bc565b61028b565b005b61014f61012f366004610ab4565b805160208183018101805160028252928201919093012091525460ff1681565b60405190151581526020016100ea565b6100dd6103c6565b6100dd6103fd565b6100dd61044c565b61011f610185366004610b34565b610482565b61019d6101983660046109bc565b61061d565b6040516100ea9b9a99989796959493929190610cb7565b61011f6101c2366004610ab4565b610795565b6100dd610876565b6100dd6108a6565b600080546040516415985d5b1d60da1b60208201526001600160a01b0390911690638eaa6ac0906025015b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161023691815260200190565b60206040518083038186803b15801561024e57600080fd5b505afa158015610262573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102869190610d5c565b905090565b60006102956108dc565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b81526004016102c091906109d5565b60206040518083038186803b1580156102d857600080fd5b505afa1580156102ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103109190610d5c565b6001600160a01b031614156103405760405162461bcd60e51b815260040161033790610d80565b60405180910390fd5b6000818152600160208190526040822080546001600160a01b0319168155919061036c908301826108e6565b61037a6002830160006108e6565b5060006003820181905560048201819055600582018190556006820181905560078201805460ff19908116909155600883018290556009830191909155600a9091018054909116905550565b600080546040516c4d65646961526567697374727960981b60208201526001600160a01b0390911690638eaa6ac090602d01610202565b60008060009054906101000a90046001600160a01b03166001600160a01b031663d5f394886040518163ffffffff1660e01b815260040160206040518083038186803b15801561024e57600080fd5b600080546040516b4d65646961466163746f727960a01b60208201526001600160a01b0390911690638eaa6ac090602c01610202565b600061048c6108dc565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b81526004016104b791906109d5565b60206040518083038186803b1580156104cf57600080fd5b505afa1580156104e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105079190610d5c565b6001600160a01b0316141561052e5760405162461bcd60e51b815260040161033790610d80565b6000828152600160208181526040909220835181546001600160a01b0319166001600160a01b039091161781558383015180518594929361057493908501920190610923565b5060408201518051610590916002840191602090910190610923565b50606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070160006101000a81548160ff021916908360048111156105e3576105e3610ca1565b02179055506101008201516008820155610120820151600982015561014090910151600a909101805460ff19169115159190911790555050565b6001602081905260009182526040909120805491810180546001600160a01b039093169261064a90610d9f565b80601f016020809104026020016040519081016040528092919081815260200182805461067690610d9f565b80156106c35780601f10610698576101008083540402835291602001916106c3565b820191906000526020600020905b8154815290600101906020018083116106a657829003601f168201915b5050505050908060020180546106d890610d9f565b80601f016020809104026020016040519081016040528092919081815260200182805461070490610d9f565b80156107515780601f1061072657610100808354040283529160200191610751565b820191906000526020600020905b81548152906001019060200180831161073457829003601f168201915b50505060038401546004850154600586015460068701546007880154600889015460098a0154600a909a015498999598949750929550909360ff918216939091168b565b600061079f6108dc565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b81526004016107ca91906109d5565b60206040518083038186803b1580156107e257600080fd5b505afa1580156107f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081a9190610d5c565b6001600160a01b031614156108415760405162461bcd60e51b815260040161033790610d80565b60016002826040516108539190610dda565b908152604051908190036020019020805491151560ff1990921691909117905550565b60008054604051651059141bdbdb60d21b60208201526001600160a01b0390911690638eaa6ac090602601610202565b600080546040516b22bb32b73a22b6b4ba3a32b960a11b60208201526001600160a01b0390911690638eaa6ac090602c01610202565b60006102866103c6565b5080546108f290610d9f565b6000825580601f10610902575050565b601f01602090049060005260206000209081019061092091906109a7565b50565b82805461092f90610d9f565b90600052602060002090601f0160209004810192826109515760008555610997565b82601f1061096a57805160ff1916838001178555610997565b82800160010185558215610997579182015b8281111561099757825182559160200191906001019061097c565b506109a39291506109a7565b5090565b5b808211156109a357600081556001016109a8565b6000602082840312156109ce57600080fd5b5035919050565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052604160045260246000fd5b60405161016081016001600160401b0381118282101715610a2257610a226109e9565b60405290565b600082601f830112610a3957600080fd5b81356001600160401b0380821115610a5357610a536109e9565b604051601f8301601f19908116603f01168101908282118183101715610a7b57610a7b6109e9565b81604052838152866020858801011115610a9457600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215610ac657600080fd5b81356001600160401b03811115610adc57600080fd5b610ae884828501610a28565b949350505050565b6001600160a01b038116811461092057600080fd5b8035610b1081610af0565b919050565b803560058110610b1057600080fd5b80358015158114610b1057600080fd5b60008060408385031215610b4757600080fd5b8235915060208301356001600160401b0380821115610b6557600080fd5b908401906101608287031215610b7a57600080fd5b610b826109ff565b610b8b83610b05565b8152602083013582811115610b9f57600080fd5b610bab88828601610a28565b602083015250604083013582811115610bc357600080fd5b610bcf88828601610a28565b604083015250606083013560608201526080830135608082015260a083013560a082015260c083013560c0820152610c0960e08401610b15565b60e0820152610100838101359082015261012080840135908201526101409150610c34828401610b24565b828201528093505050509250929050565b60005b83811015610c60578181015183820152602001610c48565b83811115610c6f576000848401525b50505050565b60008151808452610c8d816020860160208601610c45565b601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b038c16815261016060208201819052600090610cdc8382018e610c75565b90508281036040840152610cf0818d610c75565b9150508960608301528860808301528760a08301528660c083015260058610610d2957634e487b7160e01b600052602160045260246000fd5b8560e08301528461010083015283610120830152610d4c61014083018415159052565b9c9b505050505050505050505050565b600060208284031215610d6e57600080fd5b8151610d7981610af0565b9392505050565b6020808252600590820152644b4430313160d81b604082015260600190565b600181811c90821680610db357607f821691505b60208210811415610dd457634e487b7160e01b600052602260045260246000fd5b50919050565b60008251610dec818460208701610c45565b919091019291505056fea26469706673582212209d28dca746d18a61acc6fdf6c0b80c5758cbb20096241855e8a1788f02bb2ff564736f6c63430008090033",
  "devdoc": {
    "author": "Shumpei Koike - <shumpei.koike@bridges.inc>",
    "kind": "dev",
    "methods": {
      "adPoolAddress()": {
        "details": "Gets the address of AdPool."
      },
      "eventEmitterAddress()": {
        "details": "Gets the address of EventEmitter."
      },
      "mediaFactoryAddress()": {
        "details": "Gets the address of MediaFactory."
      },
      "mediaRegistryAddress()": {
        "details": "Gets the address of MediaRegistry."
      },
      "nameRegistryAddress()": {
        "details": "Gets the address of NameRegistry"
      },
      "owner()": {
        "details": "Gets the owner address."
      },
      "vaultAddress()": {
        "details": "Gets the address of Vault."
      }
    },
    "stateVariables": {
      "allPeriods": {
        "details": "tokenId <- metadata * displayStartTimestamp * displayEndTimestamp"
      },
      "spaced": {
        "details": "Returns spaceId that is tied with space metadata."
      }
    },
    "title": "AdPool - stores all ads accorss every space.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1762,
        "contract": "contracts/peripheries/AdPool.sol:AdPool",
        "label": "_nameRegistry",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(INameRegistry)4285"
      },
      {
        "astId": 4712,
        "contract": "contracts/peripheries/AdPool.sol:AdPool",
        "label": "allPeriods",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Period)4320_storage)"
      },
      {
        "astId": 4717,
        "contract": "contracts/peripheries/AdPool.sol:AdPool",
        "label": "spaced",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(INameRegistry)4285": {
        "encoding": "inplace",
        "label": "contract INameRegistry",
        "numberOfBytes": "20"
      },
      "t_enum(Pricing)4296": {
        "encoding": "inplace",
        "label": "enum Ad.Pricing",
        "numberOfBytes": "1"
      },
      "t_mapping(t_string_memory_ptr,t_bool)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Period)4320_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Ad.Period)",
        "numberOfBytes": "32",
        "value": "t_struct(Period)4320_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Period)4320_storage": {
        "encoding": "inplace",
        "label": "struct Ad.Period",
        "members": [
          {
            "astId": 4298,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "mediaProxy",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 4300,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "spaceMetadata",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 4302,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "tokenMetadata",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 4304,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "saleStartTimestamp",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 4306,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "saleEndTimestamp",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 4308,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "displayStartTimestamp",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 4310,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "displayEndTimestamp",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 4313,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "pricing",
            "offset": 0,
            "slot": "7",
            "type": "t_enum(Pricing)4296"
          },
          {
            "astId": 4315,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "minPrice",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 4317,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "startPrice",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 4319,
            "contract": "contracts/peripheries/AdPool.sol:AdPool",
            "label": "sold",
            "offset": 0,
            "slot": "10",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "352"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}