{
  "address": "0xCdAb6128807730910f6A075A8741c320e86c061c",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nameRegistry",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "accept",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "accepted",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "acceptedContent",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "adPoolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "deniedReasons",
      "outputs": [
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "offensive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "offensive",
          "type": "bool"
        }
      ],
      "name": "denyProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "englishAuctionAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eventEmitterAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mediaFactoryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mediaRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nameRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "offerBidAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openBidAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalReviewAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "metadata",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "msgSender",
          "type": "address"
        }
      ],
      "name": "propose",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposed",
      "outputs": [
        {
          "internalType": "string",
          "name": "content",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "proposer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x2d862733c8f908e3018b22a4888161377de6d3dd994642eba97edf873009efec",
  "receipt": {
    "to": null,
    "from": "0xCdfc500F7f0FCe1278aECb0340b523cD55b3EBbb",
    "contractAddress": "0xCdAb6128807730910f6A075A8741c320e86c061c",
    "transactionIndex": 2,
    "gasUsed": "1084992",
    "logsBloom": "0x
    "blockHash": "0x725d7e2eee3ed9693fb99b92dd9ebb52fdcaa4e9319947404c089a22ffcf3d8f",
    "transactionHash": "0x2d862733c8f908e3018b22a4888161377de6d3dd994642eba97edf873009efec",
    "logs": [],
    "blockNumber": 9783768,
    "cumulativeGasUsed": "2482928",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xe31F45e53E31076406560E1A4f168cFd08114736"
  ],
  "solcInputHash": "5a69c2e6422d35e6b64c3dfdb0689225",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nameRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"accept\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"accepted\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"acceptedContent\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deniedReasons\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"offensive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"offensive\",\"type\":\"bool\"}],\"name\":\"denyProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"englishAuctionAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eventEmitterAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mediaFactoryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mediaRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nameRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"offerBidAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openBidAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalReviewAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"propose\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposed\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"proposer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"accept(uint256)\":{\"details\":\"Accepts the proposal.\",\"params\":{\"tokenId\":\"uint256 of the token ID\"}},\"acceptedContent(uint256)\":{\"details\":\"Returns the proposal content of the token.\",\"params\":{\"tokenId\":\"uint256 of the token ID\"}},\"adPoolAddress()\":{\"details\":\"Gets the address of AdPool.\"},\"denyProposal(uint256,string,bool)\":{\"details\":\"Denies the submitted proposal, mentioning what is the problem.\",\"params\":{\"offensive\":\"bool if the content would offend somebody\",\"reason\":\"string of the reason why it is rejected\",\"tokenId\":\"uint256 of the token ID\"}},\"englishAuctionAddress()\":{\"details\":\"Gets the address of EnglishAuction.\"},\"eventEmitterAddress()\":{\"details\":\"Gets the address of EventEmitter.\"},\"mediaFactoryAddress()\":{\"details\":\"Gets the address of MediaFactory.\"},\"mediaRegistryAddress()\":{\"details\":\"Gets the address of MediaRegistry.\"},\"nameRegistryAddress()\":{\"details\":\"Gets the address of NameRegistry\"},\"offerBidAddress()\":{\"details\":\"Gets the address of OfferBid.\"},\"openBidAddress()\":{\"details\":\"Gets the address of OpenBid.\"},\"owner()\":{\"details\":\"Gets the owner address.\"},\"proposalReviewAddress()\":{\"details\":\"Gets the address of ProposalReview.\"},\"propose(uint256,string,address)\":{\"details\":\"Proposes the metadata to the token you bought.      Users can propose many times as long as it is accepted.\",\"params\":{\"metadata\":\"string of the proposal metadata\",\"msgSender\":\"address of the msg.sender\",\"tokenId\":\"uint256 of the token ID\"}},\"proposer(uint256)\":{\"details\":\"Returns the proposer of the token.\",\"params\":{\"tokenId\":\"uint256 of the token ID\"}},\"vaultAddress()\":{\"details\":\"Gets the address of Vault.\"}},\"stateVariables\":{\"accepted\":{\"details\":\"Maps a tokenId with the content metadata.\"},\"deniedReasons\":{\"details\":\"Maps a tokenId with denied reasons.\"},\"proposed\":{\"details\":\"Maps a tokenId with the proposal content.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/peripheries/ProposalReview.sol\":\"ProposalReview\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/accessors/NameAccessor.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../interfaces/INameRegistry.sol\\\";\\n\\n/// @title NameAccessor - manages the endpoints.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ncontract NameAccessor {\\n\\tINameRegistry internal _nameRegistry;\\n\\n\\t/// @dev Sets the address of NameRegistry.\\n\\t/// @param nameRegistry address of the NameRegistry\\n\\tfunction initialize(address nameRegistry) internal {\\n\\t\\t_nameRegistry = INameRegistry(nameRegistry);\\n\\t}\\n\\n\\t/// @dev Prevents calling a function from anyone except the accepted contracts.\\n\\tmodifier onlyAllowedContract() {\\n\\t\\trequire(_nameRegistry.allowedContracts(msg.sender), \\\"KD013\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t/// @dev Throws if called by any account other than the owner.\\n\\tmodifier onlyOwner() {\\n\\t\\trequire(owner() == msg.sender, \\\"KD012\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t/// @dev Gets the address of NameRegistry\\n\\tfunction nameRegistryAddress() public view returns (address) {\\n\\t\\treturn address(_nameRegistry);\\n\\t}\\n\\n\\t/// @dev Gets the address of AdPool.\\n\\tfunction adPoolAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"AdPool\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of MediaFactory.\\n\\tfunction mediaFactoryAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"MediaFactory\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of MediaRegistry.\\n\\tfunction mediaRegistryAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"MediaRegistry\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of Vault.\\n\\tfunction vaultAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"Vault\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of EventEmitter.\\n\\tfunction eventEmitterAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"EventEmitter\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of EnglishAuction.\\n\\tfunction englishAuctionAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"EnglishAuction\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of OpenBid.\\n\\tfunction openBidAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"OpenBid\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of OfferBid.\\n\\tfunction offerBidAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"OfferBid\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the address of ProposalReview.\\n\\tfunction proposalReviewAddress() public view returns (address) {\\n\\t\\treturn _nameRegistry.get(keccak256(abi.encodePacked(\\\"ProposalReview\\\")));\\n\\t}\\n\\n\\t/// @dev Gets the owner address.\\n\\tfunction owner() public view returns (address) {\\n\\t\\treturn _nameRegistry.deployer();\\n\\t}\\n}\\n\",\"keccak256\":\"0x1cd127d9c865e6441a0039bfe6af64ac60f5cf5c338d27e9f928f2eec21ca244\",\"license\":\"UNLICENSED\"},\"contracts/common/BlockTimestamp.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\n/// @title BlockTimestamp - gets a block timestamp.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\nabstract contract BlockTimestamp {\\n\\t/// @dev Method that exists purely to be overridden for tests\\n\\tfunction _blockTimestamp() internal view virtual returns (uint256) {\\n\\t\\treturn block.timestamp;\\n\\t}\\n}\\n\",\"keccak256\":\"0x6991a9f03b7e615563901bb2fb1dadcb4fb6cf3f0e7c15a39d22d5929f530940\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IEnglishAuction.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../libraries/Sale.sol\\\";\\n\\n/// @title IEnglishAuction\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IEnglishAuction {\\n\\t/// @dev Bids to participate in an auction.\\n\\t///      It is defined as an English Auction.\\n\\t/// @param tokenId uint256 of the token ID\\n\\t/// @param sender address of the msg.sender\\n\\t/// @param amount uint256 of the msg.value\\n\\tfunction bid(\\n\\t\\tuint256 tokenId,\\n\\t\\taddress sender,\\n\\t\\tuint256 amount\\n\\t) external returns (Sale.Bidding memory);\\n\\n\\t/// @dev Receives the token you bidded if you are the successful bidder.\\n\\t/// @param tokenId uint256 of the token ID\\n\\tfunction receiveToken(uint256 tokenId) external returns (address, uint256);\\n\\n\\t/// @dev Returns the current price.\\n\\t/// @param tokenId uint256 of the token ID\\n\\tfunction currentPrice(uint256 tokenId) external view returns (uint256);\\n\\n\\tfunction bidding(uint256 tokenId) external view returns (Sale.Bidding memory);\\n}\\n\",\"keccak256\":\"0x10039d8981b4321e404958c819ead418f83b2e50df7fce30fa5847f33ab595e4\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IEventEmitter.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../libraries/Ad.sol\\\";\\n\\n/// @title IEventEmitter - emits events.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IEventEmitter {\\n\\tfunction emitNewSpace(string memory metadata) external;\\n\\n\\tfunction emitNewPeriod(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tuint256 saleStartTimestamp,\\n\\t\\tuint256 saleEndTimestamp,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\tAd.Pricing pricing,\\n\\t\\tuint256 minPrice\\n\\t) external;\\n\\n\\tfunction emitDeletePeriod(uint256 tokenId) external;\\n\\n\\tfunction emitBuy(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 msgValue,\\n\\t\\taddress msgSender,\\n\\t\\tuint256 blockTimestamp\\n\\t) external;\\n\\n\\tfunction emitBid(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 msgValue,\\n\\t\\taddress msgSender,\\n\\t\\tuint256 blockTimestamp\\n\\t) external;\\n\\n\\tfunction emitBidWithProposal(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 msgValue,\\n\\t\\taddress msgSender,\\n\\t\\tstring memory metadata,\\n\\t\\tuint256 blockTimestamp\\n\\t) external;\\n\\n\\tfunction emitSelectProposal(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 index,\\n\\t\\taddress successfulBidder,\\n\\t\\tstring memory reason\\n\\t) external;\\n\\n\\tfunction emitReceiveToken(\\n\\t\\tuint256 tokenId,\\n\\t\\tuint256 price,\\n\\t\\taddress buyer,\\n\\t\\tuint256 blockTimestamp\\n\\t) external;\\n\\n\\tfunction emitOfferPeriod(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\taddress sender,\\n\\t\\tuint256 price\\n\\t) external;\\n\\n\\tfunction emitCancelOffer(uint256 tokenId) external;\\n\\n\\tfunction emitAcceptOffer(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory spaceMetadata,\\n\\t\\tstring memory tokenMetadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp,\\n\\t\\tuint256 price\\n\\t) external;\\n\\n\\tfunction emitWithdraw(uint256 amount) external;\\n\\n\\tfunction emitPropose(uint256 tokenId, string memory metadata) external;\\n\\n\\tfunction emitAcceptProposal(uint256 tokenId, string memory metadata) external;\\n\\n\\tfunction emitDenyProposal(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory metadata,\\n\\t\\tstring memory reason,\\n\\t\\tbool offensive\\n\\t) external;\\n\\n\\tfunction emitTransferCustom(\\n\\t\\taddress from,\\n\\t\\taddress to,\\n\\t\\tuint256 tokenId\\n\\t) external;\\n\\n\\tfunction emitNewMedia(\\n\\t\\taddress proxy,\\n\\t\\taddress mediaEOA,\\n\\t\\tstring memory applicationMetadata,\\n\\t\\tstring memory updatableMetadata,\\n\\t\\tuint256 saltNonce\\n\\t) external;\\n\\n\\tfunction emitUpdateMedia(\\n\\t\\taddress proxy,\\n\\t\\taddress mediaEOA,\\n\\t\\tstring memory accountMetadata\\n\\t) external;\\n\\n\\tfunction emitPaymentFailure(address receiver, uint256 price) external;\\n\\n\\tfunction emitReceived(address receiver, uint256 price) external;\\n}\\n\",\"keccak256\":\"0x771735fe921d962611486dfed6cce0050c4a0ba7ece4a28678110ae3b0f67b6c\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IMediaRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../libraries/Ad.sol\\\";\\n\\n/// @title MediaRegistry - registers a list of media accounts.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IMediaRegistry {\\n\\tstruct Account {\\n\\t\\taddress proxy;\\n\\t\\taddress mediaEOA;\\n\\t\\tstring applicationMetadata;\\n\\t\\tstring updatableMetadata;\\n\\t}\\n\\n\\t/// @dev Returns account info.\\n\\t/// @param proxy address of the proxy contract address\\n\\tfunction allAccounts(address proxy)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (\\n\\t\\t\\taddress,\\n\\t\\t\\taddress,\\n\\t\\t\\tstring memory,\\n\\t\\t\\tstring memory\\n\\t\\t);\\n\\n\\t/// @dev Adds media account.\\n\\t/// @param proxy address of the proxy contract\\n\\t/// @param applicationMetadata string of constant metadata for the defailts of the account\\n\\t/// @param updatableMetadata string of constant metadata for the defailts of the account\\n\\t/// @param mediaEOA address of the media account\\n\\tfunction addMedia(\\n\\t\\taddress proxy,\\n\\t\\tstring memory applicationMetadata,\\n\\t\\tstring memory updatableMetadata,\\n\\t\\taddress mediaEOA\\n\\t) external;\\n\\n\\t/// @dev Updates media account.\\n\\t/// @param metadata string of the account metadata\\n\\t/// @param mediaEOA address of the media account\\n\\tfunction updateMedia(address mediaEOA, string memory metadata) external;\\n\\n\\tfunction updateApplicationMetadata(address proxy, string memory metadata)\\n\\t\\texternal;\\n\\n\\t/// @dev Returns whether the account has created or not.\\n\\t/// @param proxy address of the proxy contract that represents an account.\\n\\tfunction created(address proxy) external view returns (bool);\\n\\n\\t/// @dev Returns the owner of the account.\\n\\t/// @param proxy address of the proxy contract that represents an account.\\n\\tfunction ownerOf(address proxy) external view returns (address);\\n}\\n\",\"keccak256\":\"0xf60005370edf262e5e68ba96deb5fc8b7a0fcb1546ba8c4a6c1793017389c78b\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/INameRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\n/// @title INameRegistry - saves a set of addresses used in the system.\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface INameRegistry {\\n\\t/// @dev Sets the address associated with the key name.\\n\\t///      If the address is the contract, not an EOA, it is\\n\\t///      saved as the allowed contract list.\\n\\t/// @param key bytes32 of the key\\n\\t/// @param value address of the value\\n\\tfunction set(bytes32 key, address value) external;\\n\\n\\t/// @dev Gets the address associated with the key name.\\n\\t/// @param key bytes32 of the key\\n\\tfunction get(bytes32 key) external view returns (address);\\n\\n\\t/// @dev Returns whether or not the address is the one that we deployed.\\n\\t/// @param caller address of the msg.sender\\n\\tfunction allowedContracts(address caller) external returns (bool);\\n\\n\\t/// @dev Gets the deployer of NameRegistry.\\n\\tfunction deployer() external view returns (address);\\n}\\n\",\"keccak256\":\"0xa46fe7c81f01262c7daf69b1d7695a6dd507d5a4ab881dab731e3faa992dcb1d\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IProposalReview.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\n/// @title IProposalReview\\n/// @author Shumpei Koike - <shumpei.koike@bridges.inc>\\ninterface IProposalReview {\\n\\tstruct Denied {\\n\\t\\tstring reason;\\n\\t\\tbool offensive;\\n\\t}\\n\\tstruct Proposal {\\n\\t\\tstring content;\\n\\t\\taddress proposer;\\n\\t}\\n\\n\\t/// @dev Proposes the metadata to the token you bought.\\n\\t///      Users can propose many times as long as it is accepted.\\n\\t/// @param tokenId uint256 of the token ID\\n\\t/// @param metadata string of the proposal metadata\\n\\t/// @param msgSender address of the msg.sender\\n\\tfunction propose(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory metadata,\\n\\t\\taddress msgSender\\n\\t) external;\\n\\n\\t/// @dev Accepts the proposal.\\n\\t/// @param tokenId uint256 of the token ID\\n\\tfunction accept(uint256 tokenId) external;\\n\\n\\t/// @dev Denies the submitted proposal, mentioning what is the problem.\\n\\t/// @param tokenId uint256 of the token ID\\n\\t/// @param reason string of the reason why it is rejected\\n\\t/// @param offensive bool if the content would offend somebody\\n\\tfunction denyProposal(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory reason,\\n\\t\\tbool offensive\\n\\t) external;\\n\\n\\t/// @dev Returns the proposer of the token.\\n\\t/// @param tokenId uint256 of the token ID\\n\\tfunction proposer(uint256 tokenId) external view returns (address);\\n\\n\\t/// @dev Returns the proposal content of the token.\\n\\t/// @param tokenId uint256 of the token ID\\n\\tfunction acceptedContent(uint256 tokenId)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (string memory);\\n}\\n\",\"keccak256\":\"0xb9ec233e8bc5fe5c3eabe170a946c191d839af7cc8af334d4a7f59cac8c10f68\",\"license\":\"UNLICENSED\"},\"contracts/libraries/Ad.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nlibrary Ad {\\n\\tuint256 private constant _ID_LENGTH = 100000000000000000000000000000000;\\n\\t// 0.RRP     : Recommended Retail Price\\n\\t// 1.DUTCH   : Dutch Auction\\n\\t// 2.ENGLISH : English Acction\\n\\t// 3.OFFER   : Offered by Others\\n\\t// 4.OPEN    : Open Bid by revealing the content\\n\\tenum Pricing {\\n\\t\\tRRP,\\n\\t\\tDUTCH,\\n\\t\\tENGLISH,\\n\\t\\tOFFER,\\n\\t\\tOPEN\\n\\t}\\n\\tstruct Period {\\n\\t\\taddress mediaProxy;\\n\\t\\tstring spaceMetadata;\\n\\t\\tstring tokenMetadata;\\n\\t\\tuint256 saleStartTimestamp;\\n\\t\\tuint256 saleEndTimestamp;\\n\\t\\tuint256 displayStartTimestamp;\\n\\t\\tuint256 displayEndTimestamp;\\n\\t\\tPricing pricing;\\n\\t\\tuint256 minPrice;\\n\\t\\tuint256 startPrice;\\n\\t\\tbool sold;\\n\\t}\\n\\n\\tfunction id(\\n\\t\\tstring memory metadata,\\n\\t\\tuint256 displayStartTimestamp,\\n\\t\\tuint256 displayEndTimestamp\\n\\t) public pure returns (uint256) {\\n\\t\\treturn\\n\\t\\t\\tuint256(\\n\\t\\t\\t\\tkeccak256(\\n\\t\\t\\t\\t\\tabi.encodePacked(metadata, displayStartTimestamp, displayEndTimestamp)\\n\\t\\t\\t\\t)\\n\\t\\t\\t) % _ID_LENGTH;\\n\\t}\\n}\\n\",\"keccak256\":\"0x47955874c274fa881de288b6af7d7ea36130caf1d64c6e367316278f6e95fd07\",\"license\":\"UNLICENSED\"},\"contracts/libraries/Purchase.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"./Ad.sol\\\";\\n\\nlibrary Purchase {\\n\\tfunction checkBeforeBuy(Ad.Period memory period, uint256 msgValue)\\n\\t\\tpublic\\n\\t\\tpure\\n\\t{\\n\\t\\trequire(period.pricing == Ad.Pricing.RRP, \\\"KD120\\\");\\n\\t\\trequire(!period.sold, \\\"KD121\\\");\\n\\t\\trequire(period.minPrice == msgValue, \\\"KD122\\\");\\n\\t}\\n\\n\\tfunction checkBeforeBuyBasedOnTime(\\n\\t\\tAd.Period memory period,\\n\\t\\tuint256 currentPrice,\\n\\t\\tuint256 blockTimestamp,\\n\\t\\tuint256 msgValue\\n\\t) public pure {\\n\\t\\trequire(period.pricing == Ad.Pricing.DUTCH, \\\"KD123\\\");\\n\\t\\trequire(!period.sold, \\\"KD121\\\");\\n\\t\\trequire(currentPrice <= msgValue, \\\"KD122\\\");\\n\\t\\trequire(period.saleEndTimestamp >= blockTimestamp, \\\"KD129\\\");\\n\\t}\\n\\n\\tfunction checkBeforeBid(\\n\\t\\tAd.Period memory period,\\n\\t\\tuint256 currentPrice,\\n\\t\\tuint256 blockTimestamp,\\n\\t\\tuint256 msgValue\\n\\t) public pure {\\n\\t\\trequire(period.pricing == Ad.Pricing.ENGLISH, \\\"KD124\\\");\\n\\t\\trequire(!period.sold, \\\"KD121\\\");\\n\\t\\trequire(currentPrice < msgValue, \\\"KD122\\\");\\n\\t\\trequire(period.saleEndTimestamp >= blockTimestamp, \\\"KD129\\\");\\n\\t}\\n\\n\\tfunction checkBeforeBidWithProposal(\\n\\t\\tAd.Period memory period,\\n\\t\\tuint256 blockTimestamp,\\n\\t\\tuint256 msgValue\\n\\t) public pure {\\n\\t\\trequire(period.pricing == Ad.Pricing.OPEN, \\\"KD127\\\");\\n\\t\\trequire(!period.sold, \\\"KD121\\\");\\n\\t\\trequire(period.minPrice <= msgValue, \\\"KD122\\\");\\n\\t\\trequire(period.saleEndTimestamp >= blockTimestamp, \\\"KD129\\\");\\n\\t}\\n}\\n\",\"keccak256\":\"0x2d428de10bc0f94c1bf27f95c0daafb364619ecf63d28cae1d0fdf82f238f43f\",\"license\":\"UNLICENSED\"},\"contracts/libraries/Sale.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"./Ad.sol\\\";\\n\\nlibrary Sale {\\n\\tstruct Bidding {\\n\\t\\tuint256 tokenId;\\n\\t\\taddress bidder;\\n\\t\\tuint256 price;\\n\\t}\\n\\tstruct Offer {\\n\\t\\tstring spaceMetadata;\\n\\t\\tuint256 displayStartTimestamp;\\n\\t\\tuint256 displayEndTimestamp;\\n\\t\\taddress sender;\\n\\t\\tuint256 price;\\n\\t}\\n\\tstruct OpenBid {\\n\\t\\tuint256 tokenId;\\n\\t\\taddress sender;\\n\\t\\tuint256 price;\\n\\t\\tstring content;\\n\\t}\\n\\n\\tfunction startPrice(Ad.Period memory period) public pure returns (uint256) {\\n\\t\\tif (period.pricing == Ad.Pricing.RRP) {\\n\\t\\t\\treturn period.minPrice;\\n\\t\\t} else if (period.pricing == Ad.Pricing.DUTCH) {\\n\\t\\t\\treturn period.minPrice * 10;\\n\\t\\t} else if (period.pricing == Ad.Pricing.ENGLISH) {\\n\\t\\t\\treturn period.minPrice;\\n\\t\\t} else if (period.pricing == Ad.Pricing.OFFER) {\\n\\t\\t\\treturn period.minPrice;\\n\\t\\t} else if (period.pricing == Ad.Pricing.OPEN) {\\n\\t\\t\\treturn period.minPrice;\\n\\t\\t} else {\\n\\t\\t\\treturn 0;\\n\\t\\t}\\n\\t}\\n}\\n\",\"keccak256\":\"0x19a427a8ac429adf4fbe2f2a87c4a95e20c794fb99eaa0baa1ae69257541d9c2\",\"license\":\"UNLICENSED\"},\"contracts/peripheries/ProposalReview.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\nimport \\\"../libraries/Ad.sol\\\";\\nimport \\\"../libraries/Purchase.sol\\\";\\nimport \\\"../accessors/NameAccessor.sol\\\";\\nimport \\\"../common/BlockTimestamp.sol\\\";\\nimport \\\"../interfaces/IProposalReview.sol\\\";\\nimport \\\"../interfaces/IEventEmitter.sol\\\";\\nimport \\\"../interfaces/IEnglishAuction.sol\\\";\\nimport \\\"../interfaces/IMediaRegistry.sol\\\";\\n\\ncontract ProposalReview is IProposalReview, BlockTimestamp, NameAccessor {\\n\\t/// @dev Maps a tokenId with the proposal content.\\n\\tmapping(uint256 => Proposal) public proposed;\\n\\n\\t/// @dev Maps a tokenId with denied reasons.\\n\\tmapping(uint256 => Denied[]) public deniedReasons;\\n\\n\\t/// @dev Maps a tokenId with the content metadata.\\n\\tmapping(uint256 => string) public accepted;\\n\\n\\tmodifier onlyProxies() {\\n\\t\\trequire(_mediaRegistry().ownerOf(msg.sender) != address(0x0), \\\"KD011\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\tconstructor(address _nameRegistry) {\\n\\t\\tinitialize(_nameRegistry);\\n\\t}\\n\\n\\t/// @inheritdoc IProposalReview\\n\\tfunction propose(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory metadata,\\n\\t\\taddress msgSender\\n\\t) external virtual onlyProxies {\\n\\t\\trequire(bytes(accepted[tokenId]).length == 0, \\\"KD132\\\");\\n\\t\\tproposed[tokenId] = Proposal(metadata, msgSender);\\n\\t\\t_event().emitPropose(tokenId, metadata);\\n\\t}\\n\\n\\t/// @inheritdoc IProposalReview\\n\\tfunction accept(uint256 tokenId) external virtual onlyProxies {\\n\\t\\tstring memory metadata = proposed[tokenId].content;\\n\\t\\trequire(bytes(metadata).length != 0, \\\"KD130\\\");\\n\\t\\taccepted[tokenId] = metadata;\\n\\t\\tproposed[tokenId] = Proposal(\\\"\\\", proposed[tokenId].proposer);\\n\\t\\t_event().emitAcceptProposal(tokenId, metadata);\\n\\t}\\n\\n\\t/// @inheritdoc IProposalReview\\n\\tfunction denyProposal(\\n\\t\\tuint256 tokenId,\\n\\t\\tstring memory reason,\\n\\t\\tbool offensive\\n\\t) external virtual onlyProxies {\\n\\t\\tstring memory metadata = proposed[tokenId].content;\\n\\t\\trequire(bytes(metadata).length != 0, \\\"KD130\\\");\\n\\t\\tdeniedReasons[tokenId].push(Denied(reason, offensive));\\n\\t\\t_event().emitDenyProposal(tokenId, metadata, reason, offensive);\\n\\t}\\n\\n\\t/// @inheritdoc IProposalReview\\n\\tfunction proposer(uint256 tokenId) external view returns (address) {\\n\\t\\treturn proposed[tokenId].proposer;\\n\\t}\\n\\n\\t/// @inheritdoc IProposalReview\\n\\tfunction acceptedContent(uint256 tokenId)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (string memory)\\n\\t{\\n\\t\\treturn accepted[tokenId];\\n\\t}\\n\\n\\tfunction _event() internal view virtual returns (IEventEmitter) {\\n\\t\\treturn IEventEmitter(eventEmitterAddress());\\n\\t}\\n\\n\\tfunction _mediaRegistry() internal view returns (IMediaRegistry) {\\n\\t\\treturn IMediaRegistry(mediaRegistryAddress());\\n\\t}\\n}\\n\",\"keccak256\":\"0x554b2e43d4d37f31f23df01279fa5c85a9fb1e94d910c5e82c5bd1e3ffac825b\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516112c93803806112c983398101604081905261002f91610050565b600080546001600160a01b0319166001600160a01b03831617905550610080565b60006020828403121561006257600080fd5b81516001600160a01b038116811461007957600080fd5b9392505050565b61123a8061008f6000396000f3fe608060405234801561001057600080fd5b50600436106100f15760003560e01c80630106d8eb146100f657806313c1f2781461011457806319b05f49146101295780632231c1eb1461013c57806327b7a2f514610144578063430bf08a1461015557806358ba1bb81461015d57806365d13a901461017e5780636a58767e1461019f5780637cf175fb146101a7578063897615e6146101af5780638da5cb5b146101dc5780638f6059d6146101e4578063bd365642146101ec578063c9cd71b51461020c578063e2f5fc7814610214578063f07262911461021c578063f19b827314610224578063fb772f4b14610237575b600080fd5b6100fe61024a565b60405161010b9190610ea2565b60405180910390f35b610127610122366004610f58565b6102f8565b005b610127610137366004610fb7565b610531565b6100fe61078b565b6000546001600160a01b03166100fe565b6100fe6107bc565b61017061016b366004610fb7565b6107eb565b60405161010b92919061101d565b61019161018c366004611047565b610898565b60405161010b929190611069565b6100fe610964565b6100fe61099b565b6100fe6101bd366004610fb7565b600090815260016020819052604090912001546001600160a01b031690565b6100fe6109cd565b6100fe610a21565b6101ff6101fa366004610fb7565b610a57565b60405161010b919061108d565b6100fe610af9565b6100fe610b29565b6100fe610b61565b6101ff610232366004610fb7565b610b97565b6101276102453660046110bf565b610c31565b600080546040516d22b733b634b9b420bab1ba34b7b760911b60208201526001600160a01b0390911690638eaa6ac090602e015b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016102b291815260200190565b602060405180830381865afa1580156102cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f3919061110e565b905090565b6000610302610df5565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b815260040161032d9190610ea2565b602060405180830381865afa15801561034a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036e919061110e565b6001600160a01b0316141561039e5760405162461bcd60e51b81526004016103959061112b565b60405180910390fd5b600083815260016020526040812080546103b79061114a565b80601f01602080910402602001604051908101604052809291908181526020018280546103e39061114a565b80156104305780601f1061040557610100808354040283529160200191610430565b820191906000526020600020905b81548152906001019060200180831161041357829003601f168201915b505050505090508051600014156104595760405162461bcd60e51b815260040161039590611185565b600084815260026020818152604080842081518083019092528782528615158284015280546001810182559085529382902081518051929590940201926104a4928492910190610e09565b50602091909101516001909101805460ff19169115159190911790556104c8610dff565b6001600160a01b0316633ebf7371858386866040518563ffffffff1660e01b81526004016104f994939291906111a4565b600060405180830381600087803b15801561051357600080fd5b505af1158015610527573d6000803e3d6000fd5b5050505050505050565b600061053b610df5565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b81526004016105669190610ea2565b602060405180830381865afa158015610583573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a7919061110e565b6001600160a01b031614156105ce5760405162461bcd60e51b81526004016103959061112b565b600081815260016020526040812080546105e79061114a565b80601f01602080910402602001604051908101604052809291908181526020018280546106139061114a565b80156106605780601f1061063557610100808354040283529160200191610660565b820191906000526020600020905b81548152906001019060200180831161064357829003601f168201915b505050505090508051600014156106895760405162461bcd60e51b815260040161039590611185565b600082815260036020908152604090912082516106a892840190610e09565b50604080516060810182526000818301818152825284815260016020818152938220808201546001600160a01b03168585015291869052835281518051929391926106f69284920190610e09565b5060209190910151600190910180546001600160a01b0319166001600160a01b03909216919091179055610728610dff565b6001600160a01b031663746f1b2083836040518363ffffffff1660e01b81526004016107559291906111e3565b600060405180830381600087803b15801561076f57600080fd5b505af1158015610783573d6000803e3d6000fd5b505050505050565b600080546040516613dc195b909a5960ca1b60208201526001600160a01b0390911690638eaa6ac09060270161027e565b600080546040516415985d5b1d60da1b60208201526001600160a01b0390911690638eaa6ac09060250161027e565b6001602052600090815260409020805481906108069061114a565b80601f01602080910402602001604051908101604052809291908181526020018280546108329061114a565b801561087f5780601f106108545761010080835404028352916020019161087f565b820191906000526020600020905b81548152906001019060200180831161086257829003601f168201915b505050600190930154919250506001600160a01b031682565b600260205281600052604060002081815481106108b457600080fd5b9060005260206000209060020201600091509150508060000180546108d89061114a565b80601f01602080910402602001604051908101604052809291908181526020018280546109049061114a565b80156109515780601f1061092657610100808354040283529160200191610951565b820191906000526020600020905b81548152906001019060200180831161093457829003601f168201915b5050506001909301549192505060ff1682565b600080546040516c4d65646961526567697374727960981b60208201526001600160a01b0390911690638eaa6ac090602d0161027e565b600080546040516713d999995c909a5960c21b60208201526001600160a01b0390911690638eaa6ac09060280161027e565b60008060009054906101000a90046001600160a01b03166001600160a01b031663d5f394886040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102cf573d6000803e3d6000fd5b600080546040516b4d65646961466163746f727960a01b60208201526001600160a01b0390911690638eaa6ac090602c0161027e565b6000818152600360205260409020805460609190610a749061114a565b80601f0160208091040260200160405190810160405280929190818152602001828054610aa09061114a565b8015610aed5780601f10610ac257610100808354040283529160200191610aed565b820191906000526020600020905b815481529060010190602001808311610ad057829003601f168201915b50505050509050919050565b60008054604051651059141bdbdb60d21b60208201526001600160a01b0390911690638eaa6ac09060260161027e565b600080546040516d50726f706f73616c52657669657760901b60208201526001600160a01b0390911690638eaa6ac090602e0161027e565b600080546040516b22bb32b73a22b6b4ba3a32b960a11b60208201526001600160a01b0390911690638eaa6ac090602c0161027e565b60036020526000908152604090208054610bb09061114a565b80601f0160208091040260200160405190810160405280929190818152602001828054610bdc9061114a565b8015610c295780601f10610bfe57610100808354040283529160200191610c29565b820191906000526020600020905b815481529060010190602001808311610c0c57829003601f168201915b505050505081565b6000610c3b610df5565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b8152600401610c669190610ea2565b602060405180830381865afa158015610c83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca7919061110e565b6001600160a01b03161415610cce5760405162461bcd60e51b81526004016103959061112b565b60008381526003602052604090208054610ce79061114a565b159050610d1e5760405162461bcd60e51b815260206004820152600560248201526425a218999960d91b6044820152606401610395565b6040805180820182528381526001600160a01b038316602080830191909152600086815260018252929092208151805192939192610d5f9284920190610e09565b5060209190910151600190910180546001600160a01b0319166001600160a01b03909216919091179055610d91610dff565b6001600160a01b0316635bcefb5384846040518363ffffffff1660e01b8152600401610dbe9291906111e3565b600060405180830381600087803b158015610dd857600080fd5b505af1158015610dec573d6000803e3d6000fd5b50505050505050565b60006102f3610964565b60006102f3610b61565b828054610e159061114a565b90600052602060002090601f016020900481019282610e375760008555610e7d565b82601f10610e5057805160ff1916838001178555610e7d565b82800160010185558215610e7d579182015b82811115610e7d578251825591602001919060010190610e62565b50610e89929150610e8d565b5090565b5b80821115610e895760008155600101610e8e565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610edd57600080fd5b81356001600160401b0380821115610ef757610ef7610eb6565b604051601f8301601f19908116603f01168101908282118183101715610f1f57610f1f610eb6565b81604052838152866020858801011115610f3857600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610f6d57600080fd5b8335925060208401356001600160401b03811115610f8a57600080fd5b610f9686828701610ecc565b92505060408401358015158114610fac57600080fd5b809150509250925092565b600060208284031215610fc957600080fd5b5035919050565b6000815180845260005b81811015610ff657602081850181015186830182015201610fda565b81811115611008576000602083870101525b50601f01601f19169290920160200192915050565b6040815260006110306040830185610fd0565b905060018060a01b03831660208301529392505050565b6000806040838503121561105a57600080fd5b50508035926020909101359150565b60408152600061107c6040830185610fd0565b905082151560208301529392505050565b6020815260006110a06020830184610fd0565b9392505050565b6001600160a01b03811681146110bc57600080fd5b50565b6000806000606084860312156110d457600080fd5b8335925060208401356001600160401b038111156110f157600080fd5b6110fd86828701610ecc565b9250506040840135610fac816110a7565b60006020828403121561112057600080fd5b81516110a0816110a7565b6020808252600590820152644b4430313160d81b604082015260600190565b600181811c9082168061115e57607f821691505b6020821081141561117f57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526005908201526404b443133360dc1b604082015260600190565b8481526080602082015260006111bd6080830186610fd0565b82810360408401526111cf8186610fd0565b915050821515606083015295945050505050565b8281526040602082015260006111fc6040830184610fd0565b94935050505056fea2646970667358221220f140efe3111558424fdc73b3bd4c37cdbd8ef6148eac5cda98e1e192af75aaf164736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f15760003560e01c80630106d8eb146100f657806313c1f2781461011457806319b05f49146101295780632231c1eb1461013c57806327b7a2f514610144578063430bf08a1461015557806358ba1bb81461015d57806365d13a901461017e5780636a58767e1461019f5780637cf175fb146101a7578063897615e6146101af5780638da5cb5b146101dc5780638f6059d6146101e4578063bd365642146101ec578063c9cd71b51461020c578063e2f5fc7814610214578063f07262911461021c578063f19b827314610224578063fb772f4b14610237575b600080fd5b6100fe61024a565b60405161010b9190610ea2565b60405180910390f35b610127610122366004610f58565b6102f8565b005b610127610137366004610fb7565b610531565b6100fe61078b565b6000546001600160a01b03166100fe565b6100fe6107bc565b61017061016b366004610fb7565b6107eb565b60405161010b92919061101d565b61019161018c366004611047565b610898565b60405161010b929190611069565b6100fe610964565b6100fe61099b565b6100fe6101bd366004610fb7565b600090815260016020819052604090912001546001600160a01b031690565b6100fe6109cd565b6100fe610a21565b6101ff6101fa366004610fb7565b610a57565b60405161010b919061108d565b6100fe610af9565b6100fe610b29565b6100fe610b61565b6101ff610232366004610fb7565b610b97565b6101276102453660046110bf565b610c31565b600080546040516d22b733b634b9b420bab1ba34b7b760911b60208201526001600160a01b0390911690638eaa6ac090602e015b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016102b291815260200190565b602060405180830381865afa1580156102cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f3919061110e565b905090565b6000610302610df5565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b815260040161032d9190610ea2565b602060405180830381865afa15801561034a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036e919061110e565b6001600160a01b0316141561039e5760405162461bcd60e51b81526004016103959061112b565b60405180910390fd5b600083815260016020526040812080546103b79061114a565b80601f01602080910402602001604051908101604052809291908181526020018280546103e39061114a565b80156104305780601f1061040557610100808354040283529160200191610430565b820191906000526020600020905b81548152906001019060200180831161041357829003601f168201915b505050505090508051600014156104595760405162461bcd60e51b815260040161039590611185565b600084815260026020818152604080842081518083019092528782528615158284015280546001810182559085529382902081518051929590940201926104a4928492910190610e09565b50602091909101516001909101805460ff19169115159190911790556104c8610dff565b6001600160a01b0316633ebf7371858386866040518563ffffffff1660e01b81526004016104f994939291906111a4565b600060405180830381600087803b15801561051357600080fd5b505af1158015610527573d6000803e3d6000fd5b5050505050505050565b600061053b610df5565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b81526004016105669190610ea2565b602060405180830381865afa158015610583573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a7919061110e565b6001600160a01b031614156105ce5760405162461bcd60e51b81526004016103959061112b565b600081815260016020526040812080546105e79061114a565b80601f01602080910402602001604051908101604052809291908181526020018280546106139061114a565b80156106605780601f1061063557610100808354040283529160200191610660565b820191906000526020600020905b81548152906001019060200180831161064357829003601f168201915b505050505090508051600014156106895760405162461bcd60e51b815260040161039590611185565b600082815260036020908152604090912082516106a892840190610e09565b50604080516060810182526000818301818152825284815260016020818152938220808201546001600160a01b03168585015291869052835281518051929391926106f69284920190610e09565b5060209190910151600190910180546001600160a01b0319166001600160a01b03909216919091179055610728610dff565b6001600160a01b031663746f1b2083836040518363ffffffff1660e01b81526004016107559291906111e3565b600060405180830381600087803b15801561076f57600080fd5b505af1158015610783573d6000803e3d6000fd5b505050505050565b600080546040516613dc195b909a5960ca1b60208201526001600160a01b0390911690638eaa6ac09060270161027e565b600080546040516415985d5b1d60da1b60208201526001600160a01b0390911690638eaa6ac09060250161027e565b6001602052600090815260409020805481906108069061114a565b80601f01602080910402602001604051908101604052809291908181526020018280546108329061114a565b801561087f5780601f106108545761010080835404028352916020019161087f565b820191906000526020600020905b81548152906001019060200180831161086257829003601f168201915b505050600190930154919250506001600160a01b031682565b600260205281600052604060002081815481106108b457600080fd5b9060005260206000209060020201600091509150508060000180546108d89061114a565b80601f01602080910402602001604051908101604052809291908181526020018280546109049061114a565b80156109515780601f1061092657610100808354040283529160200191610951565b820191906000526020600020905b81548152906001019060200180831161093457829003601f168201915b5050506001909301549192505060ff1682565b600080546040516c4d65646961526567697374727960981b60208201526001600160a01b0390911690638eaa6ac090602d0161027e565b600080546040516713d999995c909a5960c21b60208201526001600160a01b0390911690638eaa6ac09060280161027e565b60008060009054906101000a90046001600160a01b03166001600160a01b031663d5f394886040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102cf573d6000803e3d6000fd5b600080546040516b4d65646961466163746f727960a01b60208201526001600160a01b0390911690638eaa6ac090602c0161027e565b6000818152600360205260409020805460609190610a749061114a565b80601f0160208091040260200160405190810160405280929190818152602001828054610aa09061114a565b8015610aed5780601f10610ac257610100808354040283529160200191610aed565b820191906000526020600020905b815481529060010190602001808311610ad057829003601f168201915b50505050509050919050565b60008054604051651059141bdbdb60d21b60208201526001600160a01b0390911690638eaa6ac09060260161027e565b600080546040516d50726f706f73616c52657669657760901b60208201526001600160a01b0390911690638eaa6ac090602e0161027e565b600080546040516b22bb32b73a22b6b4ba3a32b960a11b60208201526001600160a01b0390911690638eaa6ac090602c0161027e565b60036020526000908152604090208054610bb09061114a565b80601f0160208091040260200160405190810160405280929190818152602001828054610bdc9061114a565b8015610c295780601f10610bfe57610100808354040283529160200191610c29565b820191906000526020600020905b815481529060010190602001808311610c0c57829003601f168201915b505050505081565b6000610c3b610df5565b6001600160a01b03166314afd79e336040518263ffffffff1660e01b8152600401610c669190610ea2565b602060405180830381865afa158015610c83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca7919061110e565b6001600160a01b03161415610cce5760405162461bcd60e51b81526004016103959061112b565b60008381526003602052604090208054610ce79061114a565b159050610d1e5760405162461bcd60e51b815260206004820152600560248201526425a218999960d91b6044820152606401610395565b6040805180820182528381526001600160a01b038316602080830191909152600086815260018252929092208151805192939192610d5f9284920190610e09565b5060209190910151600190910180546001600160a01b0319166001600160a01b03909216919091179055610d91610dff565b6001600160a01b0316635bcefb5384846040518363ffffffff1660e01b8152600401610dbe9291906111e3565b600060405180830381600087803b158015610dd857600080fd5b505af1158015610dec573d6000803e3d6000fd5b50505050505050565b60006102f3610964565b60006102f3610b61565b828054610e159061114a565b90600052602060002090601f016020900481019282610e375760008555610e7d565b82601f10610e5057805160ff1916838001178555610e7d565b82800160010185558215610e7d579182015b82811115610e7d578251825591602001919060010190610e62565b50610e89929150610e8d565b5090565b5b80821115610e895760008155600101610e8e565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610edd57600080fd5b81356001600160401b0380821115610ef757610ef7610eb6565b604051601f8301601f19908116603f01168101908282118183101715610f1f57610f1f610eb6565b81604052838152866020858801011115610f3857600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610f6d57600080fd5b8335925060208401356001600160401b03811115610f8a57600080fd5b610f9686828701610ecc565b92505060408401358015158114610fac57600080fd5b809150509250925092565b600060208284031215610fc957600080fd5b5035919050565b6000815180845260005b81811015610ff657602081850181015186830182015201610fda565b81811115611008576000602083870101525b50601f01601f19169290920160200192915050565b6040815260006110306040830185610fd0565b905060018060a01b03831660208301529392505050565b6000806040838503121561105a57600080fd5b50508035926020909101359150565b60408152600061107c6040830185610fd0565b905082151560208301529392505050565b6020815260006110a06020830184610fd0565b9392505050565b6001600160a01b03811681146110bc57600080fd5b50565b6000806000606084860312156110d457600080fd5b8335925060208401356001600160401b038111156110f157600080fd5b6110fd86828701610ecc565b9250506040840135610fac816110a7565b60006020828403121561112057600080fd5b81516110a0816110a7565b6020808252600590820152644b4430313160d81b604082015260600190565b600181811c9082168061115e57607f821691505b6020821081141561117f57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526005908201526404b443133360dc1b604082015260600190565b8481526080602082015260006111bd6080830186610fd0565b82810360408401526111cf8186610fd0565b915050821515606083015295945050505050565b8281526040602082015260006111fc6040830184610fd0565b94935050505056fea2646970667358221220f140efe3111558424fdc73b3bd4c37cdbd8ef6148eac5cda98e1e192af75aaf164736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "accept(uint256)": {
        "details": "Accepts the proposal.",
        "params": {
          "tokenId": "uint256 of the token ID"
        }
      },
      "acceptedContent(uint256)": {
        "details": "Returns the proposal content of the token.",
        "params": {
          "tokenId": "uint256 of the token ID"
        }
      },
      "adPoolAddress()": {
        "details": "Gets the address of AdPool."
      },
      "denyProposal(uint256,string,bool)": {
        "details": "Denies the submitted proposal, mentioning what is the problem.",
        "params": {
          "offensive": "bool if the content would offend somebody",
          "reason": "string of the reason why it is rejected",
          "tokenId": "uint256 of the token ID"
        }
      },
      "englishAuctionAddress()": {
        "details": "Gets the address of EnglishAuction."
      },
      "eventEmitterAddress()": {
        "details": "Gets the address of EventEmitter."
      },
      "mediaFactoryAddress()": {
        "details": "Gets the address of MediaFactory."
      },
      "mediaRegistryAddress()": {
        "details": "Gets the address of MediaRegistry."
      },
      "nameRegistryAddress()": {
        "details": "Gets the address of NameRegistry"
      },
      "offerBidAddress()": {
        "details": "Gets the address of OfferBid."
      },
      "openBidAddress()": {
        "details": "Gets the address of OpenBid."
      },
      "owner()": {
        "details": "Gets the owner address."
      },
      "proposalReviewAddress()": {
        "details": "Gets the address of ProposalReview."
      },
      "propose(uint256,string,address)": {
        "details": "Proposes the metadata to the token you bought.      Users can propose many times as long as it is accepted.",
        "params": {
          "metadata": "string of the proposal metadata",
          "msgSender": "address of the msg.sender",
          "tokenId": "uint256 of the token ID"
        }
      },
      "proposer(uint256)": {
        "details": "Returns the proposer of the token.",
        "params": {
          "tokenId": "uint256 of the token ID"
        }
      },
      "vaultAddress()": {
        "details": "Gets the address of Vault."
      }
    },
    "stateVariables": {
      "accepted": {
        "details": "Maps a tokenId with the content metadata."
      },
      "deniedReasons": {
        "details": "Maps a tokenId with denied reasons."
      },
      "proposed": {
        "details": "Maps a tokenId with the proposal content."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1889,
        "contract": "contracts/peripheries/ProposalReview.sol:ProposalReview",
        "label": "_nameRegistry",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(INameRegistry)3999"
      },
      {
        "astId": 7199,
        "contract": "contracts/peripheries/ProposalReview.sol:ProposalReview",
        "label": "proposed",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Proposal)4122_storage)"
      },
      {
        "astId": 7206,
        "contract": "contracts/peripheries/ProposalReview.sol:ProposalReview",
        "label": "deniedReasons",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_array(t_struct(Denied)4117_storage)dyn_storage)"
      },
      {
        "astId": 7211,
        "contract": "contracts/peripheries/ProposalReview.sol:ProposalReview",
        "label": "accepted",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_string_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Denied)4117_storage)dyn_storage": {
        "base": "t_struct(Denied)4117_storage",
        "encoding": "dynamic_array",
        "label": "struct IProposalReview.Denied[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(INameRegistry)3999": {
        "encoding": "inplace",
        "label": "contract INameRegistry",
        "numberOfBytes": "20"
      },
      "t_mapping(t_uint256,t_array(t_struct(Denied)4117_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct IProposalReview.Denied[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(Denied)4117_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_uint256,t_struct(Proposal)4122_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct IProposalReview.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)4122_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Denied)4117_storage": {
        "encoding": "inplace",
        "label": "struct IProposalReview.Denied",
        "members": [
          {
            "astId": 4114,
            "contract": "contracts/peripheries/ProposalReview.sol:ProposalReview",
            "label": "reason",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 4116,
            "contract": "contracts/peripheries/ProposalReview.sol:ProposalReview",
            "label": "offensive",
            "offset": 0,
            "slot": "1",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Proposal)4122_storage": {
        "encoding": "inplace",
        "label": "struct IProposalReview.Proposal",
        "members": [
          {
            "astId": 4119,
            "contract": "contracts/peripheries/ProposalReview.sol:ProposalReview",
            "label": "content",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 4121,
            "contract": "contracts/peripheries/ProposalReview.sol:ProposalReview",
            "label": "proposer",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}